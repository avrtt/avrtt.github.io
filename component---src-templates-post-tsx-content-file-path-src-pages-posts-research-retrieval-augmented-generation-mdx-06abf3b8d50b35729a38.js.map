{"version":3,"file":"component---src-templates-post-tsx-content-file-path-src-pages-posts-research-retrieval-augmented-generation-mdx-06abf3b8d50b35729a38.js","mappings":"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","sources":["webpack://avrtt.blog/./src/pages/posts/research/retrieval_augmented_generation.mdx","webpack://avrtt.blog/./src/templates/post.tsx","webpack://avrtt.blog/./src/components/Latex/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/**(intro: a quote, catchphrase, joke, etc.)**/\n/*\n\nhttps://habr.com/ru/articles/779526/\nhttps://www.aporia.com/learn/understanding-the-role-of-embeddings-in-rag-llms/\nhttps://zilliz.com/learn/guide-to-chunking-strategies-for-rag\n\n*/\n/*\n\n1. introduction\n- What is retrieval-augmented generation\n- Historical context and origins\n- Importance in machine learning and data science\n- Key components of RAG systems\n2. foundational concepts\n- Understanding retrieval systems\n- Types of retrieval systems (e.g., vector-based, keyword-based)\n- Metrics for evaluating retrieval performance\n- The synergy between retrieval and generation\n- etc.\n3. architecture of RAG systems\n- High-level architecture\n- The retrieval module\n- Indexing techniques\n- Retrieval algorithms (e.g., BM25, dense embeddings)\n- The generation module\n- Integration of retrieved data with generative models\n- Techniques for conditioning generation on retrieved data\n- End-to-end training and fine-tuning\n4. types of retrieval-augmented generation models\n- Open-domain question answering models\n- Dialogue systems with retrieval augmentation\n- Summarization with external data retrieval\n- Hybrid systems combining RAG with other ML techniques\n- other, if any\n5. key challenges in RAG systems\n- Scalability and efficiency of retrieval\n- Ensuring relevance of retrieved data\n- Mitigating hallucination in generation\n- Handling noisy or incomplete data\n- Balancing retrieval and generation in training\n6. evaluation of RAG systems\n- Metrics for retrieval\n- Metrics for generation\n- Unified evaluation frameworks for RAG systems\n- Human evaluation approaches\n7. applications and use cases\n8. tools and frameworks for implementing RAG\n- Popular libraries and tools (e.g., Hugging Face, FAISS, ElasticSearch)\n- Deployment considerations for RAG in production\n9. advancements in RAG research\n- Emerging trends and techniques\n- Advances in pre-trained language models\n- Cross-lingual and multimodal retrieval-augmented systems\n- RAG for low-resource languages and domains\n- etc.\n10. Building a complex RAG system step by step\n- Code blocks for each step\n11. future directions\n- Improving interpretability and transparency\n- Advances in dynamic retrieval and adaptive generation\n- Role of RAG in AGI (artificial general intelligence)\n\n*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Highlight from \"../../../components/Highlight\";\nimport Code from \"../../../components/Code\";\nimport Latex from \"../../../components/Latex\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    a: \"a\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    ol: \"ol\",\n    h2: \"h2\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, \"\\n\", React.createElement(\"br\"), \"\\n\", \"\\n\", \"\\n\", React.createElement(_components.p, null, \"Retrieval-augmented generation (RAG) represents a cutting-edge methodology within the broader field of machine learning and natural language processing, specifically bridging information retrieval and text generation in novel ways. In essence, a RAG system augments the prompt or query submitted to a large language model (LLM) by incorporating additional, contextually relevant data retrieved from external sources. The objective is to improve factual consistency, reduce hallucinations in generation, and enable richer, more knowledge-intensive outputs.\"), \"\\n\", React.createElement(_components.p, null, \"As large language models have grown in scale and complexity, they demonstrate impressive text-generation capabilities yet remain limited by the constraints of their training data. While pre-trained models hold vast amounts of in-distribution knowledge, they often struggle to access timely or domain-specific information. Retrieval-augmented generation attempts to mitigate these issues by designing an architecture where an external knowledge store (often in the form of a database, vector index, or combination of retrieval systems) is queried for relevant content, which is then combined with the user's input and finally used to condition the generation process. This approach leverages the best of both worlds: specialized retrieval capabilities (relevance ranking, vector search, lexical matching, etc.) alongside the powerful language modeling abilities of generative models.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"what-is-retrieval-augmented-generation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#what-is-retrieval-augmented-generation\",\n    \"aria-label\": \"what is retrieval augmented generation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"what is retrieval-augmented generation\"), \"\\n\", React.createElement(_components.p, null, \"Retrieval-augmented generation is a technique in which a generative model does not rely solely on its internal parameters but also consults an external repository to enhance its output. Picture a system that, given a user's prompt — for instance, a complex technical question — fetches the most relevant supporting documentation or textual evidence from a large corpus. The retrieved text is concatenated (or otherwise fused) with the user's query and passed into the generative model as additional context. The model thus has immediate access to up-to-date or domain-specific information that was not necessarily memorized during the original pre-training phase.\"), \"\\n\", React.createElement(_components.p, null, \"A canonical example is open-domain question-answering. Traditional QA systems can either be extractive (finding relevant text from a knowledge base) or generative (using a language model to produce an answer from learned representations). A RAG system unifies these paradigms by first retrieving relevant text chunks from a knowledge corpus — for example, a vector database containing millions of semantically indexed passages — and then allowing a language model to generate an answer conditioned on the retrieved text. The technique has been extensively discussed in Lewis and gang (2020) [NeurIPS], in which RAG was proposed for knowledge-intensive tasks like question-answering and fact retrieval.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"historical-context-and-origins\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#historical-context-and-origins\",\n    \"aria-label\": \"historical context and origins permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"historical context and origins\"), \"\\n\", React.createElement(_components.p, null, \"Although retrieval-based approaches have existed for decades in the field of information retrieval (IR), the direct fusion of IR with deep neural generation models gained momentum in the late 2010s. Early neural QA systems such as DrQA, built by Facebook AI Research, showed that a pipeline combining an IR module (e.g., TF-IDF or BM25) with a reading comprehension model could deliver strong performance on open-domain questions. However, these earlier approaches often used separate, specialized modules for retrieval and extraction.\"), \"\\n\", React.createElement(_components.p, null, \"With the rise of large transformer-based models like GPT and BERT, a new wave of question-answering and text-generation solutions began exploring the synergy between retrieval and generative architecture. The 2020 paper \\\"Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks\\\" by Lewis and colleagues formalized the concept and introduced methods for end-to-end training using dense vector retrieval and generative decoding. Since then, a variety of specialized frameworks and improvements have proliferated, including hybrid retrieval methods (combining lexical and dense retrieval), advanced chunking strategies, and domain-focused RAG solutions that integrate domain knowledge in real time.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"importance-in-machine-learning-and-data-science\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#importance-in-machine-learning-and-data-science\",\n    \"aria-label\": \"importance in machine learning and data science permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"importance in machine learning and data science\"), \"\\n\", React.createElement(_components.p, null, \"In modern data science and ML workflows, retrieval-augmented generation is significant for several reasons:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Bridging knowledge gaps\"), \": When a model's training data is outdated or not specialized enough for a particular domain, RAG allows the system to pull new or domain-specific content at inference time.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Reducing hallucination\"), \": Language models often generate plausible but incorrect statements. By integrating authoritative retrieved evidence, RAG systems can drastically reduce factual errors.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Efficiency and modularity\"), \": Instead of retraining a massive model every time new data becomes available, a RAG pipeline only requires updating the retrieval index or external data store, making it more scalable and cost-effective.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Applications across domains\"), \": From open-domain QA to dialogue systems, from technical document summarization to domain-specific analytics (finance, medicine, law, etc.), RAG has quickly become a powerful approach for building real-world applications that demand on-demand knowledge.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"key-components-of-rag-systems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#key-components-of-rag-systems\",\n    \"aria-label\": \"key components of rag systems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"key components of RAG systems\"), \"\\n\", React.createElement(_components.p, null, \"A typical RAG system consists of two primary components:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"retrieval module\"), \": A specialized retrieval engine that indexes documents or knowledge artifacts (e.g., text passages, code snippets, tables, or other structured/unstructured data). It receives a query embedding (or textual query) and returns the most semantically relevant chunks.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"generation module\"), \": A large language model (e.g., GPT-style model, BERT-based encoder-decoder, etc.) that conditions on the query plus the retrieved data. This generative model integrates the external evidence into its text-generation process, producing an answer or textual output that is presumably grounded in the retrieved content.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"foundational-concepts\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#foundational-concepts\",\n    \"aria-label\": \"foundational concepts permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"foundational concepts\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"understanding-retrieval-systems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#understanding-retrieval-systems\",\n    \"aria-label\": \"understanding retrieval systems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"understanding retrieval systems\"), \"\\n\", React.createElement(_components.p, null, \"Retrieval systems can broadly be categorized into lexical-based (keyword matching) and semantic-based (dense vector) approaches:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Lexical-based methods\"), \" rely on term matching and frequency-based weighting (e.g., TF-IDF, BM25). These systems excel when queries contain exact or near-exact words and phrases that match documents in a corpus. However, they may fail when a user's query is semantically related to, but not directly matching, relevant text.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Semantic-based methods\"), \" rely on vector embeddings that capture the contextual meaning of words, phrases, and passages. When a query is embedded into a semantic vector space, a similarity function (like cosine similarity) can be used to find text chunks with similar embeddings, even if they lack lexical overlap. Tools like FAISS or Annoy are common for approximate nearest neighbor searches in high-dimensional spaces.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"types-of-retrieval-systems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#types-of-retrieval-systems\",\n    \"aria-label\": \"types of retrieval systems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"types of retrieval systems\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"keyword-based retrieval\"), \": This includes classical IR systems using TF-IDF, BM25, or other frequency-based ranking functions. They are well-established, interpretable, and often faster for exact matches. However, they may struggle with synonyms or nuanced paraphrases.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"vector-based retrieval\"), \" (dense retrieval): Powered by neural embeddings (e.g., BERT, Sentence Transformers, or other pre-trained encoders), these systems capture deeper semantic relationships. They are more robust for paraphrased or semantically similar queries.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"hybrid retrieval\"), \": Many real-world systems combine lexical-based and vector-based retrieval to harness the strengths of both approaches. For instance, a system may first filter documents lexically and then re-rank them semantically, or combine both signal types in a single scoring function.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"metrics-for-evaluating-retrieval-performance\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#metrics-for-evaluating-retrieval-performance\",\n    \"aria-label\": \"metrics for evaluating retrieval performance permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"metrics for evaluating retrieval performance\"), \"\\n\", React.createElement(_components.p, null, \"When assessing retrieval quality, one typically uses metrics such as:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Precision@k\"), \": The fraction of retrieved documents among the top \", React.createElement(Latex, {\n    text: \"\\\\( k \\\\)\"\n  }), \" results that are relevant.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Recall@k\"), \": The fraction of all relevant documents that are present in the top \", React.createElement(Latex, {\n    text: \"\\\\( k \\\\)\"\n  }), \" retrieved results.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Mean Reciprocal Rank (MRR)\"), \": Reflects the rank position of the first relevant document in a result list.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Normalized Discounted Cumulative Gain (nDCG)\"), \": Takes into account relevance grades and positions in a ranked list.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"the-synergy-between-retrieval-and-generation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#the-synergy-between-retrieval-and-generation\",\n    \"aria-label\": \"the synergy between retrieval and generation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"the synergy between retrieval and generation\"), \"\\n\", React.createElement(_components.p, null, \"A retrieval system alone does not generate free-form text; it merely selects relevant documents or passages. Conversely, a generative model alone may produce eloquent outputs but lacks a robust mechanism to look up new or external knowledge. By combining retrieval and generation into a single pipeline, we obtain:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Evidence grounding\"), \": The generative model can ground its responses in external data.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Context enrichment\"), \": The retrieved passages supply domain-specific or dynamic knowledge that the model might lack.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Dynamic updates\"), \": The system can respond to new information by updating the retrieval index, rather than retraining the entire language model.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"When these two components work in harmony, the resulting pipeline can produce fluent, context-rich, and factually aligned text responses.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"additional-foundational-topics\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#additional-foundational-topics\",\n    \"aria-label\": \"additional foundational topics permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"additional foundational topics\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"embeddings\"), \": The vectorized representations of textual data. They allow similarity searches in high-dimensional spaces. Embeddings can be derived from Word2Vec, GloVe, BERT, Sentence-BERT, or other advanced encoders.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"chunking\"), \": A process of splitting long documents into smaller, semantically cohesive chunks. This method is pivotal for efficient retrieval, as searching at the chunk level often yields more precise matches.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"dimensionality reduction\"), \": Sometimes used to optimize large embedding vectors for faster similarity search. Principal component analysis (PCA) or other techniques can be applied to reduce embedding size.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"indexing\"), \": The process of storing embeddings in a specialized data structure (like a vector database) that supports approximate nearest neighbor (ANN) or exhaustive search.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"architecture-of-rag-systems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#architecture-of-rag-systems\",\n    \"aria-label\": \"architecture of rag systems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"architecture of RAG systems\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"high-level-architecture\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#high-level-architecture\",\n    \"aria-label\": \"high level architecture permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"high-level architecture\"), \"\\n\", React.createElement(_components.p, null, \"A RAG pipeline typically follows these steps:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Document collection\"), \": A corpus of documents, which may be updated frequently, is segmented into smaller chunks.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Indexing\"), \": Each chunk is transformed into a vector embedding and stored in a vector database or indexing structure.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Query encoding\"), \": When a user's query arrives, it is similarly embedded into the same vector space.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Retrieval\"), \": The system retrieves the top \", React.createElement(Latex, {\n    text: \"\\\\( N \\\\)\"\n  }), \" chunks (or passages) that are most semantically similar to the query.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Context augmentation\"), \": The retrieved chunks are concatenated (or integrated) with the user's original query or prompt.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Generation\"), \": The combined context is fed to a language model, which produces an answer or textual output grounded in the retrieved evidence.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Post-processing\"), \" (optional): The output can be further refined, validated, or summarized using additional modules or heuristics.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"the-retrieval-module\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#the-retrieval-module\",\n    \"aria-label\": \"the retrieval module permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"the retrieval module\"), \"\\n\", React.createElement(_components.p, null, \"The retrieval module can be as simple or sophisticated as required. Options range from open-source solutions like ElasticSearch (for BM25 or keyword-based searching) to specialized ANN search libraries (FAISS, Annoy, Milvus, Zilliz Cloud, etc.) that handle large-scale vector similarity lookups.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"indexing-techniques\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#indexing-techniques\",\n    \"aria-label\": \"indexing techniques permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"indexing techniques\"), \"\\n\", React.createElement(_components.p, null, \"Indexing is crucial for scaling RAG systems:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Exact nearest neighbor\"), \": Involves searching across all vectors in a brute-force manner, typically using a data structure that supports efficient distance computations. This approach can be expensive at scale.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Approximate nearest neighbor (ANN)\"), \": Uses indexes like HNSW, IVF, or PQ to significantly speed up retrieval with minimal accuracy trade-offs. ANN indexes are especially relevant for extremely large datasets (millions of chunks).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Hybrid indexing\"), \": Combines lexical indexes with vector indexes to yield flexible retrieval strategies.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"retrieval-algorithms\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#retrieval-algorithms\",\n    \"aria-label\": \"retrieval algorithms permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"retrieval algorithms\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"BM25\"), \": A state-of-the-art classic IR scoring function based on term frequency. Often used in open-domain QA and baseline retrieval setups.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"dense embeddings\"), \": Learned through models like BERT or Sentence-BERT. The retrieval process typically computes a similarity score \", React.createElement(Latex, {\n    text: \"\\\\( \\\\text{sim}(q, d) \\\\)\"\n  }), \" (e.g., cosine similarity) between the query embedding \", React.createElement(Latex, {\n    text: \"\\\\( q \\\\)\"\n  }), \" and document embedding \", React.createElement(Latex, {\n    text: \"\\\\( d \\\\)\"\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"re-ranking\"), \": A secondary step that re-orders the top results from an initial retrieval step using a more expensive but accurate model, such as a cross-encoder that compares the query against each document in detail.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"the-generation-module\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#the-generation-module\",\n    \"aria-label\": \"the generation module permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"the generation module\"), \"\\n\", React.createElement(_components.p, null, \"After obtaining relevant documents (chunks), the generation module — typically a large language model — is prompted with both the user's question and the retrieved text. If properly configured, the model focuses on the retrieved evidence to provide an informed answer.\"), \"\\n\", React.createElement(_components.p, null, \"Key tasks:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Conditioning generation on retrieved data\"), \": The model might receive a special prompt template that includes both the user query and the top passages.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Controlling style and structure\"), \": Prompt engineering can guide how the final answer is structured, ensuring that the generative model references the retrieved material explicitly.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Mitigating hallucinations\"), \": By repeatedly emphasizing that the retrieved text is the correct context, you can push the model to rely on that evidence rather than fabricating or mixing external knowledge.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"techniques-for-conditioning-generation-on-retrieved-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#techniques-for-conditioning-generation-on-retrieved-data\",\n    \"aria-label\": \"techniques for conditioning generation on retrieved data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"techniques for conditioning generation on retrieved data\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Simple concatenation\"), \": The most direct method, where passages and the query are simply appended in a single text string, often accompanied by special tokens or headings to separate them.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"weighted context\"), \": Some approaches prefer to weigh each retrieved passage based on confidence scores, potentially giving more attention to highly relevant content.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"cross attention\"), \": In more advanced architectures, the model's attention mechanism can be extended or specialized to cross-encode the retrieved chunks.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"iterative retrieval-generation loops\"), \": The model generates an initial response, identifies missing information, queries the retrieval module again, and refines its answer. This iterative synergy can improve complex reasoning tasks.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"end-to-end-training-and-fine-tuning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#end-to-end-training-and-fine-tuning\",\n    \"aria-label\": \"end to end training and fine tuning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"end-to-end training and fine-tuning\"), \"\\n\", React.createElement(_components.p, null, \"Some advanced RAG systems train the retrieval and generation components jointly, so the entire pipeline is optimized for a target metric (e.g., exact match or F1 score on question-answering tasks). Alternatively, many practical systems keep retrieval as a separate module that is fine-tuned independently (e.g., fine-tuning a BERT-based encoder for retrieval), while the generative model is also fine-tuned on the final QA or generation objective.\"), \"\\n\", React.createElement(_components.p, null, \"This modular approach simplifies updates to the knowledge base; only the retrieval index need be updated or fine-tuned when new data is introduced, leaving the core language model parameters untouched.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"types-of-retrieval-augmented-generation-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#types-of-retrieval-augmented-generation-models\",\n    \"aria-label\": \"types of retrieval augmented generation models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"types of retrieval-augmented generation models\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"open-domain-question-answering-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#open-domain-question-answering-models\",\n    \"aria-label\": \"open domain question answering models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"open-domain question answering models\"), \"\\n\", React.createElement(_components.p, null, \"Open-domain QA tasks typically require knowledge of a vast array of topics, from pop culture to historical facts, from scientific knowledge to specialized domains. RAG-based QA systems excel here by retrieving relevant documents from large-scale corpora such as Wikipedia or domain-specific sources, allowing the generative model to produce more grounded and correct responses.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"dialogue-systems-with-retrieval-augmentation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#dialogue-systems-with-retrieval-augmentation\",\n    \"aria-label\": \"dialogue systems with retrieval augmentation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"dialogue systems with retrieval augmentation\"), \"\\n\", React.createElement(_components.p, null, \"Dialogue systems, such as chatbots or conversational agents, often have to maintain context across multiple turns and produce coherent, contextually accurate replies. Adding a retrieval step ensures that any domain knowledge or relevant conversation context is properly fetched and integrated. For example, a technical support chatbot could fetch relevant sections from a product manual to answer a user's query about troubleshooting.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"summarization-with-external-data-retrieval\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#summarization-with-external-data-retrieval\",\n    \"aria-label\": \"summarization with external data retrieval permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"summarization with external data retrieval\"), \"\\n\", React.createElement(_components.p, null, \"Some advanced text summarization tasks benefit from retrieval, especially when the source documents are scattered across different databases or web services. A RAG framework can gather crucial pieces of text from various sources, and then a summarization model can condense them into a concise overview. This is particularly relevant for multi-document summarization, where the correct approach involves retrieving a set of relevant documents and merging their content logically.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"hybrid-systems-combining-rag-with-other-ml-techniques\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#hybrid-systems-combining-rag-with-other-ml-techniques\",\n    \"aria-label\": \"hybrid systems combining rag with other ml techniques permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"hybrid systems combining RAG with other ML techniques\"), \"\\n\", React.createElement(_components.p, null, \"RAG can be hybridized further, for instance by combining:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"structured knowledge\"), \": Instead of only free-form text, the retrieval system might also consult knowledge graphs or structured databases.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"multimodal retrieval\"), \": Searching for images or videos relevant to a text query, or vice versa.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"reinforcement learning\"), \": Some systems use RL signals to refine the retrieval or generation modules to maximize a certain reward (e.g., user satisfaction).\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"other-advanced-scenarios\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#other-advanced-scenarios\",\n    \"aria-label\": \"other advanced scenarios permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"other advanced scenarios\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"retrieval for code generation\"), \": Systems like GitHub Copilot or other code assistants can rely on snippet retrieval from large code corpora to improve generation accuracy.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"low-resource domains\"), \": RAG can significantly enhance performance by providing relevant data from external sources in languages or fields where training data is scarce.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"key-challenges-in-rag-systems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#key-challenges-in-rag-systems\",\n    \"aria-label\": \"key challenges in rag systems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"key challenges in RAG systems\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"scalability-and-efficiency-of-retrieval\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#scalability-and-efficiency-of-retrieval\",\n    \"aria-label\": \"scalability and efficiency of retrieval permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"scalability and efficiency of retrieval\"), \"\\n\", React.createElement(_components.p, null, \"In real-world enterprise applications, a knowledge base can contain millions (or billions) of text chunks. Efficient approximate nearest neighbor search is required to keep latency manageable. Developers must choose data structures and indexing strategies (like HNSW or PQ) that can handle large-scale embeddings while maintaining high recall and speed.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"ensuring-relevance-of-retrieved-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#ensuring-relevance-of-retrieved-data\",\n    \"aria-label\": \"ensuring relevance of retrieved data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"ensuring relevance of retrieved data\"), \"\\n\", React.createElement(_components.p, null, \"Even with well-tuned embeddings, retrieval can return irrelevant or partially relevant passages. This problem may stem from:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"noise\"), \" in the corpus (e.g., low-quality data, repeated content),\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"lack of domain adaptation\"), \" in the retrieval model,\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"insufficient chunking\"), \" strategies that cause passages to be overly broad.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"When irrelevant passages are fed to the generation model, the overall coherence of the output can degrade.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"mitigating-hallucination-in-generation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#mitigating-hallucination-in-generation\",\n    \"aria-label\": \"mitigating hallucination in generation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"mitigating hallucination in generation\"), \"\\n\", React.createElement(_components.p, null, \"A language model, even when given the right context, can still fabricate details or produce misleading results. Mitigation strategies include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"prompt engineering\"), \": Reminding the model to rely strictly on the retrieved evidence.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"truthfulness constraints\"), \": For instance, penalizing references to extraneous data not found in the retrieved passages.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"fact-checking\"), \": Using a downstream classifier to verify the statements produced by the model.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"handling-noisy-or-incomplete-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#handling-noisy-or-incomplete-data\",\n    \"aria-label\": \"handling noisy or incomplete data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"handling noisy or incomplete data\"), \"\\n\", React.createElement(_components.p, null, \"Real-world data might be unstructured, incomplete, or partially redundant. RAG systems must be robust to missing or contradictory segments. This can involve using fallback mechanisms (like keyword search for crucial rare terms) or employing re-ranking modules that discard questionable passages.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"balancing-retrieval-and-generation-in-training\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#balancing-retrieval-and-generation-in-training\",\n    \"aria-label\": \"balancing retrieval and generation in training permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"balancing retrieval and generation in training\"), \"\\n\", React.createElement(_components.p, null, \"In an end-to-end trained system, the balance between accurate retrieval and effective generation can be tricky. Overfitting the retrieval module might cause the system to retrieve text that is too narrow or that fails to generalize. Overemphasizing generation might lead to ignoring the retrieved evidence in favor of the model's inherent knowledge. Achieving balance typically involves iterating on retrieval indexing, fine-tuning hyperparameters, and carefully orchestrating training objectives.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"evaluation-of-rag-systems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#evaluation-of-rag-systems\",\n    \"aria-label\": \"evaluation of rag systems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"evaluation of RAG systems\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"metrics-for-retrieval\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#metrics-for-retrieval\",\n    \"aria-label\": \"metrics for retrieval permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"metrics for retrieval\"), \"\\n\", React.createElement(_components.p, null, \"Common retrieval metrics have already been mentioned (Precision@k, Recall@k, nDCG, MRR), but in a RAG context, their relevance is measured in terms of how they affect the final generated output. A passage-level recall of relevant evidence, for instance, can be more directly correlated with generation accuracy.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"metrics-for-generation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#metrics-for-generation\",\n    \"aria-label\": \"metrics for generation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"metrics for generation\"), \"\\n\", React.createElement(_components.p, null, \"When the final output is free-form text, we can evaluate it with standard natural language generation (NLG) metrics, such as:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"BLEU\"), \": Measures n-gram overlap between generated output and reference text.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"ROUGE\"), \": Primarily used for summarization tasks, measuring overlap of sequences (or sets) of words between references and system output.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"BERTScore\"), \": Uses contextual embeddings (e.g., from BERT) to measure semantic similarity between two texts.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"METEOR, BLEURT, etc.\"), \": Additional metrics that capture lexical and semantic overlap.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"unified-evaluation-frameworks-for-rag-systems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#unified-evaluation-frameworks-for-rag-systems\",\n    \"aria-label\": \"unified evaluation frameworks for rag systems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"unified evaluation frameworks for RAG systems\"), \"\\n\", React.createElement(_components.p, null, \"Researchers sometimes propose integrated metrics that combine retrieval precision with generative fidelity. For instance, an approach might first check whether the correct passage was retrieved among the top \", React.createElement(Latex, {\n    text: \"\\\\( N \\\\)\"\n  }), \", and then score how faithfully the generation uses the retrieved content. Some advanced setups incorporate a chain-of-thought approach to see how the model references the passages in its intermediate reasoning steps.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"human-evaluation-approaches\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#human-evaluation-approaches\",\n    \"aria-label\": \"human evaluation approaches permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"human evaluation approaches\"), \"\\n\", React.createElement(_components.p, null, \"Automatic metrics can fail to fully capture the factual correctness or coherence of a response. Human evaluators are often asked to:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"rate correctness\"), \": Is the answer factually accurate, given the context?\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"rate fluency\"), \": Does the generated text read naturally?\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"rate helpfulness\"), \": Does the answer address the user's query thoroughly?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Such qualitative assessments frequently serve as the gold standard for real-world applications.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"applications-and-use-cases\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#applications-and-use-cases\",\n    \"aria-label\": \"applications and use cases permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"applications and use cases\"), \"\\n\", React.createElement(_components.p, null, \"Due to their ability to handle dynamic or specialized data, retrieval-augmented generation systems are deployed in diverse domains:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"enterprise knowledge bases\"), \": Automating customer support or internal knowledge retrieval.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"medical and legal\"), \": Checking references from medical research or legal documents to ensure correct citations.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"academic research\"), \": Summarizing or explaining scientific literature with references to relevant papers.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"journalism\"), \": Fact-checking or generating news summaries with references to source materials.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"technical writing\"), \": Retrieving relevant documentation or code snippets to assist developers.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The approach is widely adaptable wherever timely or domain-specific knowledge must be integrated into a generative model's response.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"tools-and-frameworks-for-implementing-rag\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#tools-and-frameworks-for-implementing-rag\",\n    \"aria-label\": \"tools and frameworks for implementing rag permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"tools and frameworks for implementing RAG\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"popular-libraries-and-tools\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#popular-libraries-and-tools\",\n    \"aria-label\": \"popular libraries and tools permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"popular libraries and tools\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Hugging Face Transformers\"), \": Contains numerous pre-trained models for both retrieval encoders and generative decoders, along with pipelines to combine them.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"FAISS\"), \": A library by Facebook AI for efficient similarity search, commonly used for indexing large collections of embeddings.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Milvus / Zilliz\"), \": Advanced vector databases that offer distributed or cloud-based solutions for storing and querying embeddings at scale.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"ElasticSearch\"), \": Although primarily known for keyword-based search, it also integrates with vector similarity search in recent versions, combining BM25 with dense retrieval functionalities.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"LangChain\"), \": A framework that simplifies building LLM applications with retrieval steps, offering a chain-of-thought style approach for multi-step queries.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"LlamaIndex\"), \": A specialized framework enabling text chunking, indexing, and flexible retrieval logic for a wide array of LLM-based applications.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"deployment-considerations-for-rag-in-production\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#deployment-considerations-for-rag-in-production\",\n    \"aria-label\": \"deployment considerations for rag in production permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"deployment considerations for RAG in production\"), \"\\n\", React.createElement(_components.p, null, \"When deploying a RAG system at scale, one must consider:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"throughput and latency\"), \": The ability to process large volumes of requests quickly.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"index update frequency\"), \": If the knowledge corpus changes often, an incremental or fast index-building approach is key.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"monitoring\"), \": Logging retrieval accuracy, generation coherence, and user feedback is critical for iterative improvement.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"data governance and security\"), \": For sensitive applications (finance, healthcare, etc.), encryption and access control over the knowledge store is paramount.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"prompt design\"), \": Carefully structuring the retrieval output within the model prompt to avoid confusion or suboptimal referencing by the language model.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Many organizations also build specialized MLOps pipelines to automate data ingestion, index building, model versioning, and real-time monitoring of performance indicators for RAG solutions.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"advancements-in-rag-research\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#advancements-in-rag-research\",\n    \"aria-label\": \"advancements in rag research permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"advancements in RAG research\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"emerging-trends-and-techniques\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#emerging-trends-and-techniques\",\n    \"aria-label\": \"emerging trends and techniques permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"emerging trends and techniques\"), \"\\n\", React.createElement(_components.p, null, \"Cutting-edge research in retrieval-augmented generation explores:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"learned dense retrievers\"), \": Ongoing improvements in neural retrievers (e.g., coCondenser, ColBERT, DPR variants) that outperform classical retrieval in domain adaptation.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"dynamic retrieval\"), \": Systems that can iteratively fetch relevant chunks as the conversation or text generation evolves.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"fact verification\"), \": Automatic checking of statements generated by the model, aligning them with retrieved evidence.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"domain adaptation\"), \": Fine-tuning retrievers on domain-specific data to capture specialized vocabulary or context.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"advances-in-pre-trained-language-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#advances-in-pre-trained-language-models\",\n    \"aria-label\": \"advances in pre trained language models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"advances in pre-trained language models\"), \"\\n\", React.createElement(_components.p, null, \"Emerging LLMs like GPT-4 or PaLM show improved capabilities for handling multi-turn queries and referencing external sources. The synergy with retrieval steps can be even more powerful as these models can reason better about how to integrate retrieved evidence, but they also demand more sophisticated prompt engineering.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"cross-lingual-and-multimodal-retrieval-augmented-systems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cross-lingual-and-multimodal-retrieval-augmented-systems\",\n    \"aria-label\": \"cross lingual and multimodal retrieval augmented systems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"cross-lingual and multimodal retrieval-augmented systems\"), \"\\n\", React.createElement(_components.p, null, \"Recent work has begun exploring multilingual or cross-lingual RAG, where a user may query in one language while the knowledge base is in another, requiring retrieval components that align embeddings across languages. Multimodal RAG, on the other hand, extends beyond text to incorporate image or audio data, retrieving and integrating relevant non-textual information into the generation process.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"rag-for-low-resource-languages-and-domains\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#rag-for-low-resource-languages-and-domains\",\n    \"aria-label\": \"rag for low resource languages and domains permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"RAG for low-resource languages and domains\"), \"\\n\", React.createElement(_components.p, null, \"Because RAG solutions rely heavily on external data for factual knowledge, they present a more promising route for tasks in low-resource languages, where large-scale pre-trained language models might not exist. By embedding relevant local text resources into a vector database, a smaller or multilingual LLM can still generate contextually accurate outputs in these languages.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"other-noteworthy-developments\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#other-noteworthy-developments\",\n    \"aria-label\": \"other noteworthy developments permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"other noteworthy developments\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"reinforcement learning with human feedback\"), \" (RLHF) for improved retrieval relevance.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"prompt-level constraints\"), \" to keep generation strictly aligned with retrieved content.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"on-the-fly summarization\"), \" of retrieved chunks when the context window is limited, to integrate more data into the model's prompt efficiently.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"building-a-complex-rag-system-step-by-step\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#building-a-complex-rag-system-step-by-step\",\n    \"aria-label\": \"building a complex rag system step by step permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"building a complex RAG system step by step\"), \"\\n\", React.createElement(_components.p, null, \"Below is a hypothetical Python-based pipeline that demonstrates the main components of a RAG system using popular libraries. Keep in mind that production implementations might require more sophisticated optimization, error handling, and data governance.\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport os\nimport numpy as np\nfrom typing import List\nfrom transformers import AutoTokenizer, AutoModel\nfrom some_vector_db import VectorDatabase  # Placeholder for a vector DB, e.g., FAISS or Milvus\n\n# 1. Load or define an embedding model\n# Using a placeholder 'AutoModel' from Hugging Face for demonstration.\n# In practice, a sentence transformer or specialized model is often used.\n\ntokenizer = AutoTokenizer.from_pretrained(\"sentence-transformers/all-MiniLM-L6-v2\")\nmodel = AutoModel.from_pretrained(\"sentence-transformers/all-MiniLM-L6-v2\")\n\ndef embed_text(text_list: List[str]) -> np.ndarray:\n    # A function that encodes multiple strings into vector embeddings\n    # This is a simplified example.\n    inputs = tokenizer(text_list, padding=True, truncation=True, return_tensors=\"pt\")\n    with torch.no_grad():\n        outputs = model(**inputs)\n    # For demonstration, we might simply take the [CLS] token's hidden state\n    # or an average over token embeddings. Real usage will vary.\n    embeddings = outputs.last_hidden_state.mean(dim=1).cpu().numpy()\n    return embeddings\n\n# 2. Initialize a vector database and build an index\nvector_db = VectorDatabase()\nall_docs = [\n    # Suppose we have chunked documents here\n    \"Text chunk 1 about neural networks and RAG.\",\n    \"Text chunk 2 about machine learning fundamentals.\",\n    \"Text chunk 3 about code examples in Python.\",\n    # ...\n]\n\n# Embed and index each chunk\ndoc_embeddings = embed_text(all_docs)\nfor doc_text, embedding in zip(all_docs, doc_embeddings):\n    vector_db.add_document(doc_text, embedding)\n\n# 3. Retrieval function\ndef retrieve_relevant_chunks(query: str, top_k: int = 3) -> List[str]:\n    query_vec = embed_text([query])[0]\n    # Perform a similarity search in the vector database\n    results = vector_db.search(query_vec, top_k=top_k)\n    return [res[\"text\"] for res in results]\n\n# 4. Generative model (placeholder)\n# In a real RAG system, use a large language model (e.g., GPT-3.5 or a local model).\n# We'll simulate it with a pseudo function here.\n\ndef generate_answer(query: str, context_chunks: List[str]) -> str:\n    # A naive approach: concatenate the context and query\n    # Then produce a \"response\" placeholder\n    concatenated_context = \"\\n\".join(context_chunks)\n    prompt = f\"Context:\\n{concatenated_context}\\n\\nUser Query: {query}\\nAnswer:\"\n    # In real usage, pass this to an LLM's API or model call\n    # e.g., openai.Completion.create(prompt=prompt, ...)\n    return \"This is a placeholder for a generated answer using the retrieved context.\"\n\n# 5. End-to-end RAG function\ndef rag_pipeline(user_query: str, top_k: int = 3) -> str:\n    # Retrieve\n    chunks = retrieve_relevant_chunks(user_query, top_k=top_k)\n    # Generate\n    answer = generate_answer(user_query, chunks)\n    return answer\n\n# Example usage:\nif __name__ == \"__main__\":\n    sample_query = \"Explain the basics of RAG in Python.\"\n    response = rag_pipeline(sample_query, top_k=2)\n    print(\"RAG-based response:\")\n    print(response)\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"In this simplified snippet:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"We \", React.createElement(_components.strong, null, \"load\"), \" or define an embedding model for text chunking and vector creation.\"), \"\\n\", React.createElement(_components.li, null, \"We \", React.createElement(_components.strong, null, \"index\"), \" the documents in a vector database or approximate nearest neighbor structure.\"), \"\\n\", React.createElement(_components.li, null, \"A \", React.createElement(_components.strong, null, \"retrieve_relevant_chunks\"), \" function queries the vector database for top-\", React.createElement(Latex, {\n    text: \"\\\\( k \\\\)\"\n  }), \" matches to the user's query.\"), \"\\n\", React.createElement(_components.li, null, \"We have a \", React.createElement(_components.strong, null, \"generate_answer\"), \" function (a placeholder) that would typically call a large language model. The retrieved chunks are provided alongside the user query.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"rag_pipeline\"), \" encapsulates the RAG logic, from retrieval to generation.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"A real-world solution typically incorporates advanced chunking strategies, more robust searching (BM25 + dense vectors), caching, error handling, and might further refine how context chunks are integrated into the model prompt.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"future-directions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#future-directions\",\n    \"aria-label\": \"future directions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"future directions\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"improving-interpretability-and-transparency\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#improving-interpretability-and-transparency\",\n    \"aria-label\": \"improving interpretability and transparency permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"improving interpretability and transparency\"), \"\\n\", React.createElement(_components.p, null, \"As language models grow increasingly complex, interpretability remains a key challenge. One direction for RAG research involves developing interactive interfaces that show which passages the system retrieved, highlight how the model uses them, and explain any decisions or transformations made along the way.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"advances-in-dynamic-retrieval-and-adaptive-generation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#advances-in-dynamic-retrieval-and-adaptive-generation\",\n    \"aria-label\": \"advances in dynamic retrieval and adaptive generation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"advances in dynamic retrieval and adaptive generation\"), \"\\n\", React.createElement(_components.p, null, \"Dynamic retrieval loops, where the model iterates between retrieving, reasoning, and generating partial outputs, are likely to improve the depth and correctness of complex answers. As these iterative pipelines mature, we can expect more sophisticated multi-step reasoning that seamlessly fetches new evidence as needed.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"role-of-rag-in-agi-artificial-general-intelligence\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#role-of-rag-in-agi-artificial-general-intelligence\",\n    \"aria-label\": \"role of rag in agi artificial general intelligence permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"role of RAG in AGI (artificial general intelligence)\"), \"\\n\", React.createElement(_components.p, null, \"While AGI remains a debated topic, retrieval-augmented generation may serve as a stepping stone. By allowing an LLM to \\\"look up\\\" external facts and reason over them, a RAG system can approximate an ever-expanding knowledge base that an AGI might require. As more advanced retrieval strategies and more powerful generation models emerge, the synergy can push the envelope on general-purpose reasoning and problem-solving.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"Below, I expand on additional, crucial details related to chunking — one of the most decisive factors in building effective RAG systems — and connect them to the broader pipeline described above.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"additional-deep-dive-into-chunking\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#additional-deep-dive-into-chunking\",\n    \"aria-label\": \"additional deep dive into chunking permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"additional deep dive into chunking\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Chunking\"), \" is the process of splitting documents into smaller segments, each capturing a cohesive unit of meaning or context. It is a fundamental step in most RAG pipelines, influencing both retrieval quality and generation coherence.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"why-chunking-is-essential\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#why-chunking-is-essential\",\n    \"aria-label\": \"why chunking is essential permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"why chunking is essential\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"granularity\"), \": Fine-grained chunks help retrieve precisely relevant material, reducing the noise presented to the language model.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"context window limits\"), \": Large language models have finite context windows (e.g., 4k, 8k, or more tokens). Splitting documents ensures relevant pieces fit into the prompt.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"scalability\"), \": Indexing smaller chunks often improves retrieval performance and speeds up approximate nearest neighbor searches.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"chunk-size-trade-offs\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#chunk-size-trade-offs\",\n    \"aria-label\": \"chunk size trade offs permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"chunk size trade-offs\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"small chunks\"), \":\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Pros: Very precise matches, especially for direct queries.\"), \"\\n\", React.createElement(_components.li, null, \"Cons: Might lose broader context, leading to fragmented knowledge.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"large chunks\"), \":\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Pros: Provide more holistic context in a single chunk.\"), \"\\n\", React.createElement(_components.li, null, \"Cons: Risk of retrieving overly broad or partially irrelevant text, which can confuse the generation model.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Real-world systems experiment with chunk sizes from ~100 to ~1,000 words, occasionally overlapping chunks to preserve continuity.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"chunk-overlap\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#chunk-overlap\",\n    \"aria-label\": \"chunk overlap permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"chunk overlap\"), \"\\n\", React.createElement(_components.p, null, \"If chunk boundaries are strictly disjoint, important details can be split between chunks. A small overlap ensures that the system does not lose transitional context. For example, if chunk A ends with the beginning of a crucial paragraph, chunk B might overlap the tail end of chunk A to keep the entire paragraph intact.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"semantic-vs-fixed-size-chunking\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#semantic-vs-fixed-size-chunking\",\n    \"aria-label\": \"semantic vs fixed size chunking permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"semantic vs. fixed-size chunking\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"fixed-size\"), \": Splitting text purely by token/word count. Easier to implement and reason about. However, it may sever paragraphs or sentences in unnatural ways.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"semantic\"), \": Attempting to chunk text according to paragraphs, sentences, or sections that form coherent meaning. Tools like spaCy or NLTK can help detect sentence boundaries or other structures. This approach can yield better retrieval matches but requires more advanced processing.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"chunking-in-vector-databases\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#chunking-in-vector-databases\",\n    \"aria-label\": \"chunking in vector databases permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"chunking in vector databases\"), \"\\n\", React.createElement(_components.p, null, \"When storing embeddings in a vector DB, each chunk becomes an atomic unit of retrieval. The system does not typically store entire documents as a single embedding, because that coarse granularity hampers retrieval specificity. Splitting a large corpus into semantically coherent chunks, embedding each chunk individually, and then indexing them is standard practice.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"advanced-chunking-workflows\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#advanced-chunking-workflows\",\n    \"aria-label\": \"advanced chunking workflows permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"advanced chunking workflows\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"hierarchical chunking\"), \": Breaking documents into chapters, sections, paragraphs, then sentences, and storing each level as needed. The system can retrieve at whichever granularity is optimal.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"dynamic chunking\"), \": Adapts chunk size or overlap in real-time, depending on the query's complexity or type.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"chunk summarization\"), \": If retrieved chunks exceed the language model's context window, they can be summarized on-the-fly, compressed, and then re-fed into generation.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Combined with an effective retrieval approach, chunking forms the backbone of many high-performing RAG pipelines.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"massive-concluding-perspective\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#massive-concluding-perspective\",\n    \"aria-label\": \"massive concluding perspective permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"massive concluding perspective\"), \"\\n\", React.createElement(_components.p, null, \"Retrieval-augmented generation has moved from a niche idea to a central methodology for bridging powerful language models with real-time or domain-specific data. By linking retrieval and generation in a well-orchestrated pipeline — from chunking documents and building robust indexes, to conditioning a generative model on the retrieved context — one can obtain highly accurate, up-to-date, and context-rich text outputs.\"), \"\\n\", React.createElement(_components.p, null, \"Despite the exciting potential, challenges around scale, efficiency, factual accuracy, interpretability, and dynamic context construction remain at the forefront of ongoing research and development. As libraries and frameworks continue to evolve, building and deploying RAG systems is becoming more accessible, enabling specialists and non-specialists alike to harness the power of retrieval-augmented generation for a wide spectrum of tasks, from enterprise knowledge bases to advanced dialogue systems, from legal assistance to scientific research.\"), \"\\n\", React.createElement(_components.p, null, \"By continuing to refine retrieval modules, chunking strategies, generation prompts, and evaluation metrics, practitioners can push the limits of what is possible in open-domain question-answering, factual summarization, user-centric dialogue, and more. In short, RAG stands poised to reshape how we conceive of large language models — not as static repositories of memorized training data, but as dynamic, context-aware systems that adapt to user queries by actively seeking out and integrating the most relevant knowledge in real time.\"), \"\\n\", React.createElement(_components.p, null, \"Through ongoing innovation, retrieval-augmented generation will likely remain a core pillar in the future of AI-driven text applications, fueling more accurate, verifiable, and robust interactions between humans and AI.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/avrtt/Repos/avrtt.github.io/src/pages/posts/research/retrieval_augmented_generation.mdx\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, {useState, useEffect} from 'react';\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\nimport RemoveMarkdown from 'remove-markdown';\nimport {ImageContext} from '../context/ImageContext';\nimport {MDXProvider} from '@mdx-js/react';\nimport Image from '../components/PostImage';\nimport {motion} from 'framer-motion';\nimport SEO from \"../components/seo\";\nimport PostBanner from '../components/PostBanner';\nimport PostBottom from '../components/PostBottom';\nimport {wordsPerMinuteAdventures, wordsPerMinuteResearch, wordsPerMinuteThoughts} from '../data/commonVariables';\nimport PartOfCourseNotice from \"../components/PartOfCourseNotice\";\nimport * as stylesButtonsCommon from \"../styles/buttons_common.module.scss\";\nimport * as stylesCustomPostLayouts from \"../styles/custom_post_layouts.module.scss\";\nimport * as stylesTableOfContents from \"../styles/table_of_contents.module.scss\";\nimport * as stylesTagBadges from \"../styles/tag_badges.module.scss\";\nfunction formatReadTime(minutes) {\n  if (minutes <= 10) return '~10 min';\n  if (minutes <= 20) return '~20 min';\n  if (minutes <= 30) return '~30 min';\n  if (minutes <= 40) return '~40 min';\n  if (minutes <= 50) return '~50 min';\n  if (minutes <= 60) return '~1 h';\n  const hours = Math.floor(minutes / 60);\n  const remainder = minutes % 60;\n  if (remainder <= 30) {\n    return `~${hours}${remainder > 0 ? '.5' : ''} h`;\n  }\n  return `~${hours + 1} h`;\n}\nconst TableOfContents = _ref => {\n  let {toc} = _ref;\n  if (!toc || !toc.items) return null;\n  const handleClick = (e, url) => {\n    e.preventDefault();\n    const targetId = url.replace('#', '');\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  return React.createElement(\"nav\", {\n    className: stylesTableOfContents.toc\n  }, React.createElement(\"ul\", null, toc.items.map((item, index) => React.createElement(\"li\", {\n    key: index\n  }, React.createElement(\"a\", {\n    href: item.url,\n    onClick: e => handleClick(e, item.url)\n  }, item.title), item.items && React.createElement(TableOfContents, {\n    toc: {\n      items: item.items\n    }\n  })))));\n};\nexport function PostTemplate(_ref2) {\n  let {data: {mdx, allMdx, allPostImages}, children} = _ref2;\n  const {frontmatter, body, tableOfContents} = mdx;\n  const index = frontmatter.index;\n  const slug = frontmatter.slug;\n  const section = slug.split('/')[1];\n  const posts = allMdx.nodes.filter(post => post.frontmatter.slug.includes(`/${section}/`));\n  const sortedPosts = posts.sort((a, b) => a.frontmatter.index - b.frontmatter.index);\n  const currentIndex = sortedPosts.findIndex(post => post.frontmatter.index === index);\n  const nextPost = sortedPosts[currentIndex + 1];\n  const lastPost = sortedPosts[currentIndex - 1];\n  const trimmedSlug = frontmatter.slug.replace(/\\/$/, '');\n  const keyCurrent = (/[^/]*$/).exec(trimmedSlug)[0];\n  const basePath = `posts/${section}/content/${keyCurrent}/`;\n  const {0: isWideLayout, 1: setIsWideLayout} = useState(frontmatter.flagWideLayoutByDefault);\n  const {0: isAnimating, 1: setIsAnimating} = useState(false);\n  const toggleLayout = () => {\n    setIsWideLayout(!isWideLayout);\n  };\n  useEffect(() => {\n    setIsAnimating(true);\n    const timer = setTimeout(() => setIsAnimating(false), 340);\n    return () => clearTimeout(timer);\n  }, [isWideLayout]);\n  var wordsPerMinute;\n  if (section === \"adventures\") {\n    wordsPerMinute = wordsPerMinuteAdventures;\n  } else if (section === \"research\") {\n    wordsPerMinute = wordsPerMinuteResearch;\n  } else if (section === \"thoughts\") {\n    wordsPerMinute = wordsPerMinuteThoughts;\n  }\n  const plainTextBody = RemoveMarkdown(body).replace(/import .*? from .*?;/g, '').replace(/<.*?>/g, '').replace(/\\{\\/\\*[\\s\\S]*?\\*\\/\\}/g, '').trim();\n  const wordCount = plainTextBody.split(/\\s+/).length;\n  const baseReadTimeMinutes = Math.ceil(wordCount / wordsPerMinute);\n  const extraTime = frontmatter.extraReadTimeMin || 0;\n  const totalReadTime = baseReadTimeMinutes + extraTime;\n  const readTime = formatReadTime(totalReadTime);\n  const notices = [{\n    flag: frontmatter.flagDraft,\n    component: () => import(\"../components/NotFinishedNotice\")\n  }, {\n    flag: frontmatter.flagMindfuckery,\n    component: () => import(\"../components/MindfuckeryNotice\")\n  }, {\n    flag: frontmatter.flagRewrite,\n    component: () => import(\"../components/RewriteNotice\")\n  }, {\n    flag: frontmatter.flagOffensive,\n    component: () => import(\"../components/OffensiveNotice\")\n  }, {\n    flag: frontmatter.flagProfane,\n    component: () => import(\"../components/ProfanityNotice\")\n  }, {\n    flag: frontmatter.flagMultilingual,\n    component: () => import(\"../components/MultilingualNotice\")\n  }, {\n    flag: frontmatter.flagUnreliably,\n    component: () => import(\"../components/UnreliablyNotice\")\n  }, {\n    flag: frontmatter.flagPolitical,\n    component: () => import(\"../components/PoliticsNotice\")\n  }, {\n    flag: frontmatter.flagCognitohazard,\n    component: () => import(\"../components/CognitohazardNotice\")\n  }, {\n    flag: frontmatter.flagHidden,\n    component: () => import(\"../components/HiddenNotice\")\n  }];\n  const {0: loadedNotices, 1: setLoadedNotices} = useState([]);\n  useEffect(() => {\n    notices.forEach(_ref3 => {\n      let {flag, component} = _ref3;\n      if (flag) {\n        component().then(module => {\n          setLoadedNotices(prev => [].concat(_toConsumableArray(prev), [module.default]));\n        });\n      }\n    });\n  }, []);\n  return React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.15\n    }\n  }, React.createElement(PostBanner, {\n    postNumber: frontmatter.index,\n    date: frontmatter.date,\n    updated: frontmatter.updated,\n    readTime: readTime,\n    difficulty: frontmatter.difficultyLevel,\n    title: frontmatter.title,\n    desc: frontmatter.desc,\n    banner: frontmatter.banner,\n    section: section,\n    postKey: keyCurrent,\n    isMindfuckery: frontmatter.flagMindfuckery,\n    mainTag: frontmatter.mainTag\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\",\n      maxWidth: \"75%\",\n      marginLeft: \"auto\",\n      paddingRight: \"1vw\",\n      marginTop: \"-6vh\",\n      marginBottom: \"4vh\"\n    }\n  }, frontmatter.otherTags.map((tag, index) => React.createElement(\"span\", {\n    key: index,\n    className: `noselect ${stylesTagBadges.tagPosts}`,\n    style: {\n      margin: \"0 5px 5px 0\"\n    }\n  }, tag))), React.createElement(\"div\", {\n    className: \"postBody\"\n  }, React.createElement(TableOfContents, {\n    toc: tableOfContents\n  })), React.createElement(\"br\", null), React.createElement(\"div\", {\n    style: {\n      margin: \"0 10% -2vh 30%\",\n      textAlign: \"right\"\n    }\n  }, React.createElement(motion.button, {\n    className: `noselect ${stylesCustomPostLayouts.postButton}`,\n    id: stylesCustomPostLayouts.postLayoutSwitchButton,\n    onClick: toggleLayout,\n    whileTap: {\n      scale: 0.93\n    }\n  }, React.createElement(motion.div, {\n    className: stylesButtonsCommon.buttonTextWrapper,\n    key: isWideLayout,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }, isWideLayout ? \"Switch to default layout\" : \"Switch to wide layout\"))), React.createElement(\"br\", null), React.createElement(\"div\", {\n    className: \"postBody\",\n    style: {\n      margin: isWideLayout ? \"0 -14%\" : \"\",\n      maxWidth: isWideLayout ? \"200%\" : \"\",\n      transition: \"margin 1s ease, max-width 1s ease, padding 1s ease\"\n    }\n  }, React.createElement(\"div\", {\n    className: `${stylesCustomPostLayouts.textContent} ${isAnimating ? stylesCustomPostLayouts.fadeOut : stylesCustomPostLayouts.fadeIn}`\n  }, loadedNotices.map((NoticeComponent, index) => React.createElement(NoticeComponent, {\n    key: index\n  })), frontmatter.indexCourse ? React.createElement(PartOfCourseNotice, {\n    index: frontmatter.indexCourse,\n    category: frontmatter.courseCategoryName\n  }) : \"\", React.createElement(ImageContext.Provider, {\n    value: {\n      images: allPostImages.nodes,\n      basePath: basePath.replace(/\\/$/, '') + '/'\n    }\n  }, React.createElement(MDXProvider, {\n    components: {\n      Image\n    }\n  }, children)))), React.createElement(PostBottom, {\n    nextPost: nextPost,\n    lastPost: lastPost,\n    keyCurrent: keyCurrent,\n    section: section\n  }));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head(_ref4) {\n  var _frontmatter$banner, _frontmatter$banner$c, _frontmatter$banner$c2, _frontmatter$banner$c3, _frontmatter$banner$c4;\n  let {data} = _ref4;\n  const {frontmatter} = data.mdx;\n  const title = frontmatter.titleSEO || frontmatter.title;\n  const titleOG = frontmatter.titleOG || title;\n  const titleTwitter = frontmatter.titleTwitter || title;\n  const description = frontmatter.descSEO || frontmatter.desc;\n  const descriptionOG = frontmatter.descOG || description;\n  const descriptionTwitter = frontmatter.descTwitter || description;\n  const schemaType = frontmatter.schemaType || \"BlogPosting\";\n  const keywords = frontmatter.keywordsSEO;\n  const datePublished = frontmatter.date;\n  const dateModified = frontmatter.updated || datePublished;\n  const imageOG = frontmatter.imageOG || ((_frontmatter$banner = frontmatter.banner) === null || _frontmatter$banner === void 0 ? void 0 : (_frontmatter$banner$c = _frontmatter$banner.childImageSharp) === null || _frontmatter$banner$c === void 0 ? void 0 : (_frontmatter$banner$c2 = _frontmatter$banner$c.gatsbyImageData) === null || _frontmatter$banner$c2 === void 0 ? void 0 : (_frontmatter$banner$c3 = _frontmatter$banner$c2.images) === null || _frontmatter$banner$c3 === void 0 ? void 0 : (_frontmatter$banner$c4 = _frontmatter$banner$c3.fallback) === null || _frontmatter$banner$c4 === void 0 ? void 0 : _frontmatter$banner$c4.src);\n  const imageAltOG = frontmatter.imageAltOG || descriptionOG;\n  const imageTwitter = frontmatter.imageTwitter || imageOG;\n  const imageAltTwitter = frontmatter.imageAltTwitter || descriptionTwitter;\n  const canonicalUrl = frontmatter.canonicalURL;\n  const flagHidden = frontmatter.flagHidden || false;\n  const mainTag = frontmatter.mainTag || \"Posts\";\n  const section = frontmatter.slug.split('/')[1] || \"posts\";\n  const type = \"article\";\n  const {siteUrl} = useSiteMetadata();\n  const breadcrumbJSON = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": [{\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": siteUrl\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 2,\n      \"name\": mainTag,\n      \"item\": `${siteUrl}/${frontmatter.slug.split('/')[1]}`\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 3,\n      \"name\": title,\n      \"item\": `${siteUrl}${frontmatter.slug}`\n    }]\n  };\n  return React.createElement(SEO, {\n    title: title + \" - avrtt.blog\",\n    titleOG: titleOG,\n    titleTwitter: titleTwitter,\n    description: description,\n    descriptionOG: descriptionOG,\n    descriptionTwitter: descriptionTwitter,\n    schemaType: schemaType,\n    keywords: keywords,\n    datePublished: datePublished,\n    dateModified: dateModified,\n    imageOG: imageOG,\n    imageAltOG: imageAltOG,\n    imageTwitter: imageTwitter,\n    imageAltTwitter: imageAltTwitter,\n    canonicalUrl: canonicalUrl,\n    flagHidden: flagHidden,\n    mainTag: mainTag,\n    section: section,\n    type: type\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumbJSON)));\n}\nconst query = \"2571018839\";\n","/* \n\nCopyright © 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\";\nimport Latex from 'react-latex-next';\nimport 'katex/dist/katex.min.css'; \n\ninterface LatexProps {\n  text: string;\n}\n  \nconst L = ({ text }: LatexProps) => {\n  return (\n    <Latex>{text}</Latex>\n  );\n};\nexport default L;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h3","a","span","ul","li","strong","ol","h2","hr","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","Latex","text","Code","wrapper","MDXLayout","TableOfContents","_ref","toc","items","stylesTableOfContents","map","item","index","key","url","onClick","e","handleClick","preventDefault","targetId","replace","targetElement","document","getElementById","scrollIntoView","behavior","block","title","PostTemplate","_ref2","data","mdx","allMdx","allPostImages","children","frontmatter","body","tableOfContents","section","slug","split","sortedPosts","nodes","filter","post","includes","sort","b","currentIndex","findIndex","nextPost","lastPost","trimmedSlug","keyCurrent","exec","basePath","isWideLayout","setIsWideLayout","useState","flagWideLayoutByDefault","isAnimating","setIsAnimating","wordsPerMinute","useEffect","timer","setTimeout","clearTimeout","wordsPerMinuteAdventures","wordsPerMinuteResearch","wordsPerMinuteThoughts","wordCount","RemoveMarkdown","trim","length","readTime","minutes","hours","Math","floor","remainder","formatReadTime","ceil","extraReadTimeMin","notices","flag","flagDraft","component","flagMindfuckery","flagRewrite","flagOffensive","flagProfane","flagMultilingual","flagUnreliably","flagPolitical","flagCognitohazard","flagHidden","loadedNotices","setLoadedNotices","forEach","_ref3","then","module","prev","concat","_toConsumableArray","default","motion","div","initial","opacity","animate","exit","transition","duration","PostBanner","postNumber","date","updated","difficulty","difficultyLevel","desc","banner","postKey","isMindfuckery","mainTag","display","justifyContent","flexWrap","maxWidth","marginLeft","paddingRight","marginTop","marginBottom","otherTags","tag","stylesTagBadges","margin","textAlign","button","stylesCustomPostLayouts","toggleLayout","whileTap","scale","stylesButtonsCommon","ease","NoticeComponent","indexCourse","PartOfCourseNotice","category","courseCategoryName","ImageContext","Provider","value","images","MDXProvider","Image","PostBottom","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref4","_frontmatter$banner","_frontmatter$banner$c","_frontmatter$banner$c2","_frontmatter$banner$c3","_frontmatter$banner$c4","titleSEO","titleOG","titleTwitter","description","descSEO","descriptionOG","descOG","descriptionTwitter","descTwitter","schemaType","keywords","keywordsSEO","datePublished","dateModified","imageOG","childImageSharp","gatsbyImageData","fallback","src","imageAltOG","imageTwitter","imageAltTwitter","canonicalUrl","canonicalURL","siteUrl","useSiteMetadata","breadcrumbJSON","SEO","type","JSON","stringify"],"sourceRoot":""}