{"version":3,"file":"component---src-templates-post-tsx-content-file-path-src-pages-posts-research-geometry-estimation-mdx-dbce26ee14a95e34d86b.js","mappings":"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","sources":["webpack://avrtt.blog/./src/pages/posts/research/geometry_estimation.mdx","webpack://avrtt.blog/./src/templates/post.tsx","webpack://avrtt.blog/./src/components/Latex/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/*\n\nОценка геометрии изображения - довольно новый и малоизученный раздел компьютерного зрения.\nUnit 8:\nhttps://huggingface.co/learn/computer-vision-course/en/unit0/welcome/welcome\nhttps://en.wikipedia.org/wiki/Geometric_feature_learning\nОпределение геометрии изображения\nhttps://neerc.ifmo.ru/wiki/index.php?title=%D0%9E%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D0%B3%D0%B5%D0%BE%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D0%B8_%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F\n\n*/\n/*\n\n1. Motivation\n- Historical background of geometry in computer science: how geometric concepts laid the groundwork for machine learning applications.\n- Modern motivations: why geometry is crucial for tasks such as 3D object recognition, autonomous driving, robotics, and augmented reality.\n- Overview of key challenges in integrating geometric knowledge into machine learning workflows.\n2. Fundamentals of Geometry in Machine Learning\n- Euclidean vs. non-Euclidean spaces: their relevance in ML.\n- Role of geometry in data understanding: embedding data in low-dimensional manifolds, shape analysis, and object representation.\n- Geometry in various ML tasks: classification, segmentation, reconstruction, and retrieval.\n- Relationship between geometry and deep learning: embeddings and shape representations.\n- Definitions of geometry in a machine learning context.\n3. Linear Algebra for 3D Data\n- Vector and matrix transformations: foundation for geometric computations.\n- Eigenvalues and eigenvectors: their role in principal component analysis (PCA) and shape alignment.\n- Singular Value Decomposition (SVD) and its applications in 3D data processing.\n4. Basic Geometric Concepts\n- Curves and surfaces: discrete vs. continuous representations; how continuous geometry translates into discrete samples (e.g., mesh vertices).\n- Transformations: translations, rotations, scaling, reflections, and shearing.\n- Point clouds: advantages and drawbacks in representing 3D shapes.\n- Meshes: vertices, edges, and faces for surface representation.\n- Voxels: volumetric representation for occupancy grids and 3D CNNs.\n- Parametric surfaces and implicit functions: alternative representations for complex geometries.\n5. Camera Models and Perspective Geometry\n- Pinhole camera model: projection of 3D points into 2D images.\n- Intrinsic and extrinsic camera parameters: calibration and transformations.\n- Distortion models: radial and tangential distortions in real-world lenses.\n6. Representations of 3D Data\n- Point clouds: advantages and limitations.\n- Meshes: topological structure and connectivity.\n- Voxels: volumetric representation and memory efficiency.\n- Implicit representations: signed distance functions (SDFs) and neural implicit models.\n7. Coordinate Systems, Transformations, and Projections\n- Cartesian, polar, and spherical coordinates: when and why each is used.\n- Homogeneous coordinates and projective transformations; their applications (e.g., camera calibration).\n- Projection methods (orthographic vs. perspective): impact on geometric interpretation in vision tasks.\n8. Graph Representations for Geometric Data\n- Graph structures for representing meshes, skeletons, and connectivity; using graphs to represent relationships among points or mesh vertices.\n- Adjacency matrices, graph Laplacians, and spectral representations; capturing local and global structural information.\n- Graph-based learning techniques for 3D object recognition.\n- Challenges with irregular data structures and strategies to address them.\n9. Metrics and Measurements in Geometry\n- Distance metrics: Euclidean, geodesic, Manhattan, Mahalanobis, etc.\n- Curvature estimation: Gaussian, mean, and principal curvature.\n- Area, volume, and surface integral properties in discrete geometric representations; measuring 2D and 3D shapes in continuous and discrete settings.\n10. Geometry Estimation Techniques\n- Least squares methods: solving overdetermined systems for geometric fitting; linear and non-linear least squares for fitting geometric models.\n- Iterative approaches: ICP (Iterative Closest Point) for shape alignment.\n- Analytical solutions vs. numerical optimization for different geometric problems.\n- The notion of fitting geometric primitives (lines, planes, circles) to data.\n- Importance of noise handling and outlier robustness in geometric tasks.\n- Trade-offs between computational complexity and estimation accuracy.\n11. Robust Estimation Techniques (RANSAC and Variants)\n- Robust estimation techniques: handling noise and outliers.\n- RANSAC: random sampling to find inliers in noisy data.\n- Extensions of RANSAC (MLESAC, MSAC, PROSAC): increasing robustness and computational efficiency.\n- Use cases in computer vision: homography estimation, fundamental matrix estimation, and more.\n12. Machine Learning-Based Geometry Estimation\n- Regression models for geometric predictions; predicting 2D/3D landmarks or transformations.\n- Deep learning-based estimators: learning transformations, depth, pose and surface normals.\n- Loss functions tailored to geometric data: Chamfer distance, Earth Mover's Distance.\n- Role of regularization and loss functions tailored to geometric constraints.\n13. Evaluation Metrics for Geometry Estimation\n- Mean squared error (MSE) in geometric contexts; pros and cons in geometric settings.\n- Chamfer distance: measuring point cloud similarity; measuring shape similarity for point clouds or meshes.\n- Earth Mover's Distance (EMD): comparing 3D distributions; a more precise metric for matching distributions of points.\n14. Introduction to Stereo Vision\n- Binocular vision: fundamentals of disparity and depth perception.\n- Epipolar geometry: fundamental matrix, essential matrix, and rectification.\n- Stereo matching algorithms: traditional and learning-based approaches.\n15. Geometric Feature Learning\n- Definition of geometric features: curvature-based descriptors, shape contexts, keypoints.\n- Hand-crafted vs. learned features: advantages, limitations, and historical evolution.\n- Common applications of geometric features: object recognition, matching, and registration.\n- Benefits of learning geometric features\n- Overview of feature extraction methods\n\n*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Highlight from \"../../../components/Highlight\";\nimport Code from \"../../../components/Code\";\nimport Latex from \"../../../components/Latex\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    h3: \"h3\",\n    a: \"a\",\n    span: \"span\",\n    hr: \"hr\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    ol: \"ol\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components), {Image} = _components;\n  if (!Image) _missingMdxReference(\"Image\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.em, null, \"A computer vision researcher is like an artist (always starving).\")), \"\\n\", React.createElement(\"br\"), \"\\n\", \"\\n\", \"\\n\", React.createElement(_components.p, null, \"Geometry and its associated concepts have long played a pivotal role in the history of computer science, shaping how we represent and interpret the world in computational systems. The interplay between geometry and algorithmic thinking dates back to the earliest eras of computational geometry, when researchers studied methods for polygon clipping, line intersection, and triangulation to solve basic problems in computer graphics and geographical information systems. In the 1960s and 1970s, as computer graphics technology gradually matured, the demand for faster and more efficient geometric algorithms grew, leading to the formal inception of computational geometry as a discipline — defined primarily by the rigorous study of algorithms for geometric problems.\"), \"\\n\", React.createElement(_components.p, null, \"By the 1980s, geometry started becoming central to robotics, computer vision, and pattern recognition research, where tasks such as object localization and shape matching required robust geometric transformations (translation, rotation, and scaling) to be handled computationally. Simultaneously, the rise of personal computing and the gaming industry fueled an interest in 3D rendering and real-time graphics, triggering a cascade of research in geometric modeling, hidden surface removal, and advanced rendering pipelines. As machine learning evolved from statistical pattern recognition, geometry found further relevance — particularly in the representation of high-dimensional data and the extraction of meaningful, lower-dimensional structures to facilitate classification or regression tasks.\"), \"\\n\", React.createElement(_components.p, null, \"Pioneering works in the 1990s, such as those by Hartley, Zisserman, and others, established the theoretical and algorithmic bedrock for geometric computer vision (epipolar geometry, projective transformations, and camera calibration). These breakthroughs allowed accurate 3D reconstruction from images and fostered robust methodologies for tasks like stereo vision and structure-from-motion. With these developments, geometry became a unifying theme across multiple branches of AI research: it related the abstract notion of an object in the world to pixel intensities in an image, bridging the gap between raw sensory input and 3D scene understanding.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"modern-motivations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#modern-motivations\",\n    \"aria-label\": \"modern motivations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Modern motivations\"), \"\\n\", React.createElement(_components.p, null, \"Today, geometry underpins numerous modern and emerging applications in machine learning and data science. Autonomous driving systems, for instance, rely on real-time geometry estimation from LiDAR point clouds and camera feeds to detect obstacles and estimate motion trajectories. In augmented reality (AR) and virtual reality (VR), accurate understanding of 3D scene geometry is essential for projecting or blending virtual objects into real-world scenes in a photorealistic and geometrically consistent manner. Moreover, in robotics, geometry informs navigation, mapping (e.g., SLAM — Simultaneous Localization and Mapping), and manipulation tasks that enable robots to interact intelligently with their environment.\"), \"\\n\", React.createElement(_components.p, null, \"In the realm of deep learning, geometry has become indispensable: network architectures increasingly incorporate geometric priors to handle 3D data, from point-based networks that process unstructured point clouds (e.g., PointNet, PointNet++), to mesh-based learning for shape analysis and segmentation, to 3D convolutional neural networks for volumetric data. There is also a fast-growing body of research on neural implicit representations for 3D reconstruction, such as neural radiance fields (NeRF), which estimate scenes by modeling continuous implicit functions. These advanced methods highlight how geometry is no longer just an afterthought in learning-based pipelines; it is integral to how modern systems interpret, represent, and manipulate the world around them.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"overview-of-key-challenges-in-integrating-geometric-knowledge-into-machine-learning-workflows\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#overview-of-key-challenges-in-integrating-geometric-knowledge-into-machine-learning-workflows\",\n    \"aria-label\": \"overview of key challenges in integrating geometric knowledge into machine learning workflows permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Overview of key challenges in integrating geometric knowledge into machine learning workflows\"), \"\\n\", React.createElement(_components.p, null, \"Despite geometry's importance, incorporating geometric knowledge into machine learning workflows remains challenging. First, real-world data can be extremely noisy, incomplete, or unstructured, leading to substantial difficulties in stable estimation of geometric parameters. For example, sensor data from LiDAR or depth cameras often contain missing regions and partial occlusions. Handling such imperfection requires robust, noise-tolerant algorithms.\"), \"\\n\", React.createElement(_components.p, null, \"Second, many of the common machine learning approaches — particularly standard fully connected or convolutional neural networks — are well-suited for images (2D pixel arrays) or sequential data, but are less trivial to adapt to geometric data structures like point clouds or meshes that do not share regular topologies. Designing architectures that preserve rotational or translational invariances, while still learning powerful representations, is an ongoing research endeavor.\"), \"\\n\", React.createElement(_components.p, null, \"Furthermore, bridging Euclidean geometry with modern deep networks often requires advanced losses, metrics, or optimization techniques. Simply using Euclidean distance in high-dimensional latent spaces can be insufficient for capturing the manifold structure of complex geometric objects. Researchers therefore explore geodesic distances on manifolds, graph-based adjacency representations for meshes, or specialized distance metrics (e.g., Chamfer distance, Earth Mover's Distance) that account for the unique properties of geometric data.\"), \"\\n\", React.createElement(_components.p, null, \"Finally, geometry in machine learning often involves dealing with transformations: pose estimation, calibration, or alignment. Solving transformation parameters typically involves iterative optimization or specialized algorithms such as RANSAC for robust estimation. These tasks can be computationally intensive, especially at scale or in real-time applications like robotics and self-driving cars. The quest to unify geometric rigor, computational efficiency, and machine learning performance remains a key frontier for researchers and practitioners alike.\"), \"\\n\", React.createElement(_components.p, null, \"With these motivations and challenges in mind, I will now dive into the fundamental principles and tools that drive geometry estimation in machine learning contexts, beginning with a look at the basic definitions and concepts that connect geometry and data representation.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"2-fundamentals-of-geometry-in-machine-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-fundamentals-of-geometry-in-machine-learning\",\n    \"aria-label\": \"2 fundamentals of geometry in machine learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. Fundamentals of geometry in machine learning\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"euclidean-vs-non-euclidean-spaces-their-relevance-in-ml\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#euclidean-vs-non-euclidean-spaces-their-relevance-in-ml\",\n    \"aria-label\": \"euclidean vs non euclidean spaces their relevance in ml permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Euclidean vs. non-Euclidean spaces: their relevance in ML\"), \"\\n\", React.createElement(_components.p, null, \"The starting point for studying geometry in machine learning is to understand the spaces in which data resides. A \", React.createElement(Highlight, null, \"Euclidean space\"), \" is a flat, n-dimensional space where distances and angles follow the well-known Euclidean norm. For instance, 2D and 3D coordinate systems used in classical geometry are typical Euclidean spaces, and much of the standard ML repertoire — like linear regression or standard neural networks — implicitly assumes data in such a space.\"), \"\\n\", React.createElement(_components.p, null, \"However, real-world data can often lie on manifolds that do not conform strictly to Euclidean geometry. These \", React.createElement(Highlight, null, \"non-Euclidean spaces\"), \" can have curvature, complex topological structures, or adjacency relationships that make them better described by Riemannian geometry or graph-based representations. Applications such as analyzing social networks, analyzing meshes for 3D object surfaces, or modeling spherical data (like Earth geodesics) need to break free from purely Euclidean assumptions. This has led to the development of specialized frameworks — like geometric deep learning (e.g., GCNs, graph neural networks) — that respect the underlying structure of non-Euclidean data.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"role-of-geometry-in-data-understanding-embedding-data-in-low-dimensional-manifolds-shape-analysis-and-object-representation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#role-of-geometry-in-data-understanding-embedding-data-in-low-dimensional-manifolds-shape-analysis-and-object-representation\",\n    \"aria-label\": \"role of geometry in data understanding embedding data in low dimensional manifolds shape analysis and object representation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Role of geometry in data understanding: embedding data in low-dimensional manifolds, shape analysis, and object representation\"), \"\\n\", React.createElement(_components.p, null, \"Machine learning often involves mapping high-dimensional data to lower-dimensional representations, a process sometimes referred to as \", React.createElement(Highlight, null, \"embedding\"), \". Techniques like principal component analysis (PCA), manifold learning (e.g., Locally Linear Embedding, t-SNE, UMAP), and autoencoders exemplify how geometry helps us discover the underlying low-dimensional structure in data.\"), \"\\n\", React.createElement(_components.p, null, \"In 3D shape analysis, geometry is crucial in capturing intrinsic properties such as curvature or topological features. For instance, shape descriptors derived from curvature or geodesics can be used to classify objects in a 3D dataset. Object representation methods — like point clouds, meshes, or implicit surfaces — are all essentially geometric encodings that aim to preserve shape information. The type of representation chosen can drastically affect the performance of subsequent learning tasks such as classification or segmentation.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"geometry-in-various-ml-tasks-classification-segmentation-reconstruction-and-retrieval\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#geometry-in-various-ml-tasks-classification-segmentation-reconstruction-and-retrieval\",\n    \"aria-label\": \"geometry in various ml tasks classification segmentation reconstruction and retrieval permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Geometry in various ML tasks: classification, segmentation, reconstruction, and retrieval\"), \"\\n\", React.createElement(_components.p, null, \"Geometry plays a direct role in various ML tasks:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Classification\"), \": 3D object classification can benefit from geometric features (e.g., shape descriptors) or from specialized networks that process 3D data.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Segmentation\"), \": Geometric cues help identify boundaries and regions on surfaces or volumes, separating an object's parts meaningfully.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Reconstruction\"), \": Inferring a full geometry (e.g., reconstructing a complete 3D shape from partial sensor scans) demands robust modeling that respects the inherent geometric constraints of objects.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Retrieval\"), \": Retrieving similar shapes or images from a database often involves computing shape distances or descriptors that are robust to noise, partial occlusions, or transformations.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"relationship-between-geometry-and-deep-learning-embeddings-and-shape-representations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#relationship-between-geometry-and-deep-learning-embeddings-and-shape-representations\",\n    \"aria-label\": \"relationship between geometry and deep learning embeddings and shape representations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Relationship between geometry and deep learning: embeddings and shape representations\"), \"\\n\", React.createElement(_components.p, null, \"The integration of geometry into deep learning manifests in different ways. One popular approach is to define \", React.createElement(Highlight, null, \"geometric deep learning\"), \" architectures that accept graph-structured data or manifold-structured data as input, preserving adjacency information. Another approach is to incorporate geometry into the loss function — like the Chamfer distance or Earth Mover's Distance for shape matching — ensuring that the network output is penalized in a way that truly reflects geometric (rather than purely pixelwise or coordinatewise) deviations.\"), \"\\n\", React.createElement(_components.p, null, \"In shape representation learning, networks may implicitly learn geometry, such as in implicit neural representations, where a neural network function \", React.createElement(Latex, {\n    text: \"\\\\(f(\\\\mathbf{x})\\\\)\"\n  }), \" indicates occupancy or signed distance for each point \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{x}\\\\)\"\n  }), \" in space. By learning this continuous function, the geometry is represented in the network weights themselves. This approach has yielded state-of-the-art results in tasks like shape completion and novel view synthesis.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"definitions-of-geometry-in-a-machine-learning-context\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#definitions-of-geometry-in-a-machine-learning-context\",\n    \"aria-label\": \"definitions of geometry in a machine learning context permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Definitions of geometry in a machine learning context\"), \"\\n\", React.createElement(_components.p, null, \"In a machine learning context, geometry usually refers to the study of:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Spaces\"), \": Euclidean, Riemannian, manifold-based, etc.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Transformations\"), \": Rigid (rotation, translation), affine (scaling, shear), or projective transformations.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Metrics\"), \": Distances or similarity measures that reflect geometric relationships between data points or shapes.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Representations\"), \": Discrete (point clouds, meshes, graphs) or continuous (implicit functions) ways of expressing objects or datasets.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Optimization\"), \": Methods to estimate parameters (e.g., pose, shape) that minimize or maximize a geometric objective function.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Understanding these definitions is the first step toward applying geometry in real-world machine learning pipelines.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"3-linear-algebra-for-3d-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-linear-algebra-for-3d-data\",\n    \"aria-label\": \"3 linear algebra for 3d data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3. Linear algebra for 3D data\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"vector-and-matrix-transformations-foundation-for-geometric-computations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#vector-and-matrix-transformations-foundation-for-geometric-computations\",\n    \"aria-label\": \"vector and matrix transformations foundation for geometric computations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Vector and matrix transformations: foundation for geometric computations\"), \"\\n\", React.createElement(_components.p, null, \"Linear algebra provides the fundamental language of geometry in many machine learning applications, especially when dealing with 3D data. Vectors represent points or directions in \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^3\\\\)\"\n  }), \", while matrices encode transformations such as rotation, scaling, or reflection. A rotation matrix \", React.createElement(Latex, {\n    text: \"\\\\(R\\\\)\"\n  }), \", for example, is an orthonormal \", React.createElement(Latex, {\n    text: \"\\\\(3 \\\\times 3\\\\)\"\n  }), \" matrix with determinant 1. When we multiply a vector \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{v} \\\\in \\\\mathbb{R}^3\\\\)\"\n  }), \" by \", React.createElement(Latex, {\n    text: \"\\\\(R\\\\)\"\n  }), \", we effectively rotate \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{v}\\\\)\"\n  }), \" around the origin by a certain angle and axis determined by \", React.createElement(Latex, {\n    text: \"\\\\(R\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, \"Translation is not linear in the strict sense — adding a constant offset to a vector is an affine transformation — so it is often handled in a homogeneous coordinate system of dimension 4. In homogeneous coordinates, a 4D matrix can represent combined operations like rotation, translation, and scaling in a single framework, making it extremely convenient for camera transformations and object manipulations.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"eigenvalues-and-eigenvectors-their-role-in-principal-component-analysis-pca-and-shape-alignment\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#eigenvalues-and-eigenvectors-their-role-in-principal-component-analysis-pca-and-shape-alignment\",\n    \"aria-label\": \"eigenvalues and eigenvectors their role in principal component analysis pca and shape alignment permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Eigenvalues and eigenvectors: their role in principal component analysis (PCA) and shape alignment\"), \"\\n\", React.createElement(_components.p, null, \"Eigenvalues and eigenvectors are central to many geometry-related tasks. If we have a covariance matrix \", React.createElement(Latex, {\n    text: \"\\\\(\\\\Sigma\\\\)\"\n  }), \" describing the distribution of points in \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^3\\\\)\"\n  }), \", the eigenvectors of \", React.createElement(Latex, {\n    text: \"\\\\(\\\\Sigma\\\\)\"\n  }), \" give the principal axes of variation, and the eigenvalues indicate how much variance exists along these axes. This is the cornerstone of PCA, which can reduce dimensionality or align shapes.\"), \"\\n\", React.createElement(_components.p, null, \"For instance, in shape alignment, one might compute the centroid of a set of 3D points, subtract this centroid from all points, and then compute the covariance. The dominant eigenvector indicates the direction of greatest variance, which can serve as a reference axis for aligning that shape to a canonical orientation.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"singular-value-decomposition-svd-and-its-applications-in-3d-data-processing\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#singular-value-decomposition-svd-and-its-applications-in-3d-data-processing\",\n    \"aria-label\": \"singular value decomposition svd and its applications in 3d data processing permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Singular Value Decomposition (SVD) and its applications in 3D data processing\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(Highlight, null, \"Singular Value Decomposition (SVD)\"), \" is a powerful tool for working with matrices in geometry. Given a matrix \", React.createElement(Latex, {\n    text: \"\\\\(M\\\\)\"\n  }), \", SVD factors it as:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nM = U \\\\Sigma V^T,\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(U\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(V\\\\)\"\n  }), \" are orthonormal matrices.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(\\\\Sigma\\\\)\"\n  }), \" is a diagonal matrix (with possibly rectangular shape if \", React.createElement(Latex, {\n    text: \"\\\\(M\\\\)\"\n  }), \" is not square) containing the singular values.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In 3D data processing, SVD often appears in shape alignment problems. For example, if we want to find the rotation \", React.createElement(Latex, {\n    text: \"\\\\(R\\\\)\"\n  }), \" that best aligns two point sets \", React.createElement(Latex, {\n    text: \"\\\\(\\\\{ \\\\mathbf{x}_i \\\\}\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\{ \\\\mathbf{y}_i \\\\}\\\\)\"\n  }), \" (assuming zero-centered data), we might form a correlation matrix \", React.createElement(Latex, {\n    text: \"\\\\(H = \\\\sum_i \\\\mathbf{y}_i \\\\mathbf{x}_i^T\\\\)\"\n  }), \". Then we can compute the SVD of \", React.createElement(Latex, {\n    text: \"\\\\(H\\\\)\"\n  }), \":\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nH = U \\\\Sigma V^T,\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"and set:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( R = V U^T \\\\)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"(if \", React.createElement(Latex, {\n    text: \"\\\\(\\\\det(V U^T) < 0\\\\)\"\n  }), \", we correct for reflection by flipping one column in \", React.createElement(Latex, {\n    text: \"\\\\(V\\\\)\"\n  }), \"). This yields the optimal rotation that minimizes the sum of squared distances between corresponding points \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{x}_i\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{y}_i\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, \"Below is a quick code snippet in Python illustrating how one might use SVD for a simple alignment of two 3D point clouds:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport numpy as np\n\ndef align_point_clouds(X, Y):\n    \"\"\"\n    Aligns point cloud X to point cloud Y via least squares\n    rotation and translation. X, Y: (N, 3) arrays.\n    Returns rotation matrix R and translation vector t\n    such that R@X + t ~ Y.\n    \"\"\"\n    # 1. Compute centroids\n    centroid_X = np.mean(X, axis=0)\n    centroid_Y = np.mean(Y, axis=0)\n    \n    # 2. Center the clouds\n    X_centered = X - centroid_X\n    Y_centered = Y - centroid_Y\n    \n    # 3. Compute correlation matrix\n    H = X_centered.T @ Y_centered\n    \n    # 4. SVD\n    U, S, Vt = np.linalg.svd(H)\n    R = Vt.T @ U.T\n    \n    # Ensure a proper rotation (det(R) should be +1)\n    if np.linalg.det(R) < 0:\n        Vt[2, :] *= -1\n        R = Vt.T @ U.T\n    \n    # 5. Compute translation\n    t = centroid_Y - R @ centroid_X\n    \n    return R, t\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"This simple routine demonstrates how linear algebra is deeply intertwined with geometry estimation tasks in 3D data processing.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"4-basic-geometric-concepts\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#4-basic-geometric-concepts\",\n    \"aria-label\": \"4 basic geometric concepts permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4. Basic geometric concepts\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"curves-and-surfaces-discrete-vs-continuous-representations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#curves-and-surfaces-discrete-vs-continuous-representations\",\n    \"aria-label\": \"curves and surfaces discrete vs continuous representations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Curves and surfaces: discrete vs. continuous representations\"), \"\\n\", React.createElement(_components.p, null, \"From a purely mathematical viewpoint, curves and surfaces exist in a continuous domain. However, in computational systems, we typically represent them discretely — e.g., a parametric curve sampled at many points, or a surface represented as a mesh (with vertices and faces). Translating continuous geometry into discrete form introduces potential approximations, since we can only store a finite amount of data.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Curves\"), \": A curve in \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^2\\\\)\"\n  }), \" or \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^3\\\\)\"\n  }), \" can be parameterized by a function \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{r}(t)\\\\)\"\n  }), \" for \", React.createElement(Latex, {\n    text: \"\\\\(t\\\\)\"\n  }), \" in some interval. In practice, we might store only a set of sampled points \", React.createElement(Latex, {\n    text: \"\\\\(\\\\{\\\\mathbf{r}(t_i)\\\\}\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Surfaces\"), \": A surface in \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^3\\\\)\"\n  }), \" can be described by a parameterization \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{R}(u,v)\\\\)\"\n  }), \". Discretely, we might store a mesh or point cloud approximation.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"transformations-translations-rotations-scaling-reflections-and-shearing\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#transformations-translations-rotations-scaling-reflections-and-shearing\",\n    \"aria-label\": \"transformations translations rotations scaling reflections and shearing permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Transformations: translations, rotations, scaling, reflections, and shearing\"), \"\\n\", React.createElement(_components.p, null, \"These \", React.createElement(Highlight, null, \"geometric transformations\"), \" can drastically change the appearance or orientation of an object, but they preserve certain geometric properties:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Translation\"), \": Shifts an object by a constant vector \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{t}\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Rotation\"), \": Pivots an object around some axis by an angle \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \", using a rotation matrix \", React.createElement(Latex, {\n    text: \"\\\\(R\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Scaling\"), \": Changes the size of an object, uniformly or anisotropically, with a scaling matrix \", React.createElement(Latex, {\n    text: \"\\\\(S\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Reflection\"), \": Mirrors an object across a plane or line, using a reflection matrix (determinant -1).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Shearing\"), \": Skews the coordinate axes, preserving volume for small transformations but distorting angles.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In many shape analysis tasks, we try to factor out these transformations when comparing shapes, ensuring that the comparison metric is invariant under rigid transformations (translation, rotation) and possibly scale. Reflection invariance may or may not be desirable, depending on the context (e.g., chirality or left-right symmetry might be relevant for certain objects).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"point-clouds-advantages-and-drawbacks-in-representing-3d-shapes\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#point-clouds-advantages-and-drawbacks-in-representing-3d-shapes\",\n    \"aria-label\": \"point clouds advantages and drawbacks in representing 3d shapes permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Point clouds: advantages and drawbacks in representing 3D shapes\"), \"\\n\", React.createElement(_components.p, null, \"A \", React.createElement(Highlight, null, \"point cloud\"), \" is a set of points in \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^3\\\\)\"\n  }), \" representing the surface or volume of an object. Point clouds are often directly obtained from sensors such as LiDAR or depth cameras. They are simple to store (just a list of coordinates) and easy to capture, but they have some drawbacks:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"No explicit connectivity\"), \": Adjacent points in space are not explicitly linked, complicating the extraction of surfaces or meshes.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Sensitivity to sampling density\"), \": Different regions of an object may have different densities, leading to potential holes or redundancy.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Difficult to compute curvature or topology\"), \" without additional processing or local neighborhood searches.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Despite these issues, point clouds are widely used because they are the most direct representation from many depth sensors and are supported by specialized deep learning architectures (e.g., PointNet, PointNet++).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"meshes-vertices-edges-and-faces-for-surface-representation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#meshes-vertices-edges-and-faces-for-surface-representation\",\n    \"aria-label\": \"meshes vertices edges and faces for surface representation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Meshes: vertices, edges, and faces for surface representation\"), \"\\n\", React.createElement(_components.p, null, \"A \", React.createElement(Highlight, null, \"mesh\"), \" is a structured representation of a surface using a set of vertices \", React.createElement(Latex, {\n    text: \"\\\\(\\\\{v_i\\\\}\\\\)\"\n  }), \", edges \", React.createElement(Latex, {\n    text: \"\\\\(\\\\{e_i\\\\}\\\\)\"\n  }), \", and faces \", React.createElement(Latex, {\n    text: \"\\\\(\\\\{f_i\\\\}\\\\)\"\n  }), \". The most common form is a triangular mesh, where each face is a triangle. Meshes explicitly encode connectivity: which vertices are neighbors and how faces are arranged. This allows more sophisticated geometric computations, such as curvature estimation, collision detection, and advanced rendering algorithms. However, generating a good-quality mesh from raw data might require complex post-processing steps (e.g., surface reconstruction from point clouds).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"voxels-volumetric-representation-for-occupancy-grids-and-3d-cnns\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#voxels-volumetric-representation-for-occupancy-grids-and-3d-cnns\",\n    \"aria-label\": \"voxels volumetric representation for occupancy grids and 3d cnns permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Voxels: volumetric representation for occupancy grids and 3D CNNs\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Voxels\"), \" are the 3D analog of pixels: small cubic units that partition a volume. A voxel grid is a 3D array where each cell can store occupancy information (is it inside or outside the object?), color, or other attributes. Voxels are extremely intuitive for certain tasks (like occupancy grids in robotics), and 3D convolutional neural networks can process voxel data similarly to how 2D CNNs process images. However, voxel representations can be memory-intensive for high-resolution grids, and they may also require interpolation or downsampling to fit into computational constraints.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"parametric-surfaces-and-implicit-functions-alternative-representations-for-complex-geometries\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#parametric-surfaces-and-implicit-functions-alternative-representations-for-complex-geometries\",\n    \"aria-label\": \"parametric surfaces and implicit functions alternative representations for complex geometries permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Parametric surfaces and implicit functions: alternative representations for complex geometries\"), \"\\n\", React.createElement(_components.p, null, \"More advanced representations can capture complex geometries efficiently:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Parametric surfaces\"), \": Define surfaces by a function \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{R}(u,v)\\\\)\"\n  }), \" with \", React.createElement(Latex, {\n    text: \"\\\\((u,v)\\\\)\"\n  }), \" in a parameter domain, enabling direct control over shape. Examples include Bézier surfaces, NURBS, and spline models frequently used in computer-aided design.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Implicit functions\"), \": Define a surface as the zero-level set of a function \", React.createElement(Latex, {\n    text: \"\\\\(f(\\\\mathbf{x})\\\\)\"\n  }), \". For instance, a signed distance function (SDF) encodes how far (and inside/outside) a point \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{x}\\\\)\"\n  }), \" is from the surface. Neural implicit representations (e.g., DeepSDF, NeRF) leverage neural networks to model these continuous functions across space, often achieving excellent reconstruction detail.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Each representation has unique strengths and challenges, and the choice often depends on the application's requirements regarding memory, precision, and ease of manipulation.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"5-camera-models-and-perspective-geometry\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#5-camera-models-and-perspective-geometry\",\n    \"aria-label\": \"5 camera models and perspective geometry permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5. Camera models and perspective geometry\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"pinhole-camera-model-projection-of-3d-points-into-2d-images\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#pinhole-camera-model-projection-of-3d-points-into-2d-images\",\n    \"aria-label\": \"pinhole camera model projection of 3d points into 2d images permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Pinhole camera model: projection of 3D points into 2D images\"), \"\\n\", React.createElement(_components.p, null, \"In computer vision, perhaps the most fundamental geometric model is the pinhole camera. It describes how 3D points in the scene get projected onto a 2D image plane. If a 3D point is given by \", React.createElement(Latex, {\n    text: \"\\\\( \\\\mathbf{X} = (X, Y, Z) \\\\)\"\n  }), \", the pinhole camera model says that the corresponding 2D point \", React.createElement(Latex, {\n    text: \"\\\\( \\\\mathbf{x} = (x, y) \\\\)\"\n  }), \" on the image plane is found via perspective projection:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\begin{pmatrix}\\nx \\\\\\\\\\ny \\\\\\\\\\n1\\n\\\\end{pmatrix}\\n= K \\\\left[ R \\\\mid \\\\mathbf{t} \\\\right]\\n\\\\begin{pmatrix}\\nX \\\\\\\\\\nY \\\\\\\\\\nZ \\\\\\\\\\n1\\n\\\\end{pmatrix},\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(K\\\\)\"\n  }), \" is the \", React.createElement(Highlight, null, \"intrinsic camera matrix\"), \", encoding focal length and principal point.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\([R \\\\mid \\\\mathbf{t}]\\\\)\"\n  }), \" is the \", React.createElement(Highlight, null, \"extrinsic parameters\"), \" matrix, describing the rotation \", React.createElement(Latex, {\n    text: \"\\\\(R\\\\)\"\n  }), \" and translation \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{t}\\\\)\"\n  }), \" of the camera relative to the world coordinate system.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This model can explain much of the perspective geometry we observe: objects farther away from the camera project to smaller image footprints, and parallel lines in 3D appear to converge in the image (vanishing points).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"intrinsic-and-extrinsic-camera-parameters-calibration-and-transformations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#intrinsic-and-extrinsic-camera-parameters-calibration-and-transformations\",\n    \"aria-label\": \"intrinsic and extrinsic camera parameters calibration and transformations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Intrinsic and extrinsic camera parameters: calibration and transformations\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Intrinsic parameters\"), \": These include the focal lengths \", React.createElement(Latex, {\n    text: \"\\\\((f_x, f_y)\\\\)\"\n  }), \", the optical center or principal point \", React.createElement(Latex, {\n    text: \"\\\\((c_x, c_y)\\\\)\"\n  }), \", and possibly skew or aspect ratio parameters (often negligible in well-designed cameras). They define how 3D rays map to the 2D image plane inside the camera.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Extrinsic parameters\"), \": These define the camera's orientation (rotation) and position (translation) in the world. Together, they form a transformation that carries points from a global or object coordinate frame into the camera coordinate frame.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Camera calibration\"), \" is the process of determining \", React.createElement(Latex, {\n    text: \"\\\\(K\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\([R \\\\mid \\\\mathbf{t}]\\\\)\"\n  }), \". Calibration often involves taking pictures of known calibration objects (like checkerboard patterns) and solving for these parameters through optimization. In multi-camera setups, extrinsic calibrations between cameras must also be estimated to combine data consistently.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"distortion-models-radial-and-tangential-distortions-in-real-world-lenses\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#distortion-models-radial-and-tangential-distortions-in-real-world-lenses\",\n    \"aria-label\": \"distortion models radial and tangential distortions in real world lenses permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Distortion models: radial and tangential distortions in real-world lenses\"), \"\\n\", React.createElement(_components.p, null, \"Real lenses introduce distortions that deviate from the ideal pinhole model. Two common types:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Radial distortion\"), \": Arises because lens magnification changes with distance from the optical center. Straight lines in 3D might appear curved in the image. This is typically modeled with coefficients \", React.createElement(Latex, {\n    text: \"\\\\(k_1, k_2, k_3\\\\)\"\n  }), \" in polynomial expansions.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Tangential distortion\"), \": Occurs when the lens is not perfectly parallel to the imaging plane, modeled with parameters \", React.createElement(Latex, {\n    text: \"\\\\(p_1, p_2\\\\)\"\n  }), \". These distortions shift the image points slightly in tangential directions, causing asymmetrical warping.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Correcting distortion is crucial for accurate geometric measurements from images, especially in robotics and 3D reconstruction tasks, where small calibration errors can lead to large reprojection errors in 3D.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"6-representations-of-3d-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#6-representations-of-3d-data\",\n    \"aria-label\": \"6 representations of 3d data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"6. Representations of 3D data\"), \"\\n\", React.createElement(_components.p, null, \"(This section somewhat overlaps with earlier content on point clouds, meshes, voxels. I will use this chapter to dive more deeply into the trade-offs and best use cases.)\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"point-clouds-advantages-and-limitations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#point-clouds-advantages-and-limitations\",\n    \"aria-label\": \"point clouds advantages and limitations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Point clouds: advantages and limitations\"), \"\\n\", React.createElement(_components.p, null, \"Point clouds represent a set of 3D points \", React.createElement(Latex, {\n    text: \"\\\\(\\\\{\\\\mathbf{p}_i\\\\}\\\\)\"\n  }), \". As mentioned, they are easy to capture directly from LiDAR or structured-light sensors. They work well in real-time tasks where speed is paramount, such as collision detection or quick environment scanning. However, point clouds do not carry explicit connectivity or adjacency, and their sampling density can vary widely. This complicates computations that rely on surface normals or curvature. Researchers often approximate local geometry by building a neighborhood graph or using a K-d tree to locate nearest neighbors for each point.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"meshes-topological-structure-and-connectivity\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#meshes-topological-structure-and-connectivity\",\n    \"aria-label\": \"meshes topological structure and connectivity permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Meshes: topological structure and connectivity\"), \"\\n\", React.createElement(_components.p, null, \"Meshes remain the gold standard when we need a well-defined surface. For instance, many high-level operations — like texture mapping, advanced rendering, or finite element analysis — depend on a clean mesh. Nonetheless, generating a clean mesh from sensor data can be non-trivial. In advanced machine learning tasks (e.g., 3D shape generation or segmentation), specialized neural networks can output mesh vertices and faces directly, but this typically requires a more complex pipeline than point cloud or voxel-based methods.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"voxels-volumetric-representation-and-memory-efficiency\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#voxels-volumetric-representation-and-memory-efficiency\",\n    \"aria-label\": \"voxels volumetric representation and memory efficiency permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Voxels: volumetric representation and memory efficiency\"), \"\\n\", React.createElement(_components.p, null, \"Voxel grids have an intuitive analogy with images, enabling the use of 3D CNN architectures for tasks like 3D object classification or segmentation. However, naive voxelization at high resolution consumes enormous memory, limiting real-time use on large scenes or requiring coarse resolution that might lose detail. Techniques like octrees or hierarchical voxel grids mitigate memory use, storing finer resolution only where needed. If the data's bounding volume is known and not too large, voxels offer a straightforward solution.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"implicit-representations-signed-distance-functions-sdfs-and-neural-implicit-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#implicit-representations-signed-distance-functions-sdfs-and-neural-implicit-models\",\n    \"aria-label\": \"implicit representations signed distance functions sdfs and neural implicit models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Implicit representations: signed distance functions (SDFs) and neural implicit models\"), \"\\n\", React.createElement(_components.p, null, \"One of the most revolutionary developments in recent years has been the use of neural networks to represent geometric shapes implicitly. For instance, a neural network \", React.createElement(Latex, {\n    text: \"\\\\(f_\\\\theta(\\\\mathbf{x})\\\\)\"\n  }), \" might take as input a 3D coordinate \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{x}\\\\)\"\n  }), \" and output the signed distance to the shape surface. Wherever \", React.createElement(Latex, {\n    text: \"\\\\(f_\\\\theta(\\\\mathbf{x}) = 0\\\\)\"\n  }), \", we are on the surface. This approach can achieve high fidelity reconstructions while using less memory than a dense voxel grid, because the function is parameterized by the network's weights, not by a discretized grid.\"), \"\\n\", React.createElement(_components.p, null, \"Neural Radiance Fields (NeRF), while not exactly an SDF, is a closely related approach that encodes radiance and density in a neural network. It has shown remarkable results for novel view synthesis. The theme is consistent: an implicit neural representation can store a lot of shape and appearance information in a compact form, providing a continuous, high-resolution geometry that can be sampled at arbitrary points in space.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"7-coordinate-systems-transformations-and-projections\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#7-coordinate-systems-transformations-and-projections\",\n    \"aria-label\": \"7 coordinate systems transformations and projections permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"7. Coordinate systems, transformations, and projections\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"cartesian-polar-and-spherical-coordinates-when-and-why-each-is-used\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cartesian-polar-and-spherical-coordinates-when-and-why-each-is-used\",\n    \"aria-label\": \"cartesian polar and spherical coordinates when and why each is used permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Cartesian, polar, and spherical coordinates: when and why each is used\"), \"\\n\", React.createElement(_components.p, null, \"Different applications benefit from different coordinate systems:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Cartesian coordinates\"), \" \", React.createElement(Latex, {\n    text: \"\\\\((x,y,z)\\\\)\"\n  }), \": Straightforward and universal; used by default in many machine learning methods due to matrix-based linear algebra.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Polar (2D) or cylindrical (3D) coordinates\"), \" \", React.createElement(Latex, {\n    text: \"\\\\((r, \\\\theta)\\\\)\"\n  }), \" or \", React.createElement(Latex, {\n    text: \"\\\\((r, \\\\theta, z)\\\\)\"\n  }), \": Useful for rotationally symmetric situations or for analyzing radial features.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Spherical coordinates\"), \" \", React.createElement(Latex, {\n    text: \"\\\\((\\\\rho, \\\\phi, \\\\theta)\\\\)\"\n  }), \": Handy when dealing with all-round radial symmetries or spherical data (like geospatial or astronomy data).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"While transformations between these systems are standard, the choice of coordinate system can simplify or complicate computations. For instance, analyzing rings in a radial domain might be easier in polar or spherical coordinates, but typical ML frameworks expect Cartesian data arrays.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"homogeneous-coordinates-and-projective-transformations-their-applications-eg-camera-calibration\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#homogeneous-coordinates-and-projective-transformations-their-applications-eg-camera-calibration\",\n    \"aria-label\": \"homogeneous coordinates and projective transformations their applications eg camera calibration permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Homogeneous coordinates and projective transformations; their applications (e.g., camera calibration)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Homogeneous coordinates\"), \" embed \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^n\\\\)\"\n  }), \" in \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^{n+1}\\\\)\"\n  }), \", allowing translation to be expressed via matrix multiplication. A point \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{x} \\\\in \\\\mathbb{R}^3\\\\)\"\n  }), \" is represented as \", React.createElement(Latex, {\n    text: \"\\\\((x, y, z, 1)\\\\)\"\n  }), \" in homogeneous form. This representation also paves the way for \", React.createElement(Highlight, null, \"projective transformations\"), \", which can model perspective effects, camera intrinsics, and other advanced transformations with a single \", React.createElement(Latex, {\n    text: \"\\\\(4 \\\\times 4\\\\)\"\n  }), \" matrix in 3D.\"), \"\\n\", React.createElement(_components.p, null, \"Camera calibration heavily relies on homogeneous coordinates because it unifies rotation, translation, and projection into one linear framework. For instance, a point in world coordinates is multiplied by the extrinsic matrix (rotation + translation) to get the camera coordinate, then multiplied by the intrinsic matrix to map to the 2D image plane, all in a homogeneous formulation.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"projection-methods-orthographic-vs-perspective-impact-on-geometric-interpretation-in-vision-tasks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#projection-methods-orthographic-vs-perspective-impact-on-geometric-interpretation-in-vision-tasks\",\n    \"aria-label\": \"projection methods orthographic vs perspective impact on geometric interpretation in vision tasks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Projection methods (orthographic vs. perspective): impact on geometric interpretation in vision tasks\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Orthographic projection\"), \" assumes parallel projection rays, ignoring perspective foreshortening. It is simple but less realistic, and it's sometimes used for tasks that require a dimensionally consistent view (e.g., technical drawings or analyzing distant objects).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Perspective projection\"), \" is the real-world model where rays converge at the camera center. Objects further from the camera appear smaller. This is more accurate but also more complex to handle analytically.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In machine learning tasks, perspective projection is typically used when dealing with real image data or 3D reconstruction from cameras. Orthographic projection might be suitable for specialized tasks, such as medical imaging slices or certain engineering applications.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"8-graph-representations-for-geometric-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#8-graph-representations-for-geometric-data\",\n    \"aria-label\": \"8 graph representations for geometric data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8. Graph representations for geometric data\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"graph-structures-for-representing-meshes-skeletons-and-connectivity-using-graphs-to-represent-relationships-among-points-or-mesh-vertices\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#graph-structures-for-representing-meshes-skeletons-and-connectivity-using-graphs-to-represent-relationships-among-points-or-mesh-vertices\",\n    \"aria-label\": \"graph structures for representing meshes skeletons and connectivity using graphs to represent relationships among points or mesh vertices permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Graph structures for representing meshes, skeletons, and connectivity; using graphs to represent relationships among points or mesh vertices\"), \"\\n\", React.createElement(_components.p, null, \"A mesh can be interpreted as a graph whose vertices are mesh points and whose edges represent adjacency. Beyond meshes, graphs are widely used to represent skeletons (e.g., for human pose estimation, connecting joints with edges) or even point clouds, by building a nearest-neighbor graph. This allows leveraging graph-based algorithms — like graph searches or shortest paths — and advanced spectral tools (e.g., the graph Laplacian).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"adjacency-matrices-graph-laplacians-and-spectral-representations-capturing-local-and-global-structural-information\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#adjacency-matrices-graph-laplacians-and-spectral-representations-capturing-local-and-global-structural-information\",\n    \"aria-label\": \"adjacency matrices graph laplacians and spectral representations capturing local and global structural information permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Adjacency matrices, graph Laplacians, and spectral representations; capturing local and global structural information\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Adjacency matrix \", React.createElement(Latex, {\n    text: \"\\\\(A\\\\)\"\n  })), \": A square matrix where \", React.createElement(Latex, {\n    text: \"\\\\(A_{ij}=1\\\\)\"\n  }), \" if vertices \", React.createElement(Latex, {\n    text: \"\\\\(i\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(j\\\\)\"\n  }), \" are connected, and 0 otherwise. This is a direct way to encode graph connectivity, but it can be memory heavy for large graphs.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Graph Laplacian \", React.createElement(Latex, {\n    text: \"\\\\(L\\\\)\"\n  })), \": Defined as \", React.createElement(Latex, {\n    text: \"\\\\(D - A\\\\)\"\n  }), \" where \", React.createElement(Latex, {\n    text: \"\\\\(D\\\\)\"\n  }), \" is the diagonal degree matrix. The Laplacian's eigenvalues and eigenvectors reveal structural properties of the graph, like connected components or smoothness. In geometry processing, the Laplacian can approximate curvature on a mesh.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Spectral representations\"), \": Many algorithms exploit the eigen-decomposition of \", React.createElement(Latex, {\n    text: \"\\\\(L\\\\)\"\n  }), \" to define \", React.createElement(Highlight, null, \"spectral filtering\"), \" or \", React.createElement(Highlight, null, \"spectral embeddings\"), \". For instance, in manifold learning, one might use the first few eigenvectors of \", React.createElement(Latex, {\n    text: \"\\\\(L\\\\)\"\n  }), \" to parameterize a manifold in a lower-dimensional space.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"graph-based-learning-techniques-for-3d-object-recognition\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#graph-based-learning-techniques-for-3d-object-recognition\",\n    \"aria-label\": \"graph based learning techniques for 3d object recognition permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Graph-based learning techniques for 3D object recognition\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Geometric deep learning\"), \" has spawned a variety of graph neural network (GNN) architectures (e.g., Graph Convolutional Networks, Graph Attention Networks, MeshCNN). These methods propagate information along edges in the graph, allowing each vertex's representation to be updated based on its neighbors. For 3D object recognition, this can incorporate local geometric features while preserving global connectivity. In tasks like mesh segmentation, each face or vertex is classified into object parts by iteratively aggregating local context from neighbors in the graph.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"challenges-with-irregular-data-structures-and-strategies-to-address-them\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#challenges-with-irregular-data-structures-and-strategies-to-address-them\",\n    \"aria-label\": \"challenges with irregular data structures and strategies to address them permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Challenges with irregular data structures and strategies to address them\"), \"\\n\", React.createElement(_components.p, null, \"Unlike images (which are structured grids), meshes and point clouds yield \", React.createElement(Highlight, null, \"irregular data structures\"), \" with no uniform connectivity. This complicates standard CNN-based approaches that rely on consistent 2D arrays. Researchers address these challenges by:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Graph-based layers\"), \" that handle irregular neighborhoods explicitly.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Spatial partitioning\"), \" like K-nearest neighbors or octrees to impose local organization.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Parameterization\"), \" of surfaces onto planar patches (e.g., UV mapping) to enable partial 2D processing.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Mixed approaches\"), \" that integrate point-based or voxel-based preprocessing, bridging the gap between structured and unstructured data.\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"9-metrics-and-measurements-in-geometry\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#9-metrics-and-measurements-in-geometry\",\n    \"aria-label\": \"9 metrics and measurements in geometry permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"9. Metrics and measurements in geometry\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"distance-metrics-euclidean-geodesic-manhattan-mahalanobis-etc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#distance-metrics-euclidean-geodesic-manhattan-mahalanobis-etc\",\n    \"aria-label\": \"distance metrics euclidean geodesic manhattan mahalanobis etc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Distance metrics: Euclidean, geodesic, Manhattan, Mahalanobis, etc.\"), \"\\n\", React.createElement(_components.p, null, \"Choosing an appropriate distance metric can drastically affect ML performance on geometric tasks:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Euclidean distance\"), \": The standard metric in \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^n\\\\)\"\n  }), \". Computed as \", React.createElement(Latex, {\n    text: \"\\\\(\\\\sqrt{(x_1 - x_2)^2 + \\\\dots}\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Manhattan distance\"), \": Sums absolute differences in coordinates. Sometimes used for grid-like data.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Mahalanobis distance\"), \": Incorporates covariance structure, making it more robust to correlated dimensions.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Geodesic distance\"), \": The shortest path on a manifold or surface. On a mesh, geodesic distance can be approximated by shortest paths in the graph sense. This matters if you want to measure surface-based distances instead of straight-line (through space) distances.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"curvature-estimation-gaussian-mean-and-principal-curvature\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#curvature-estimation-gaussian-mean-and-principal-curvature\",\n    \"aria-label\": \"curvature estimation gaussian mean and principal curvature permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Curvature estimation: Gaussian, mean, and principal curvature\"), \"\\n\", React.createElement(_components.p, null, \"Curvature characterizes how a surface bends.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Gaussian curvature\"), \" is the product of the principal curvatures. It indicates how the surface bends in orthogonal directions.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Mean curvature\"), \" is the average of the principal curvatures.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Principal curvatures\"), \" are the eigenvalues of the shape operator, revealing maximum and minimum bending directions.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Accurately estimating curvature from discrete data (meshes, point clouds) can be challenging, requiring robust neighborhood fitting or specialized operators (e.g., discrete Laplacian operators).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"area-volume-and-surface-integral-properties-in-discrete-geometric-representations-measuring-2d-and-3d-shapes-in-continuous-and-discrete-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#area-volume-and-surface-integral-properties-in-discrete-geometric-representations-measuring-2d-and-3d-shapes-in-continuous-and-discrete-settings\",\n    \"aria-label\": \"area volume and surface integral properties in discrete geometric representations measuring 2d and 3d shapes in continuous and discrete settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Area, volume, and surface integral properties in discrete geometric representations; measuring 2D and 3D shapes in continuous and discrete settings\"), \"\\n\", React.createElement(_components.p, null, \"Measuring geometric properties like area or volume is straightforward in the continuous setting with integrals. Discretely, we approximate integrals by summing over polygonal faces or volumetric cells:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Polygonal mesh area\"), \": Sum the areas of all faces.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Volumetric grids\"), \": Count or sum the occupied voxels, multiplied by voxel volume.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Hybrid approaches\"), \": Use Monte Carlo integration methods where random points are sampled, and one checks whether they lie inside or outside the shape (often feasible in high dimensions).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In real-world machine learning tasks — like medical image segmentation — computing organ volume from segmentation masks is exactly an area + slice thickness or voxel counting problem. Accuracy depends heavily on resolution and the fidelity of the segmentation.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"10-geometry-estimation-techniques\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#10-geometry-estimation-techniques\",\n    \"aria-label\": \"10 geometry estimation techniques permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"10. Geometry estimation techniques\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"least-squares-methods-solving-overdetermined-systems-for-geometric-fitting-linear-and-non-linear-least-squares-for-fitting-geometric-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#least-squares-methods-solving-overdetermined-systems-for-geometric-fitting-linear-and-non-linear-least-squares-for-fitting-geometric-models\",\n    \"aria-label\": \"least squares methods solving overdetermined systems for geometric fitting linear and non linear least squares for fitting geometric models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Least squares methods: solving overdetermined systems for geometric fitting; linear and non-linear least squares for fitting geometric models\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Least squares\"), \" is the fundamental technique for fitting a model to data by minimizing the sum of squared residuals. In geometry, one might fit a line, plane, circle, or polynomial surface to a set of points.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"A \", React.createElement(Highlight, null, \"linear least squares\"), \" example is plane fitting: If you want a plane \", React.createElement(Latex, {\n    text: \"\\\\(ax + by + c = z\\\\)\"\n  }), \", and you have points \", React.createElement(Latex, {\n    text: \"\\\\((x_i, y_i, z_i)\\\\)\"\n  }), \", you can solve for \", React.createElement(Latex, {\n    text: \"\\\\(a, b, c\\\\)\"\n  }), \" by forming a design matrix and using normal equations or SVD.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Non-linear least squares\"), \" arises for fitting circles, spheres, or more complex surfaces. One typically uses iterative solvers (e.g., Gauss-Newton, Levenberg-Marquardt) to refine parameters.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"iterative-approaches-icp-iterative-closest-point-for-shape-alignment\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#iterative-approaches-icp-iterative-closest-point-for-shape-alignment\",\n    \"aria-label\": \"iterative approaches icp iterative closest point for shape alignment permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Iterative approaches: ICP (Iterative Closest Point) for shape alignment\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(Highlight, null, \"Iterative Closest Point (ICP)\"), \" algorithm is a workhorse for aligning two shapes (often in point cloud form). The algorithm:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Computes correspondences between points in the source and target sets (e.g., the closest points).\"), \"\\n\", React.createElement(_components.li, null, \"Estimates a transformation (rigid or affine) that minimizes distances between corresponding points.\"), \"\\n\", React.createElement(_components.li, null, \"Applies the transformation to the source and repeats until convergence.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ICP can handle partial overlaps and noise but may converge to local minima if the initial alignment is too far off. Variants exist to speed up convergence or improve outlier resistance.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"analytical-solutions-vs-numerical-optimization-for-different-geometric-problems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#analytical-solutions-vs-numerical-optimization-for-different-geometric-problems\",\n    \"aria-label\": \"analytical solutions vs numerical optimization for different geometric problems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Analytical solutions vs. numerical optimization for different geometric problems\"), \"\\n\", React.createElement(_components.p, null, \"Some geometry estimation problems (e.g., a 2D line fit or a rigid alignment using SVD) have closed-form solutions. Others (e.g., multi-view reconstruction with bundle adjustment) require iterative optimization. Analytical solutions tend to be faster and are guaranteed to find the global optimum (if the assumptions hold). Numerical optimizations, while more flexible, may require careful initialization and can be prone to local minima.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"the-notion-of-fitting-geometric-primitives-lines-planes-circles-to-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#the-notion-of-fitting-geometric-primitives-lines-planes-circles-to-data\",\n    \"aria-label\": \"the notion of fitting geometric primitives lines planes circles to data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"The notion of fitting geometric primitives (lines, planes, circles) to data\"), \"\\n\", React.createElement(_components.p, null, \"Fitting primitives is often the first step in a geometry pipeline — detecting lines in images, planes in point clouds, or circles in 2D data. This might be used for structural recognition in CAD models, urban scenes (walls, floors), or basic object detection (cylinders, spheres). Even deep learning pipelines can incorporate these modules: for instance, a network might segment a scene into planar regions, and then a geometric module fits planes to those regions.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"importance-of-noise-handling-and-outlier-robustness-in-geometric-tasks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#importance-of-noise-handling-and-outlier-robustness-in-geometric-tasks\",\n    \"aria-label\": \"importance of noise handling and outlier robustness in geometric tasks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Importance of noise handling and outlier robustness in geometric tasks\"), \"\\n\", React.createElement(_components.p, null, \"Real-world data invariably includes noise and outliers (e.g., spurious points from sensor artifacts). Traditional least squares is sensitive to outliers, leading to large errors in the final fit. Robust methods — like RANSAC — are often used to handle outliers by ignoring them in the fitting step. Another approach is to use robust cost functions (e.g., Huber loss) that reduce the influence of large residuals.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"trade-offs-between-computational-complexity-and-estimation-accuracy\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#trade-offs-between-computational-complexity-and-estimation-accuracy\",\n    \"aria-label\": \"trade offs between computational complexity and estimation accuracy permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Trade-offs between computational complexity and estimation accuracy\"), \"\\n\", React.createElement(_components.p, null, \"Accurate geometry estimation may require iterative methods that are computationally expensive. In time-critical applications (autonomous driving, robotics), real-time performance constraints can force simpler or approximate solutions. Hence, each domain balances speed, robustness, and accuracy according to its needs. For large-scale offline tasks (like building a 3D map from thousands of images), one might invest heavily in a large iterative optimization (e.g., bundle adjustment) to achieve high accuracy.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"11-robust-estimation-techniques-ransac-and-variants\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#11-robust-estimation-techniques-ransac-and-variants\",\n    \"aria-label\": \"11 robust estimation techniques ransac and variants permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"11. Robust estimation techniques (RANSAC and variants)\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"robust-estimation-techniques-handling-noise-and-outliers\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#robust-estimation-techniques-handling-noise-and-outliers\",\n    \"aria-label\": \"robust estimation techniques handling noise and outliers permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Robust estimation techniques: handling noise and outliers\"), \"\\n\", React.createElement(_components.p, null, \"In geometric tasks, outliers can appear for many reasons — sensor dropouts, reflective surfaces, dynamic objects in the environment, or erroneous keypoint matches in images. \", React.createElement(Highlight, null, \"Robust estimation techniques\"), \" aim to find model parameters that fit the majority of the data, ignoring outliers.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"ransac-random-sampling-to-find-inliers-in-noisy-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#ransac-random-sampling-to-find-inliers-in-noisy-data\",\n    \"aria-label\": \"ransac random sampling to find inliers in noisy data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"RANSAC: random sampling to find inliers in noisy data\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"RANSAC\"), \" (RANdom SAmple Consensus) is a classic algorithm:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Randomly pick a minimal subset of points sufficient to fit the desired model (e.g., two points for a line, three points for a plane).\"), \"\\n\", React.createElement(_components.li, null, \"Estimate model parameters from this subset.\"), \"\\n\", React.createElement(_components.li, null, \"Count how many points in the entire dataset fit this model within a threshold (the inliers).\"), \"\\n\", React.createElement(_components.li, null, \"Repeat many times; keep the model with the best inlier count.\"), \"\\n\", React.createElement(_components.li, null, \"Optionally refine with a final least squares fit on all inliers.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"RANSAC excels when the fraction of outliers is not too large and is widely used in computer vision tasks like homography estimation (for image stitching), fundamental matrix estimation (for stereo vision), or plane detection in point clouds.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"extensions-of-ransac-mlesac-msac-prosac-increasing-robustness-and-computational-efficiency\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#extensions-of-ransac-mlesac-msac-prosac-increasing-robustness-and-computational-efficiency\",\n    \"aria-label\": \"extensions of ransac mlesac msac prosac increasing robustness and computational efficiency permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Extensions of RANSAC (MLESAC, MSAC, PROSAC): increasing robustness and computational efficiency\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"MLESAC\"), \": Uses a maximum-likelihood approach for scoring the fit, rather than a simple inlier count.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"MSAC\"), \": A modification that better penalizes outliers.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"PROSAC\"), \": Prioritized RANSAC uses prior probabilities for each data point's membership, sampling more likely inliers first to speed up convergence.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"These extensions demonstrate how robust estimation has evolved to handle increasingly complex data distributions, large outlier rates, or real-time constraints.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"use-cases-in-computer-vision-homography-estimation-fundamental-matrix-estimation-and-more\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#use-cases-in-computer-vision-homography-estimation-fundamental-matrix-estimation-and-more\",\n    \"aria-label\": \"use cases in computer vision homography estimation fundamental matrix estimation and more permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Use cases in computer vision: homography estimation, fundamental matrix estimation, and more\"), \"\\n\", React.createElement(_components.p, null, \"RANSAC and its variants are essential in structure-from-motion and multi-view geometry. For example:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Homography estimation\"), \": If two images depict the same planar surface from different viewpoints, a homography transforms points from one image to the other. RANSAC can robustly find this transformation from matched keypoints (like SIFT or ORB features).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Fundamental matrix estimation\"), \": In stereo vision or epipolar geometry, the fundamental matrix relates matched points in two images. Again, RANSAC helps separate inliers (correct matches) from outliers (mismatches).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Pose estimation\"), \": Estimating camera pose from 3D-2D correspondences also benefits from robust sampling schemes.\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"12-machine-learning-based-geometry-estimation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#12-machine-learning-based-geometry-estimation\",\n    \"aria-label\": \"12 machine learning based geometry estimation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"12. Machine learning-based geometry estimation\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"regression-models-for-geometric-predictions-predicting-2d3d-landmarks-or-transformations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#regression-models-for-geometric-predictions-predicting-2d3d-landmarks-or-transformations\",\n    \"aria-label\": \"regression models for geometric predictions predicting 2d3d landmarks or transformations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Regression models for geometric predictions; predicting 2D/3D landmarks or transformations\"), \"\\n\", React.createElement(_components.p, null, \"Sometimes geometry estimation can be framed as a direct regression problem: a neural network might predict the coordinates of facial landmarks, the 3D pose of an object, or the transformation parameters that align one shape to another. For instance, a network might output the Euler angles \", React.createElement(Latex, {\n    text: \"\\\\(\\\\alpha, \\\\beta, \\\\gamma\\\\)\"\n  }), \" for rotation and the translation \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{t}\\\\)\"\n  }), \" in \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbb{R}^3\\\\)\"\n  }), \". The main challenge is dealing with the cyclical nature of angles (i.e., \", React.createElement(Latex, {\n    text: \"\\\\(\\\\alpha\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\alpha + 2\\\\pi\\\\)\"\n  }), \" represent the same rotation) and ensuring the predicted transformations remain valid.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"deep-learning-based-estimators-learning-transformations-depth-pose-and-surface-normals\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#deep-learning-based-estimators-learning-transformations-depth-pose-and-surface-normals\",\n    \"aria-label\": \"deep learning based estimators learning transformations depth pose and surface normals permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Deep learning-based estimators: learning transformations, depth, pose and surface normals\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Deep learning\"), \" can go beyond standard regression by incorporating specialized layers or losses:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Depth estimation\"), \": Networks can learn to output a dense depth map for every pixel in an image, effectively performing geometry estimation from a single image or multiple views.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Pose estimation\"), \": In object or camera pose estimation, architectures combine convolutional layers for feature extraction with fully connected layers (or specialized transformations) for predicting 6-DoF pose.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Surface normals\"), \": Another key geometric attribute for each pixel or point can be learned directly by a network. This is relevant in tasks like photometric stereo or shape-from-shading.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"loss-functions-tailored-to-geometric-data-chamfer-distance-earth-movers-distance\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#loss-functions-tailored-to-geometric-data-chamfer-distance-earth-movers-distance\",\n    \"aria-label\": \"loss functions tailored to geometric data chamfer distance earth movers distance permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Loss functions tailored to geometric data: Chamfer distance, Earth Mover's Distance\"), \"\\n\", React.createElement(_components.p, null, \"Standard L2 or L1 losses might not fully capture the geometry between shapes or point sets. Specialized distances are used:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Chamfer distance\"), \": For two point sets \", React.createElement(Latex, {\n    text: \"\\\\(P\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(Q\\\\)\"\n  }), \", the Chamfer distance sums the distance from each point in \", React.createElement(Latex, {\n    text: \"\\\\(P\\\\)\"\n  }), \" to its nearest neighbor in \", React.createElement(Latex, {\n    text: \"\\\\(Q\\\\)\"\n  }), \" and vice versa.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Earth Mover's Distance (EMD)\"), \": Interprets point sets as distributions, measuring the minimal cost of transporting mass from one distribution to match the other. Often yields better shape alignment but is more expensive to compute.\"), \"\\n\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\text{Chamfer}(P, Q) = \\\\sum_{\\\\mathbf{p} \\\\in P} \\\\min_{\\\\mathbf{q} \\\\in Q} \\\\|\\\\mathbf{p} - \\\\mathbf{q}\\\\|^2 + \\\\sum_{\\\\mathbf{q} \\\\in Q} \\\\min_{\\\\mathbf{p} \\\\in P} \\\\|\\\\mathbf{p} - \\\\mathbf{q}\\\\|^2\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"EMD can be expressed via an optimal matching problem between points in \", React.createElement(Latex, {\n    text: \"\\\\(P\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(Q\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"role-of-regularization-and-loss-functions-tailored-to-geometric-constraints\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#role-of-regularization-and-loss-functions-tailored-to-geometric-constraints\",\n    \"aria-label\": \"role of regularization and loss functions tailored to geometric constraints permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Role of regularization and loss functions tailored to geometric constraints\"), \"\\n\", React.createElement(_components.p, null, \"In geometry estimation, we often want to enforce constraints like smoothness, symmetry, or manifold continuity. \", React.createElement(Highlight, null, \"Regularization\"), \" terms in the loss function can encode these priors. For instance, a shape reconstruction network might incorporate a Laplacian smoothness term on a mesh to discourage spiky edges, or a normal consistency term to maintain consistent surfaces. These constraints lead to more physically or geometrically plausible outputs, especially when the training data is noisy or incomplete.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"13-evaluation-metrics-for-geometry-estimation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#13-evaluation-metrics-for-geometry-estimation\",\n    \"aria-label\": \"13 evaluation metrics for geometry estimation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"13. Evaluation metrics for geometry estimation\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"mean-squared-error-mse-in-geometric-contexts-pros-and-cons-in-geometric-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#mean-squared-error-mse-in-geometric-contexts-pros-and-cons-in-geometric-settings\",\n    \"aria-label\": \"mean squared error mse in geometric contexts pros and cons in geometric settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Mean squared error (MSE) in geometric contexts; pros and cons in geometric settings\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"MSE\"), \" is the simplest metric to measure the average squared difference between predicted coordinates and ground-truth coordinates. While easy to compute and interpret, it does not always reflect perceptual or geometric fidelity, especially if shapes are misaligned or topologically different. MSE also heavily penalizes outliers, which might not be desired in certain tasks.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"chamfer-distance-measuring-point-cloud-similarity-measuring-shape-similarity-for-point-clouds-or-meshes\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#chamfer-distance-measuring-point-cloud-similarity-measuring-shape-similarity-for-point-clouds-or-meshes\",\n    \"aria-label\": \"chamfer distance measuring point cloud similarity measuring shape similarity for point clouds or meshes permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Chamfer distance: measuring point cloud similarity; measuring shape similarity for point clouds or meshes\"), \"\\n\", React.createElement(_components.p, null, \"As introduced, the \", React.createElement(Highlight, null, \"Chamfer distance\"), \" is a popular metric for shape comparison. It's relatively straightforward to compute but can sometimes fail to capture fine-grained differences in shape distribution if points are scattered. Still, for many point-based reconstruction tasks, Chamfer distance provides a robust measure that aligns well with the geometry of the data.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"earth-movers-distance-emd-comparing-3d-distributions-a-more-precise-metric-for-matching-distributions-of-points\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#earth-movers-distance-emd-comparing-3d-distributions-a-more-precise-metric-for-matching-distributions-of-points\",\n    \"aria-label\": \"earth movers distance emd comparing 3d distributions a more precise metric for matching distributions of points permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Earth Mover's Distance (EMD): comparing 3D distributions; a more precise metric for matching distributions of points\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"EMD\"), \" is a more accurate reflection of how one shape can be transformed into another by a transport plan. It typically yields better alignment than Chamfer distance, but the linear assignment or flow optimization can be expensive for large point sets. Nevertheless, EMD is often considered superior for tasks where we truly care about point-to-point correspondences and distribution shapes.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"14-introduction-to-stereo-vision\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#14-introduction-to-stereo-vision\",\n    \"aria-label\": \"14 introduction to stereo vision permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"14. Introduction to stereo vision\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"binocular-vision-fundamentals-of-disparity-and-depth-perception\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#binocular-vision-fundamentals-of-disparity-and-depth-perception\",\n    \"aria-label\": \"binocular vision fundamentals of disparity and depth perception permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Binocular vision: fundamentals of disparity and depth perception\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Stereo vision\"), \" mimics human binocular vision. By observing the same scene from two slightly different viewpoints, we can recover depth information from the \", React.createElement(Highlight, null, \"disparity\"), \" of corresponding points in the two images. Disparity is inversely related to depth — the larger the shift between matching pixels, the closer the object.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"epipolar-geometry-fundamental-matrix-essential-matrix-and-rectification\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#epipolar-geometry-fundamental-matrix-essential-matrix-and-rectification\",\n    \"aria-label\": \"epipolar geometry fundamental matrix essential matrix and rectification permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Epipolar geometry: fundamental matrix, essential matrix, and rectification\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Epipolar geometry\"), \" underlies stereo vision. For a pair of cameras, each point in 3D space projects to two points on the image planes. The lines connecting these projections with the camera centers intersect in the epipoles. The fundamental matrix \", React.createElement(Latex, {\n    text: \"\\\\(F\\\\)\"\n  }), \" encapsulates the relationship between matched points \", React.createElement(Latex, {\n    text: \"\\\\((x_1, x_2)\\\\)\"\n  }), \" in the two images:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nx_2^T F \\\\, x_1 = 0.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"For calibrated cameras (with known intrinsics), we use the essential matrix \", React.createElement(Latex, {\n    text: \"\\\\(E\\\\)\"\n  }), \" instead, which is related to \", React.createElement(Latex, {\n    text: \"\\\\(F\\\\)\"\n  }), \" by the intrinsics. \", React.createElement(Highlight, null, \"Rectification\"), \" reprojects the images so that epipolar lines align horizontally, making stereo matching simpler.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"stereo-matching-algorithms-traditional-and-learning-based-approaches\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#stereo-matching-algorithms-traditional-and-learning-based-approaches\",\n    \"aria-label\": \"stereo matching algorithms traditional and learning based approaches permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Stereo matching algorithms: traditional and learning-based approaches\"), \"\\n\", React.createElement(_components.p, null, \"Traditional stereo matching involves:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Computing a cost function (e.g., sum of absolute differences in a window around each pixel).\"), \"\\n\", React.createElement(_components.li, null, \"Searching for the best matching point in the other image along the epipolar line.\"), \"\\n\", React.createElement(_components.li, null, \"Optionally using global optimization to ensure smoothness.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Deep learning has transformed stereo matching by using CNNs or GNNs to compute matching costs at each pixel, leading to more robust and accurate disparity maps. Some architectures (e.g., GCNet, PSMNet) incorporate 3D convolution on the cost volume, capturing global context. More recent methods integrate attention mechanisms or end-to-end learning with robust outlier handling.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"15-geometric-feature-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#15-geometric-feature-learning\",\n    \"aria-label\": \"15 geometric feature learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"15. Geometric feature learning\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"definition-of-geometric-features-curvature-based-descriptors-shape-contexts-keypoints\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#definition-of-geometric-features-curvature-based-descriptors-shape-contexts-keypoints\",\n    \"aria-label\": \"definition of geometric features curvature based descriptors shape contexts keypoints permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Definition of geometric features: curvature-based descriptors, shape contexts, keypoints\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Geometric features\"), \" capture local or global shape attributes that remain relatively invariant under transformations. Examples include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Curvature-based descriptors\"), \": For surfaces, local curvature at each vertex or point can characterize shape bending.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Shape contexts\"), \": A 2D or 3D histogram that captures how neighboring points are distributed around a reference point, used for shape matching.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Keypoints\"), \": Distinctive points that are repeatably detectable (e.g., corners or high-curvature regions). 3D keypoints can be used like SIFT in 2D images for establishing correspondences.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"hand-crafted-vs-learned-features-advantages-limitations-and-historical-evolution\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#hand-crafted-vs-learned-features-advantages-limitations-and-historical-evolution\",\n    \"aria-label\": \"hand crafted vs learned features advantages limitations and historical evolution permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Hand-crafted vs. learned features: advantages, limitations, and historical evolution\"), \"\\n\", React.createElement(_components.p, null, \"Historically, geometric features (e.g., SIFT-3D, curvature histograms) were \", React.createElement(Highlight, null, \"hand-crafted\"), \" by domain experts. They often performed well in carefully controlled applications but lacked adaptability. The modern trend is to learn features from data with deep networks (e.g., PointNet++). Learned features typically outperform hand-crafted ones in large-scale tasks, but they require big labeled datasets and careful architecture design to capture geometric invariances.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"common-applications-of-geometric-features-object-recognition-matching-and-registration\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#common-applications-of-geometric-features-object-recognition-matching-and-registration\",\n    \"aria-label\": \"common applications of geometric features object recognition matching and registration permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Common applications of geometric features: object recognition, matching, and registration\"), \"\\n\", React.createElement(_components.p, null, \"By capturing shape-specific signatures, geometric features enable:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Recognition\"), \": Distinguish objects by their geometry, even under occlusion or partial views.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Matching\"), \": Align different scans of the same object or scene by matching local keypoints.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Registration\"), \": Combine partial scans or multi-view images into a coherent 3D model via geometric correspondences.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"benefits-of-learning-geometric-features\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#benefits-of-learning-geometric-features\",\n    \"aria-label\": \"benefits of learning geometric features permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Benefits of learning geometric features\"), \"\\n\", React.createElement(_components.p, null, \"Networks trained on 3D data can learn robust, discriminative representations that handle variations in sampling, noise, or partial visibility. They can also combine geometry with color or texture if available (multimodal). This synergy often leads to more robust performance across diverse tasks in robotics, AR/VR, and object recognition.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"overview-of-feature-extraction-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#overview-of-feature-extraction-methods\",\n    \"aria-label\": \"overview of feature extraction methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Overview of feature extraction methods\"), \"\\n\", React.createElement(_components.p, null, \"Modern \", React.createElement(Highlight, null, \"feature extraction\"), \" can be as simple as applying a point-based network (like PointNet) to each local patch or as elaborate as constructing a graph-based approach that propagates contextual features across vertices or edges. Mesh-based CNNs can define convolution operators over the mesh faces, while voxel-based methods can apply standard 3D convolutions. The choice depends on the nature of the input data, the desired computational efficiency, and the end task.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, {\n    id: \"extra-notes-and-recommended-reading\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#extra-notes-and-recommended-reading\",\n    \"aria-label\": \"extra notes and recommended reading permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Extra notes and recommended reading\"), \"\\n\", React.createElement(_components.p, null, \"Below, I list some further reading suggestions and references for those who want to dive deeper into cutting-edge research on geometry estimation in ML and computer vision:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Hartley and Zisserman (\\\"Multiple View Geometry in Computer Vision\\\")\"), \". This classic text formalizes epipolar geometry, camera calibration, and 3D reconstruction from images.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Besl and McKay (1992)\"), \". The original ICP paper, titled \\\"A Method for Registration of 3-D Shapes\\\".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Zachary Teed and Jia Deng, \\\"DeepV2D\\\" (ICCV 2019)\"), \". Demonstrates learning-based stereo (and multi-view) depth estimation with deep networks.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Qi and gang, \\\"PointNet\\\" (CVPR 2017) and \\\"PointNet++\\\" (NeurIPS 2017)\"), \". Seminal works for deep learning directly on point clouds.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Mescheder and gang, \\\"Occupancy Networks\\\" (CVPR 2019)\"), \" and \", React.createElement(_components.strong, null, \"Park and gang, \\\"DeepSDF\\\" (CVPR 2019)\"), \". Key references for implicit neural representations.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Mildenhall and gang, \\\"NeRF\\\" (ECCV 2020)\"), \". Landmark paper for neural radiance fields, bridging geometry and view synthesis.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"I hope this first part of our exploration into geometry estimation sets the stage for deeper dives into 3D reconstruction, motion estimation, photogrammetry, and advanced geometric deep learning techniques.\"), \" Throughout this article, I've tried to highlight both the historical roots and the modern frontiers of geometry in machine learning. As the field progresses, geometric insights will likely remain central to bridging the gap between raw sensor data and rich, structured understandings of the 3D world.\"), \"\\n\", React.createElement(Image, {\n    alt: \"3D point cloud example\",\n    path: \"\",\n    caption: \"An example of a 3D point cloud representation of an object, showing unstructured points in space\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(Image, {\n    alt: \"Mesh representation\",\n    path: \"\",\n    caption: \"A mesh representation of the same object, illustrating vertices, edges, and faces\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(Image, {\n    alt: \"Camera model diagram\",\n    path: \"\",\n    caption: \"A pinhole camera model showing how 3D points are projected onto a 2D image plane\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(Image, {\n    alt: \"Stereo vision setup\",\n    path: \"\",\n    caption: \"A simplified stereo vision setup with two cameras capturing a scene from slightly different viewpoints\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(Image, {\n    alt: \"Geometric transformations\",\n    path: \"\",\n    caption: \"Visual depiction of transformations like rotation, translation, and scaling applied to a shape\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Such illustrations and the above text together create a more intuitive comprehension of the fundamental geometric principles that underpin many advanced machine learning applications.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/avrtt/Repos/avrtt.github.io/src/pages/posts/research/geometry_estimation.mdx\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, {useState, useEffect} from 'react';\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\nimport RemoveMarkdown from 'remove-markdown';\nimport {ImageContext} from '../context/ImageContext';\nimport {MDXProvider} from '@mdx-js/react';\nimport Image from '../components/PostImage';\nimport {motion} from 'framer-motion';\nimport SEO from \"../components/seo\";\nimport PostBanner from '../components/PostBanner';\nimport PostBottom from '../components/PostBottom';\nimport {wordsPerMinuteAdventures, wordsPerMinuteResearch, wordsPerMinuteThoughts} from '../data/commonVariables';\nimport PartOfCourseNotice from \"../components/PartOfCourseNotice\";\nimport * as stylesButtonsCommon from \"../styles/buttons_common.module.scss\";\nimport * as stylesCustomPostLayouts from \"../styles/custom_post_layouts.module.scss\";\nimport * as stylesTableOfContents from \"../styles/table_of_contents.module.scss\";\nimport * as stylesTagBadges from \"../styles/tag_badges.module.scss\";\nfunction formatReadTime(minutes) {\n  if (minutes <= 10) return '~10 min';\n  if (minutes <= 20) return '~20 min';\n  if (minutes <= 30) return '~30 min';\n  if (minutes <= 40) return '~40 min';\n  if (minutes <= 50) return '~50 min';\n  if (minutes <= 60) return '~1 h';\n  const hours = Math.floor(minutes / 60);\n  const remainder = minutes % 60;\n  if (remainder <= 30) {\n    return `~${hours}${remainder > 0 ? '.5' : ''} h`;\n  }\n  return `~${hours + 1} h`;\n}\nconst TableOfContents = _ref => {\n  let {toc} = _ref;\n  if (!toc || !toc.items) return null;\n  const handleClick = (e, url) => {\n    e.preventDefault();\n    const targetId = url.replace('#', '');\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  return React.createElement(\"nav\", {\n    className: stylesTableOfContents.toc\n  }, React.createElement(\"ul\", null, toc.items.map((item, index) => React.createElement(\"li\", {\n    key: index\n  }, React.createElement(\"a\", {\n    href: item.url,\n    onClick: e => handleClick(e, item.url)\n  }, item.title), item.items && React.createElement(TableOfContents, {\n    toc: {\n      items: item.items\n    }\n  })))));\n};\nexport function PostTemplate(_ref2) {\n  let {data: {mdx, allMdx, allPostImages}, children} = _ref2;\n  const {frontmatter, body, tableOfContents} = mdx;\n  const index = frontmatter.index;\n  const slug = frontmatter.slug;\n  const section = slug.split('/')[1];\n  const posts = allMdx.nodes.filter(post => post.frontmatter.slug.includes(`/${section}/`));\n  const sortedPosts = posts.sort((a, b) => a.frontmatter.index - b.frontmatter.index);\n  const currentIndex = sortedPosts.findIndex(post => post.frontmatter.index === index);\n  const nextPost = sortedPosts[currentIndex + 1];\n  const lastPost = sortedPosts[currentIndex - 1];\n  const trimmedSlug = frontmatter.slug.replace(/\\/$/, '');\n  const keyCurrent = (/[^/]*$/).exec(trimmedSlug)[0];\n  const basePath = `posts/${section}/content/${keyCurrent}/`;\n  const {0: isWideLayout, 1: setIsWideLayout} = useState(frontmatter.flagWideLayoutByDefault);\n  const {0: isAnimating, 1: setIsAnimating} = useState(false);\n  const toggleLayout = () => {\n    setIsWideLayout(!isWideLayout);\n  };\n  useEffect(() => {\n    setIsAnimating(true);\n    const timer = setTimeout(() => setIsAnimating(false), 340);\n    return () => clearTimeout(timer);\n  }, [isWideLayout]);\n  var wordsPerMinute;\n  if (section === \"adventures\") {\n    wordsPerMinute = wordsPerMinuteAdventures;\n  } else if (section === \"research\") {\n    wordsPerMinute = wordsPerMinuteResearch;\n  } else if (section === \"thoughts\") {\n    wordsPerMinute = wordsPerMinuteThoughts;\n  }\n  const plainTextBody = RemoveMarkdown(body).replace(/import .*? from .*?;/g, '').replace(/<.*?>/g, '').replace(/\\{\\/\\*[\\s\\S]*?\\*\\/\\}/g, '').trim();\n  const wordCount = plainTextBody.split(/\\s+/).length;\n  const baseReadTimeMinutes = Math.ceil(wordCount / wordsPerMinute);\n  const extraTime = frontmatter.extraReadTimeMin || 0;\n  const totalReadTime = baseReadTimeMinutes + extraTime;\n  const readTime = formatReadTime(totalReadTime);\n  const notices = [{\n    flag: frontmatter.flagDraft,\n    component: () => import(\"../components/NotFinishedNotice\")\n  }, {\n    flag: frontmatter.flagMindfuckery,\n    component: () => import(\"../components/MindfuckeryNotice\")\n  }, {\n    flag: frontmatter.flagRewrite,\n    component: () => import(\"../components/RewriteNotice\")\n  }, {\n    flag: frontmatter.flagOffensive,\n    component: () => import(\"../components/OffensiveNotice\")\n  }, {\n    flag: frontmatter.flagProfane,\n    component: () => import(\"../components/ProfanityNotice\")\n  }, {\n    flag: frontmatter.flagMultilingual,\n    component: () => import(\"../components/MultilingualNotice\")\n  }, {\n    flag: frontmatter.flagUnreliably,\n    component: () => import(\"../components/UnreliablyNotice\")\n  }, {\n    flag: frontmatter.flagPolitical,\n    component: () => import(\"../components/PoliticsNotice\")\n  }, {\n    flag: frontmatter.flagCognitohazard,\n    component: () => import(\"../components/CognitohazardNotice\")\n  }, {\n    flag: frontmatter.flagHidden,\n    component: () => import(\"../components/HiddenNotice\")\n  }];\n  const {0: loadedNotices, 1: setLoadedNotices} = useState([]);\n  useEffect(() => {\n    notices.forEach(_ref3 => {\n      let {flag, component} = _ref3;\n      if (flag) {\n        component().then(module => {\n          setLoadedNotices(prev => [].concat(_toConsumableArray(prev), [module.default]));\n        });\n      }\n    });\n  }, []);\n  return React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.15\n    }\n  }, React.createElement(PostBanner, {\n    postNumber: frontmatter.index,\n    date: frontmatter.date,\n    updated: frontmatter.updated,\n    readTime: readTime,\n    difficulty: frontmatter.difficultyLevel,\n    title: frontmatter.title,\n    desc: frontmatter.desc,\n    banner: frontmatter.banner,\n    section: section,\n    postKey: keyCurrent,\n    isMindfuckery: frontmatter.flagMindfuckery,\n    mainTag: frontmatter.mainTag\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\",\n      maxWidth: \"75%\",\n      marginLeft: \"auto\",\n      paddingRight: \"1vw\",\n      marginTop: \"-6vh\",\n      marginBottom: \"4vh\"\n    }\n  }, frontmatter.otherTags.map((tag, index) => React.createElement(\"span\", {\n    key: index,\n    className: `noselect ${stylesTagBadges.tagPosts}`,\n    style: {\n      margin: \"0 5px 5px 0\"\n    }\n  }, tag))), React.createElement(\"div\", {\n    className: \"postBody\"\n  }, React.createElement(TableOfContents, {\n    toc: tableOfContents\n  })), React.createElement(\"br\", null), React.createElement(\"div\", {\n    style: {\n      margin: \"0 10% -2vh 30%\",\n      textAlign: \"right\"\n    }\n  }, React.createElement(motion.button, {\n    className: `noselect ${stylesCustomPostLayouts.postButton}`,\n    id: stylesCustomPostLayouts.postLayoutSwitchButton,\n    onClick: toggleLayout,\n    whileTap: {\n      scale: 0.93\n    }\n  }, React.createElement(motion.div, {\n    className: stylesButtonsCommon.buttonTextWrapper,\n    key: isWideLayout,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }, isWideLayout ? \"Switch to default layout\" : \"Switch to wide layout\"))), React.createElement(\"br\", null), React.createElement(\"div\", {\n    className: \"postBody\",\n    style: {\n      margin: isWideLayout ? \"0 -14%\" : \"\",\n      maxWidth: isWideLayout ? \"200%\" : \"\",\n      transition: \"margin 1s ease, max-width 1s ease, padding 1s ease\"\n    }\n  }, React.createElement(\"div\", {\n    className: `${stylesCustomPostLayouts.textContent} ${isAnimating ? stylesCustomPostLayouts.fadeOut : stylesCustomPostLayouts.fadeIn}`\n  }, loadedNotices.map((NoticeComponent, index) => React.createElement(NoticeComponent, {\n    key: index\n  })), frontmatter.indexCourse ? React.createElement(PartOfCourseNotice, {\n    index: frontmatter.indexCourse,\n    category: frontmatter.courseCategoryName\n  }) : \"\", React.createElement(ImageContext.Provider, {\n    value: {\n      images: allPostImages.nodes,\n      basePath: basePath.replace(/\\/$/, '') + '/'\n    }\n  }, React.createElement(MDXProvider, {\n    components: {\n      Image\n    }\n  }, children)))), React.createElement(PostBottom, {\n    nextPost: nextPost,\n    lastPost: lastPost,\n    keyCurrent: keyCurrent,\n    section: section\n  }));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head(_ref4) {\n  var _frontmatter$banner, _frontmatter$banner$c, _frontmatter$banner$c2, _frontmatter$banner$c3, _frontmatter$banner$c4;\n  let {data} = _ref4;\n  const {frontmatter} = data.mdx;\n  const title = frontmatter.titleSEO || frontmatter.title;\n  const titleOG = frontmatter.titleOG || title;\n  const titleTwitter = frontmatter.titleTwitter || title;\n  const description = frontmatter.descSEO || frontmatter.desc;\n  const descriptionOG = frontmatter.descOG || description;\n  const descriptionTwitter = frontmatter.descTwitter || description;\n  const schemaType = frontmatter.schemaType || \"BlogPosting\";\n  const keywords = frontmatter.keywordsSEO;\n  const datePublished = frontmatter.date;\n  const dateModified = frontmatter.updated || datePublished;\n  const imageOG = frontmatter.imageOG || ((_frontmatter$banner = frontmatter.banner) === null || _frontmatter$banner === void 0 ? void 0 : (_frontmatter$banner$c = _frontmatter$banner.childImageSharp) === null || _frontmatter$banner$c === void 0 ? void 0 : (_frontmatter$banner$c2 = _frontmatter$banner$c.gatsbyImageData) === null || _frontmatter$banner$c2 === void 0 ? void 0 : (_frontmatter$banner$c3 = _frontmatter$banner$c2.images) === null || _frontmatter$banner$c3 === void 0 ? void 0 : (_frontmatter$banner$c4 = _frontmatter$banner$c3.fallback) === null || _frontmatter$banner$c4 === void 0 ? void 0 : _frontmatter$banner$c4.src);\n  const imageAltOG = frontmatter.imageAltOG || descriptionOG;\n  const imageTwitter = frontmatter.imageTwitter || imageOG;\n  const imageAltTwitter = frontmatter.imageAltTwitter || descriptionTwitter;\n  const canonicalUrl = frontmatter.canonicalURL;\n  const flagHidden = frontmatter.flagHidden || false;\n  const mainTag = frontmatter.mainTag || \"Posts\";\n  const section = frontmatter.slug.split('/')[1] || \"posts\";\n  const type = \"article\";\n  const {siteUrl} = useSiteMetadata();\n  const breadcrumbJSON = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": [{\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": siteUrl\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 2,\n      \"name\": mainTag,\n      \"item\": `${siteUrl}/${frontmatter.slug.split('/')[1]}`\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 3,\n      \"name\": title,\n      \"item\": `${siteUrl}${frontmatter.slug}`\n    }]\n  };\n  return React.createElement(SEO, {\n    title: title + \" - avrtt.blog\",\n    titleOG: titleOG,\n    titleTwitter: titleTwitter,\n    description: description,\n    descriptionOG: descriptionOG,\n    descriptionTwitter: descriptionTwitter,\n    schemaType: schemaType,\n    keywords: keywords,\n    datePublished: datePublished,\n    dateModified: dateModified,\n    imageOG: imageOG,\n    imageAltOG: imageAltOG,\n    imageTwitter: imageTwitter,\n    imageAltTwitter: imageAltTwitter,\n    canonicalUrl: canonicalUrl,\n    flagHidden: flagHidden,\n    mainTag: mainTag,\n    section: section,\n    type: type\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumbJSON)));\n}\nconst query = \"2571018839\";\n","/* \n\nCopyright © 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\";\nimport Latex from 'react-latex-next';\nimport 'katex/dist/katex.min.css'; \n\ninterface LatexProps {\n  text: string;\n}\n  \nconst L = ({ text }: LatexProps) => {\n  return (\n    <Latex>{text}</Latex>\n  );\n};\nexport default L;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","h3","a","span","hr","h2","ul","li","strong","ol","h1","_provideComponents","components","Image","id","component","Error","_missingMdxReference","React","style","position","href","className","dangerouslySetInnerHTML","__html","Highlight","Latex","text","Code","alt","path","caption","zoom","wrapper","MDXLayout","TableOfContents","_ref","toc","items","stylesTableOfContents","map","item","index","key","url","onClick","e","handleClick","preventDefault","targetId","replace","targetElement","document","getElementById","scrollIntoView","behavior","block","title","PostTemplate","_ref2","data","mdx","allMdx","allPostImages","children","frontmatter","body","tableOfContents","section","slug","split","sortedPosts","nodes","filter","post","includes","sort","b","currentIndex","findIndex","nextPost","lastPost","trimmedSlug","keyCurrent","exec","basePath","isWideLayout","setIsWideLayout","useState","flagWideLayoutByDefault","isAnimating","setIsAnimating","wordsPerMinute","useEffect","timer","setTimeout","clearTimeout","wordsPerMinuteAdventures","wordsPerMinuteResearch","wordsPerMinuteThoughts","wordCount","RemoveMarkdown","trim","length","readTime","minutes","hours","Math","floor","remainder","formatReadTime","ceil","extraReadTimeMin","notices","flag","flagDraft","flagMindfuckery","flagRewrite","flagOffensive","flagProfane","flagMultilingual","flagUnreliably","flagPolitical","flagCognitohazard","flagHidden","loadedNotices","setLoadedNotices","forEach","_ref3","then","module","prev","concat","_toConsumableArray","default","motion","div","initial","opacity","animate","exit","transition","duration","PostBanner","postNumber","date","updated","difficulty","difficultyLevel","desc","banner","postKey","isMindfuckery","mainTag","display","justifyContent","flexWrap","maxWidth","marginLeft","paddingRight","marginTop","marginBottom","otherTags","tag","stylesTagBadges","margin","textAlign","button","stylesCustomPostLayouts","toggleLayout","whileTap","scale","stylesButtonsCommon","ease","NoticeComponent","indexCourse","PartOfCourseNotice","category","courseCategoryName","ImageContext","Provider","value","images","MDXProvider","PostBottom","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref4","_frontmatter$banner","_frontmatter$banner$c","_frontmatter$banner$c2","_frontmatter$banner$c3","_frontmatter$banner$c4","titleSEO","titleOG","titleTwitter","description","descSEO","descriptionOG","descOG","descriptionTwitter","descTwitter","schemaType","keywords","keywordsSEO","datePublished","dateModified","imageOG","childImageSharp","gatsbyImageData","fallback","src","imageAltOG","imageTwitter","imageAltTwitter","canonicalUrl","canonicalURL","siteUrl","useSiteMetadata","breadcrumbJSON","SEO","type","JSON","stringify"],"sourceRoot":""}