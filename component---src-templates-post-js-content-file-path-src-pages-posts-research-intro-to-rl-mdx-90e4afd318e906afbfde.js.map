{"version":3,"file":"component---src-templates-post-js-content-file-path-src-pages-posts-research-intro-to-rl-mdx-90e4afd318e906afbfde.js","mappings":"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","sources":["webpack://avrtt.blog/./src/pages/posts/research/intro_to_rl.mdx","webpack://avrtt.blog/./src/templates/post.js","webpack://avrtt.blog/./src/components/Latex/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/**(intro: a quote, catchphrase, joke, etc.)**/\n/*\n\nОбучение с подкреплением\nhttps://neerc.ifmo.ru/wiki/index.php?title=%D0%9E%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5_%D1%81_%D0%BF%D0%BE%D0%B4%D0%BA%D1%80%D0%B5%D0%BF%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%D0%BC\n[https://www.youtube.com/watch?v=BwLIPEUkjxQ&list=PL4_hYwCyhAvY7k32D65q3xJVo8X8dc3Ye&index=8](https://www.youtube.com/watch?v=BwLIPEUkjxQ&list=PL4_hYwCyhAvY7k32D65q3xJVo8X8dc3Ye&index=8)\n[https://www.youtube.com/watch?v=3aPQzOgPUu4&list=PL4_hYwCyhAvZLp0CTIDVQr9FtDR_7DaUr&index=7](https://www.youtube.com/watch?v=3aPQzOgPUu4&list=PL4_hYwCyhAvZLp0CTIDVQr9FtDR_7DaUr&index=7)\nНовая версия курса по машинному обучению от Andrew Ng (теперь смециализация):\nC3W3\nhttps://www.youtube.com/playlist?list=PLuN-s3eTFCiGEqu-74Ipo7qooyIRtqGsI\nArtificial Intelligence: A Modern Approach, Global Edition, 4ed: chapter 23\n\n*/\n/*\n\n1. Introduction\n- Scope of reinforcement learning in machine learning and data science: Explains how RL fits into the broader field of AI and data science, highlighting typical use cases and research trends.\n- Historical perspective and evolution: Discusses early work (e.g., trial-and-error methods), foundational breakthroughs (Bellman, Sutton, Barto), and modern achievements (AlphaGo, Atari games).\n- Comparison with supervised and unsupervised learning: Clarifies similarities and differences, emphasizing the role of feedback signals (rewards) vs. labeled data or unlabeled data.\n- Relationship to control theory and operations research: Considers how RL extends or complements methods in control and decision-making disciplines.\n- Notable milestones in RL research: Chronicles key turning points such as TD-Gammon, DQN, AlphaZero, etc.\n2. Key concepts\n- Agent, environment, and state definitions: Introduces the basic elements and the notion of the agent–environment interface.\n- Markov Decision Processes (MDPs) and partially observable MDPs (POMDPs): Covers the formal framework for decision-making under uncertainty.\n- Actions and action spaces: Distinguishes between discrete, continuous, and hybrid action spaces.\n- Rewards, returns, and episodes: Describes the reward signal, cumulative returns, and episodic vs. continuing tasks.\n- Policy and value functions: Explains how a policy defines behavior and how value functions capture future reward.\n- Bellman equations: Introduces the foundational recursive relationships used in dynamic programming and TD methods.\n- On-policy vs. off-policy learning: Differentiates methods like SARSA (on-policy) from Q-learning (off-policy).\n3. Basic algorithms\n- Dynamic programming approaches (policy iteration, value iteration): Shows how MDPs can be solved via iterative backups when a model is known.\n- Monte Carlo methods: Uses sampled returns at episode conclusions to estimate value functions and policies.\n- Temporal difference learning (TD): Combines ideas from DP and Monte Carlo, updating estimates based on bootstrapped returns.\n- Q-learning: Describes off-policy TD control for learning optimal action values.\n- SARSA: Details on-policy TD control, updating action values based on the current behavior policy.\n- Eligibility traces (TD(λ)): Explores a unifying view of Monte Carlo and TD methods for faster learning.\n- Model-based vs. model-free approaches: Highlights differences between using an explicit model of the environment vs. learning directly from experience.\n4. Value-based and policy-based methods\n- Comparing value-based vs. policy-based approaches: Presents trade-offs regarding convergence, stability, and sample efficiency.\n- Actor-critic methods: Introduces combined approaches that learn both policy (actor) and value function (critic).\n- Advantage actor-critic (A2C): Explains how advantage estimates reduce variance in policy gradient updates.\n- Asynchronous advantage actor-critic (A3C): Details a parallelized version that improves training speed and stability.\n- Deterministic policy gradients (DPG): Discusses how policy gradients can be extended to continuous action spaces.\n- Proximal policy optimization (PPO) and TRPO: Covers advanced stable policy gradient methods that constrain updates to prevent destructive large steps.\n5. Deep reinforcement learning\n- Role of neural networks in RL: Highlights how function approximators (neural nets) handle high-dimensional inputs.\n- Deep Q-networks (DQN): Explores how convolutional networks can approximate Q-functions, demonstrated on Atari games.\n- Experience replay: Covers the technique of storing transitions to break correlation and reuse past experience.\n- Target networks: Discusses how separate networks stabilize Q-learning updates.\n- Extensions to DQN (Double, Dueling, Prioritized Replay): Shows incremental improvements that reduce bias and speed learning.\n- Policy gradient with deep networks: Outlines how neural networks parameterize stochastic or deterministic policies.\n- Actor-critic architectures (DDPG, SAC): Explores continuous control methods combining deep actor-critic principles.\n- Distributional RL (C51, QR-DQN): Introduces learning a distribution of returns rather than a single expected value.\n6. Advanced techniques\n- Exploration vs. exploitation strategies: Recaps the fundamental dilemma in RL.\n- ϵ-greedy and Boltzmann exploration: Describes basic randomization and temperature-based exploration schemes.\n- Upper confidence bound (UCB): Introduces bandit-inspired exploration with optimistic estimates.\n- Hierarchical reinforcement learning (Options framework, FeUdal networks): Explains breaking tasks into subtasks or macro-actions.\n- Multi-agent reinforcement learning: Discusses cooperative and competitive settings where multiple agents learn concurrently.\n- Transfer, curriculum, and meta-learning: Covers methods to leverage knowledge across tasks, design learning sequences, and learn \"how to learn.\"\n- Inverse reinforcement learning: Explores inferring reward functions from expert demonstrations.\n- Safe and robust RL: Focuses on constraint satisfaction and stability under uncertainty.\n- Offline RL (batch RL): Details learning policies from fixed datasets without active exploration.\n7. Applications and case studies\n- Robotics and control: Showcases real-world continuous control tasks, from manipulators to drones.\n- Game AI and OpenAI Gym: Describes common benchmarks like Atari and MuJoCo, and sophisticated games like Go or StarCraft.\n- Recommender systems: Explores personalized recommendations that adapt to user interactions.\n- Healthcare and personalized medicine: Covers policy optimization for treatment strategies, resource allocation, etc.\n- Finance and algorithmic trading: Presents RL approaches for portfolio management, option pricing, or market making.\n- Autonomous vehicles: Details decision-making in self-driving cars and advanced driver assistance systems.\n- Resource allocation and scheduling: Demonstrates RL methods in infrastructure, cloud computing, or manufacturing.\n8. Practical considerations\n- Designing reward functions: Discusses shaping rewards, avoiding perverse incentives, and aligning with desired outcomes.\n- Handling continuous action spaces: Covers specialized approaches like policy gradients, DDPG, and SAC.\n- Scalability and computational challenges: Explores parallelization, distributed training, and hardware considerations.\n- Common pitfalls and troubleshooting: Lists unstable training, hyperparameter sensitivity, reward hacking, etc.\n- Hyperparameter tuning and experimentation: Addresses best practices for configuring RL algorithms.\n- Evaluation and benchmarking: Emphasizes reproducibility, standardized tests, and statistical significance.\n- Reproducibility and experiment tracking: Highlights tools and methodologies for replicable RL research.\n- Frameworks and libraries (OpenAI Gym, Stable Baselines, RLlib): Reviews commonly used software for prototyping and research.\n\n*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Highlight from \"../../../components/Highlight\";\nimport Code from \"../../../components/Code\";\nimport Latex from \"../../../components/Latex\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    a: \"a\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    h2: \"h2\",\n    ol: \"ol\",\n    hr: \"hr\",\n    em: \"em\"\n  }, _provideComponents(), props.components), {Image} = _components;\n  if (!Image) _missingMdxReference(\"Image\", true);\n  return React.createElement(React.Fragment, null, \"\\n\", React.createElement(\"br\"), \"\\n\", \"\\n\", \"\\n\", React.createElement(_components.p, null, \"Reinforcement learning, often referred to simply as RL, is a fascinating sub-field of machine learning that focuses on how an agent can learn to make optimal decisions through trial-and-error interactions with an environment. Unlike in supervised learning, where labeled training data is available, or in unsupervised learning, where one must discover structure in unlabeled data, reinforcement learning presents an agent with a dynamic environment and a scalar reward signal indicating how \\\"good\\\" or \\\"bad\\\" certain actions are in the long run. In other words, the agent seeks to maximize some measure of cumulative reward — often discounted over time or across steps — by adjusting its decision-making strategy, typically called a \", React.createElement(Highlight, null, \"policy\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Because RL is so closely associated with a notion of making sequences of decisions, it has strong relationships with control theory, operations research, and other fields that consider sequential decision-making under uncertainty. In data science and AI, it plays a critical role in developing systems that learn how to act, rather than simply how to classify or cluster. Over the last several decades, especially with the wave of deep learning success, RL has attracted ever-increasing attention and has proven effective in several impressive feats: from learning to play Atari games at a superhuman level to beating world champions in complex board games such as Go.\"), \"\\n\", React.createElement(_components.p, null, \"In this chapter, I will start by describing the scope of reinforcement learning within the broader machine learning and data science fields, giving you an idea of where RL typically shines (and some of its limitations). I will then provide a historical perspective — from early insights by researchers such as Richard Bellman, to the formalization of many important concepts by Sutton and Barto, to the modern developments such as Deep Q-Networks (DQN) at DeepMind. Next, you will see how RL differs from supervised and unsupervised paradigms, and I will touch on how RL intersects with control theory and operations research. Finally, I will wrap up this introductory section with a brief set of notable milestones: from TD-Gammon to AlphaGo, AlphaZero, and other marvels.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"scope-of-reinforcement-learning-in-machine-learning-and-data-science\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#scope-of-reinforcement-learning-in-machine-learning-and-data-science\",\n    \"aria-label\": \"scope of reinforcement learning in machine learning and data science permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"scope of reinforcement learning in machine learning and data science\"), \"\\n\", React.createElement(_components.p, null, \"Reinforcement learning occupies a unique position in the universe of machine learning methods. While data scientists often focus on supervised and unsupervised tasks, RL focuses on learning a policy through interactions with an environment that provide time-delayed feedback (rewards). This characteristic is particularly useful in scenarios such as the following:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Robotics\"), \": A robot that must navigate and manipulate objects in an environment. The reward might be related to reaching a target location or successfully grasping an object.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Game AI\"), \": From board games like chess or Go, to real-time strategy games such as StarCraft or even interactive environments like Atari, an RL-based agent learns to make step-by-step decisions to win or achieve a high score.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Recommendation systems\"), \": While commonly approached as supervised or sequential supervised tasks, RL can also be used to learn an adaptive policy that adjusts its recommendations over time based on user interactions (rewards).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Healthcare\"), \": Learning sequential treatment policies. The environment is often complex and partially observable, so RL approaches can optimize patient outcomes across time.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Finance\"), \": Trading strategies, portfolio management, or algorithmic decision-making, in which the agent tries to maximize returns under uncertainty.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Despite these successes, RL typically requires careful engineering to ensure stable training, adequate exploration, and a sensible reward design. In modern data science workflows, RL might be used less commonly than supervised or unsupervised approaches, but it nonetheless remains critical for tasks involving sequential decision-making with delayed reward signals.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"historical-perspective-and-evolution\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#historical-perspective-and-evolution\",\n    \"aria-label\": \"historical perspective and evolution permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"historical perspective and evolution\"), \"\\n\", React.createElement(_components.p, null, \"The roots of reinforcement learning can be traced back to behaviorist psychology, specifically concepts of trial-and-error learning. Over time, these ideas were gradually formalized in mathematics, computer science, and operations research. Some major historical markers:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Bellman's early work (1950s)\"), \": Richard Bellman introduced the principle of optimality and the idea that many decision-making problems can be broken down via dynamic programming (DP). This gave rise to the Bellman equation, which lies at the core of many RL algorithms.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Control theory and operations research\"), \": These fields provided significant foundational work, often focusing on Markov Decision Processes (MDPs) to model sequences of decisions under uncertainty.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Sutton and Barto (1980s onward)\"), \": Rich Sutton and Andy Barto are often credited with formalizing modern RL. Their text, \\\"Reinforcement Learning: An Introduction,\\\" remains one of the most influential references in the field. They introduced concepts such as temporal difference (TD) learning and various practical algorithms that shaped the RL landscape.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"TD-Gammon (1992)\"), \": Gerald Tesauro's famous backgammon-playing program was an early demonstration of the power of RL combined with neural networks. TD-Gammon learned to play (and eventually surpass top human players) using temporal difference learning.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"DQN and the Deep Learning Era (2013–2015)\"), \": A major breakthrough came from DeepMind (Mnih and gang) with the Deep Q-Network algorithm. By combining Q-learning with convolutional neural networks and key innovations such as experience replay and target networks, agents learned to play dozens of Atari games at or above human level from just raw pixel input. This success catalyzed a surge of interest in \\\"deep RL.\\\"\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"AlphaGo (2016)\"), \": Another iconic milestone from DeepMind combined RL with Monte Carlo Tree Search and deep neural networks to defeat a top-level human professional in the game of Go, a feat previously deemed too difficult for computers in the near future.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"AlphaZero and beyond\"), \": Building on these ideas, AlphaZero demonstrated that a single algorithmic framework could achieve superhuman performance in chess, shogi, and Go by learning from self-play.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"comparison-with-supervised-and-unsupervised-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#comparison-with-supervised-and-unsupervised-learning\",\n    \"aria-label\": \"comparison with supervised and unsupervised learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"comparison with supervised and unsupervised learning\"), \"\\n\", React.createElement(_components.p, null, \"At first glance, it might seem that reinforcement learning sits somewhere between supervised and unsupervised learning. It is true that RL borrows ideas from both, but in practice it is often treated as an entirely separate paradigm:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Supervised learning\"), \": One is given a labeled dataset \", React.createElement(Latex, {\n    text: \"\\\\(D = \\\\{(x_i, y_i)\\\\}\\\\)\"\n  }), \" and the goal is to find a function \", React.createElement(Latex, {\n    text: \"\\\\(f(x)\\\\)\"\n  }), \" that maps inputs to outputs accurately. There is no concept of an environment or rewards, and there is a static dataset of examples.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Unsupervised learning\"), \": One is given unlabeled data \", React.createElement(Latex, {\n    text: \"\\\\(X\\\\)\"\n  }), \" and aims to discover hidden structure, e.g., clusters or latent factors. There is no concept of action, environment, or reward in the standard sense.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Reinforcement learning\"), \": One is not given labels for correct decisions. Instead, there is an agent interacting with a possibly evolving environment. When the agent takes an action, it receives a scalar reward (which can be positive or negative). The agent's objective is to maximize the cumulative reward, and thus it must learn not only to predict future rewards but also to select actions that yield high returns over time.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This difference leads to challenges unique to RL, such as the exploration vs. exploitation trade-off, delayed reward signals, non-stationary data distributions if the agent's policy changes the dynamics of the environment, and so on.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"relationship-to-control-theory-and-operations-research\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#relationship-to-control-theory-and-operations-research\",\n    \"aria-label\": \"relationship to control theory and operations research permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"relationship to control theory and operations research\"), \"\\n\", React.createElement(_components.p, null, \"Reinforcement learning has deep ties to control theory, which traditionally deals with designing controllers that guide a dynamical system's behavior toward some objective (e.g., setpoint control, trajectory optimization, etc.). In classical control, one typically assumes a known or partially known system model and uses methods like linear–quadratic regulators (LQRs) or robust control approaches. RL extends these ideas to situations in which the environment model is unknown or extremely complex, and we must learn near-optimal control strategies via data-driven approaches.\"), \"\\n\", React.createElement(_components.p, null, \"Similarly, in operations research, Markov Decision Processes have been a mainstay for decades, used to solve resource allocation, scheduling, and queue management problems. RL can be seen as a method to solve MDPs or POMDPs (partially observable Markov Decision Processes) empirically, by sampling from the environment.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"notable-milestones-in-rl-research\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#notable-milestones-in-rl-research\",\n    \"aria-label\": \"notable milestones in rl research permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"notable milestones in rl research\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"TD-Gammon (Tesauro)\"), \": Demonstrated that TD-based methods combined with function approximators (neural networks) could learn world-class backgammon strategies.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Atari breakthroughs with DQN (2013–2015)\"), \": By leveraging deep neural networks, experience replay, and target networks, Q-learning scaled to complex environments with high-dimensional state spaces.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"AlphaGo and successors\"), \": Go had long been considered a pinnacle of human skill. AlphaGo's triumph in 2016 signified a coming-of-age for RL combined with sophisticated search methods. Later improvements from AlphaZero and MuZero broadened the approach and removed the need for domain-specific knowledge.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"AlphaStar and OpenAI Five\"), \": RL applied to StarCraft II and Dota 2, respectively, showing that RL can handle extremely high-dimensional, partially observable environments in real-time strategy games with multiple agents.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"All of these achievements arose from the same fundamental RL concepts described in the chapters to come: states, actions, rewards, and the quest to maximize long-term returns through iterative learning algorithms.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"key-concepts\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#key-concepts\",\n    \"aria-label\": \"key concepts permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"key concepts\"), \"\\n\", React.createElement(_components.p, null, \"The basic ideas of reinforcement learning revolve around an \", React.createElement(Highlight, null, \"agent\"), \", an \", React.createElement(Highlight, null, \"environment\"), \", a set of possible \", React.createElement(Highlight, null, \"actions\"), \", and a reward signal. To properly define these ideas, researchers often use the Markov Decision Process (MDP) formalism, which provides a rigorous mathematical foundation for analyzing how an agent should act in uncertain and possibly stochastic domains.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"agent-environment-and-state-definitions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#agent-environment-and-state-definitions\",\n    \"aria-label\": \"agent environment and state definitions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"agent, environment, and state definitions\"), \"\\n\", React.createElement(_components.p, null, \"The agent is the decision-maker. It observes or receives a \", React.createElement(Highlight, null, \"state\"), \" \", React.createElement(Latex, {\n    text: \"\\\\(s\\\\)\"\n  }), \" from the environment at each step, selects an action \", React.createElement(Latex, {\n    text: \"\\\\(a\\\\)\"\n  }), \", then receives a reward \", React.createElement(Latex, {\n    text: \"\\\\(r\\\\)\"\n  }), \" and observes a new state \", React.createElement(Latex, {\n    text: \"\\\\(s'\\\\)\"\n  }), \". The environment, in turn, is everything outside the agent's decision boundary.\"), \"\\n\", React.createElement(_components.p, null, \"Conceptually, you can think of the environment as a system or a world with which the agent interacts. For instance, in a robotics scenario, the environment includes the robot's surroundings, the physics of motion, sensors, etc.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"markov-decision-processes-mdps-and-partially-observable-mdps-pomdps\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#markov-decision-processes-mdps-and-partially-observable-mdps-pomdps\",\n    \"aria-label\": \"markov decision processes mdps and partially observable mdps pomdps permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"markov decision processes (mdps) and partially observable mdps (pomdps)\"), \"\\n\", React.createElement(_components.p, null, \"An MDP is defined by a tuple \", React.createElement(Latex, {\n    text: \"\\\\( (S, A, P, R, \\\\gamma) \\\\)\"\n  }), \" where:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(S\\\\)\"\n  }), \": The set of states that the agent or environment can be in.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(A\\\\)\"\n  }), \": The set of actions available to the agent.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(P(s' \\\\mid s, a)\\\\)\"\n  }), \": A transition probability function specifying the probability of moving from state \", React.createElement(Latex, {\n    text: \"\\\\(s\\\\)\"\n  }), \" to \", React.createElement(Latex, {\n    text: \"\\\\(s'\\\\)\"\n  }), \" after taking action \", React.createElement(Latex, {\n    text: \"\\\\(a\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(R(s, a)\\\\)\"\n  }), \": A reward function that provides the expected reward when taking action \", React.createElement(Latex, {\n    text: \"\\\\(a\\\\)\"\n  }), \" in state \", React.createElement(Latex, {\n    text: \"\\\\(s\\\\)\"\n  }), \". In some formulations, \", React.createElement(Latex, {\n    text: \"\\\\(R\\\\)\"\n  }), \" can also depend on \", React.createElement(Latex, {\n    text: \"\\\\(s'\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(\\\\gamma \\\\in [0,1]\\\\)\"\n  }), \": A discount factor, which determines how future rewards are weighted compared to immediate rewards.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The Markov property requires that the environment's response at time \", React.createElement(Latex, {\n    text: \"\\\\(t+1\\\\)\"\n  }), \" depends only on the state and action at time \", React.createElement(Latex, {\n    text: \"\\\\(t\\\\)\"\n  }), \", and not on any earlier states or actions. In practice, many real-world tasks are not fully Markovian when described by a minimal set of observable variables, leading to the notion of partially observable MDPs (POMDPs).\"), \"\\n\", React.createElement(_components.p, null, \"A POMDP extends the MDP framework by including \", React.createElement(Latex, {\n    text: \"\\\\(O(s)\\\\)\"\n  }), \" (observations) and \", React.createElement(Latex, {\n    text: \"\\\\(Z(o \\\\mid s)\\\\)\"\n  }), \" (an observation probability distribution) to handle partial observability. In these scenarios, the agent doesn't necessarily know the true underlying state \", React.createElement(Latex, {\n    text: \"\\\\(s\\\\)\"\n  }), \" but only sees some noisy observation \", React.createElement(Latex, {\n    text: \"\\\\(o\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"actions-and-action-spaces\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#actions-and-action-spaces\",\n    \"aria-label\": \"actions and action spaces permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"actions and action spaces\"), \"\\n\", React.createElement(_components.p, null, \"Actions represent the decisions or moves the agent can make. In a discrete environment, the action space might be something like {Up, Down, Left, Right}, or a set of possible moves in a board game. In a continuous setting (e.g., a robotic arm or self-driving car), the action space might be real-valued vectors specifying forces or torques. There are also hybrid actions that combine discrete and continuous components.\"), \"\\n\", React.createElement(_components.p, null, \"Handling large or continuous action spaces is one of the primary challenges in RL, as naive enumeration is impossible when there are infinitely many actions at each decision step. This leads to specialized algorithms, such as policy-gradient-based methods, deterministic policy gradients, and actor-critic schemes, which you will see in later sections.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"rewards-returns-and-episodes\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#rewards-returns-and-episodes\",\n    \"aria-label\": \"rewards returns and episodes permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"rewards, returns, and episodes\"), \"\\n\", React.createElement(_components.p, null, \"In reinforcement learning, the \", React.createElement(Highlight, null, \"reward\"), \" is the key training signal. A positive reward encourages the agent to seek similar actions or states in the future, while a negative reward (or cost) deters certain behaviors. Many tasks are described in an \", React.createElement(Highlight, null, \"episodic\"), \" manner, meaning that interactions happen in episodes (e.g., a single play of a game), each of which starts in some initial state and ends in a terminal state or after a certain number of steps.\"), \"\\n\", React.createElement(_components.p, null, \"The agent's goal is to maximize the expected \", React.createElement(Highlight, null, \"return\"), \", defined commonly as the discounted cumulative reward:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nG_t = \\\\sum_{k=0}^{\\\\infty} \\\\gamma^k R_{t+k+1}\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"In this formula:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(R_{t+k+1}\\\\)\"\n  }), \" is the reward at time step \", React.createElement(Latex, {\n    text: \"\\\\(t+k+1\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(\\\\gamma\\\\)\"\n  }), \" is the discount factor that trades off the importance of immediate rewards versus future rewards (0 \\\\≤ \", React.createElement(Latex, {\n    text: \"\\\\(\\\\gamma\\\\)\"\n  }), \" \\\\≤ 1).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(G_t\\\\)\"\n  }), \" is the return starting from time \", React.createElement(Latex, {\n    text: \"\\\\(t\\\\)\"\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"If the task is \", React.createElement(Highlight, null, \"continuing\"), \" and does not naturally break down into episodes, the agent still accumulates a discounted return over the long run, or might use other definitions like average reward.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"policy-and-value-functions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#policy-and-value-functions\",\n    \"aria-label\": \"policy and value functions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"policy and value functions\"), \"\\n\", React.createElement(_components.p, null, \"A \", React.createElement(Highlight, null, \"policy\"), \" \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(a \\\\mid s)\\\\)\"\n  }), \" is a mapping from states to probabilities of selecting each action. It essentially defines the agent's behavior. The concept of \", React.createElement(Highlight, null, \"value functions\"), \" is central in RL, capturing how \\\"good\\\" it is to be in a certain state or to perform a certain action in that state.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(Highlight, null, \"state-value function\"), \" under policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi\\\\)\"\n  }), \" is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nV^\\\\pi(s) = \\\\mathbb{E}_\\\\pi[G_t \\\\mid s_t = s]\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"which is the expected return when starting in state \", React.createElement(Latex, {\n    text: \"\\\\(s\\\\)\"\n  }), \" and following policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi\\\\)\"\n  }), \" thereafter.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(Highlight, null, \"action-value function\"), \" (or Q-function) under policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi\\\\)\"\n  }), \" is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nQ^\\\\pi(s, a) = \\\\mathbb{E}_\\\\pi[G_t \\\\mid s_t = s, a_t = a]\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"which is the expected return starting from state \", React.createElement(Latex, {\n    text: \"\\\\(s\\\\)\"\n  }), \", taking action \", React.createElement(Latex, {\n    text: \"\\\\(a\\\\)\"\n  }), \", and then following policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi\\\\)\"\n  }), \".\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"bellman-equations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#bellman-equations\",\n    \"aria-label\": \"bellman equations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"bellman equations\"), \"\\n\", React.createElement(_components.p, null, \"The Bellman equations express the relationship between the value function of a state and the value functions of subsequent states. They form the backbone of dynamic programming approaches in RL. The Bellman equation for the state-value function is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nV^\\\\pi(s) = \\\\sum_{a} \\\\pi(a \\\\mid s) \\\\sum_{s',r} P(s',r \\\\mid s,a)\\\\,\\\\bigl[r + \\\\gamma V^\\\\pi(s')\\\\bigr].\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Here, \", React.createElement(Latex, {\n    text: \"\\\\(P(s', r \\\\mid s, a)\\\\)\"\n  }), \" is the probability of moving to state \", React.createElement(Latex, {\n    text: \"\\\\(s'\\\\)\"\n  }), \" and receiving reward \", React.createElement(Latex, {\n    text: \"\\\\(r\\\\)\"\n  }), \" after taking action \", React.createElement(Latex, {\n    text: \"\\\\(a\\\\)\"\n  }), \" in state \", React.createElement(Latex, {\n    text: \"\\\\(s\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, \"For the action-value function, we similarly have:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nQ^\\\\pi(s, a) = \\\\sum_{s',r} P(s',r \\\\mid s,a)\\\\,\\\\bigl[r + \\\\gamma \\\\sum_{a'} \\\\pi(a' \\\\mid s') Q^\\\\pi(s', a')\\\\bigr].\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"on-policy-vs-off-policy-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#on-policy-vs-off-policy-learning\",\n    \"aria-label\": \"on policy vs off policy learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"on-policy vs. off-policy learning\"), \"\\n\", React.createElement(_components.p, null, \"One crucial distinction in RL is whether learning is performed \", React.createElement(Highlight, null, \"on-policy\"), \" or \", React.createElement(Highlight, null, \"off-policy\"), \".\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"On-policy\"), \": The agent learns about the policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi\\\\)\"\n  }), \" that is being used to make decisions. SARSA is an example of an on-policy method, as it learns action values relative to the agent's current behavior.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Off-policy\"), \": The agent learns about a target policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi^*\\\\)\"\n  }), \" (often the greedy policy) while following some other behavior policy (for exploration). Q-learning is an example of an off-policy algorithm because it learns the optimal action-value function \", React.createElement(Latex, {\n    text: \"\\\\(Q^*\\\\)\"\n  }), \" regardless of how the agent behaves.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"basic-algorithms\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#basic-algorithms\",\n    \"aria-label\": \"basic algorithms permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"basic algorithms\"), \"\\n\", React.createElement(_components.p, null, \"In this chapter, I will describe the classical algorithms that form the foundation of RL: dynamic programming, Monte Carlo methods, temporal difference learning, and standard off-policy and on-policy control algorithms such as Q-learning and SARSA. These approaches illustrate the core principles and paved the way for more advanced deep RL approaches.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"dynamic-programming-approaches-policy-iteration-value-iteration\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#dynamic-programming-approaches-policy-iteration-value-iteration\",\n    \"aria-label\": \"dynamic programming approaches policy iteration value iteration permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"dynamic programming approaches (policy iteration, value iteration)\"), \"\\n\", React.createElement(_components.p, null, \"Dynamic programming (DP) methods assume you have a perfect model of the environment — i.e., you know the transition probabilities \", React.createElement(Latex, {\n    text: \"\\\\(P(s' \\\\mid s, a)\\\\)\"\n  }), \" and reward function \", React.createElement(Latex, {\n    text: \"\\\\(R(s, a)\\\\)\"\n  }), \" — and that you can use these to systematically compute value functions.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Policy Evaluation\"), \": Given a policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi\\\\)\"\n  }), \", compute \", React.createElement(Latex, {\n    text: \"\\\\(V^\\\\pi\\\\)\"\n  }), \" by iterating the Bellman expectation equation until convergence.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Policy Improvement\"), \": Improve the policy by acting greedily w.r.t. the current value function.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Policy Iteration\"), \": Alternate between policy evaluation and policy improvement until the policy converges to an optimal policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi^*\\\\)\"\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"An alternative is \", React.createElement(_components.strong, null, \"Value Iteration\"), \", which folds policy improvement steps into each iteration of evaluation, converging potentially faster to the optimal value function.\"), \"\\n\", React.createElement(_components.p, null, \"These methods are historically crucial but are limited to relatively small, discrete MDPs where a full model is available. In large or continuous state/action spaces without a known model, DP is not feasible.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"monte-carlo-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#monte-carlo-methods\",\n    \"aria-label\": \"monte carlo methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"monte carlo methods\"), \"\\n\", React.createElement(_components.p, null, \"Monte Carlo (MC) methods estimate values and policies by sampling complete episodes from the environment. An episode ends in a terminal state (or after a fixed horizon). Once an episode is finished, returns from each state-action pair in that episode are computed, and one can update value estimates accordingly.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Key aspects:\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"MC methods do not require knowledge of transition probabilities or rewards; they learn directly from sample returns.\"), \"\\n\", React.createElement(_components.li, null, \"They need episodes to terminate in order to compute returns.\"), \"\\n\", React.createElement(_components.li, null, \"Variance can be high since updates rely on entire episodes.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In practice, MC methods can be on-policy or off-policy. Off-policy variants might use behavior policies for exploration while learning about a target policy.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"temporal-difference-learning-td\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#temporal-difference-learning-td\",\n    \"aria-label\": \"temporal difference learning td permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"temporal difference learning (td)\"), \"\\n\", React.createElement(_components.p, null, \"Temporal difference (TD) learning was a landmark conceptual breakthrough, blending the best of dynamic programming (bootstrapping from current value estimates) and Monte Carlo (sampling from the environment).\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.strong, null, \"TD(0)\"), \" update rule for the state-value function is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nV(s_t) \\\\leftarrow V(s_t) + \\\\alpha\\\\bigl[r_{t+1} + \\\\gamma V(s_{t+1}) - V(s_t)\\\\bigr],\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(\\\\alpha\\\\)\"\n  }), \" is the learning rate. This is often called the \", React.createElement(_components.strong, null, \"TD error\"), \":\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\delta_t = r_{t+1} + \\\\gamma V(s_{t+1}) - V(s_t). \\\\)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"TD methods do not require waiting for full episodes to finish; they bootstrap from the existing estimate \", React.createElement(Latex, {\n    text: \"\\\\(V(s_{t+1})\\\\)\"\n  }), \". This can allow faster, more incremental updates, particularly in continuing or infinite-horizon tasks.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"q-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#q-learning\",\n    \"aria-label\": \"q learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"q-learning\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Q-learning\"), \" is one of the most widely known off-policy TD control methods. It updates the action-value function \", React.createElement(Latex, {\n    text: \"\\\\(Q(s,a)\\\\)\"\n  }), \" using the following rule:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nQ(s_t, a_t) \\\\leftarrow Q(s_t, a_t) + \\\\alpha\\\\Bigl(r_{t+1} + \\\\gamma \\\\max_{a}Q(s_{t+1}, a) - Q(s_t, a_t)\\\\Bigr).\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"This approach estimates the optimal value function \", React.createElement(Latex, {\n    text: \"\\\\(Q^*\\\\)\"\n  }), \", regardless of the policy used to sample transitions. To ensure adequate exploration, the behavior policy often includes an \", React.createElement(Latex, {\n    text: \"\\\\(\\\\epsilon\\\\)\"\n  }), \"-greedy approach over \", React.createElement(Latex, {\n    text: \"\\\\(Q\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, \"Below is a simple snippet in Pythonic pseudocode for tabular Q-learning:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&lt;Code text={`\\nimport numpy as np\\nimport random\\n\\ndef q_learning(env, num_episodes=10000, alpha=0.1, gamma=0.99, epsilon=0.1):\\n    # env: environment with discrete states, discrete actions\\n    # initialize Q arbitrarily\\n    Q = np.zeros((env.num_states, env.num_actions))\\n\\n    for episode in range(num_episodes):\\n        state = env.reset()\\n        done = False\\n        \\n        while not done:\\n            # select action using epsilon-greedy policy\\n            if random.random() &lt; epsilon:\\n                action = random.choice(range(env.num_actions))\\n            else:\\n                action = np.argmax(Q[state, :])\\n            \\n            next_state, reward, done, info = env.step(action)\\n            \\n            # Q-learning update\\n            best_next_action = np.argmax(Q[next_state, :])\\n            td_target = reward + gamma * Q[next_state, best_next_action]\\n            Q[state, action] += alpha * (td_target - Q[state, action])\\n            \\n            state = next_state\\n    \\n    return Q\\n`}/></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"sarsa\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#sarsa\",\n    \"aria-label\": \"sarsa permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"sarsa\"), \"\\n\", React.createElement(_components.p, null, \"<SARSA> is an on-policy alternative to Q-learning. Its update rule looks quite similar, but the crucial difference is that it uses the agent's current policy (which might be \", React.createElement(Latex, {\n    text: \"\\\\(\\\\epsilon\\\\)\"\n  }), \"-greedy w.r.t. Q) to select the next action and updates based on that:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nQ(s_t, a_t) \\\\leftarrow Q(s_t, a_t) + \\\\alpha\\\\bigl[r_{t+1} + \\\\gamma Q(s_{t+1}, a_{t+1}) - Q(s_t, a_t)\\\\bigr].\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Here, \", React.createElement(Latex, {\n    text: \"\\\\(a_{t+1}\\\\)\"\n  }), \" is drawn from the same behavior policy used at time \", React.createElement(Latex, {\n    text: \"\\\\(t+1\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"eligibility-traces-tdλ\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#eligibility-traces-td%CE%BB\",\n    \"aria-label\": \"eligibility traces tdλ permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"eligibility traces (td(λ))\"), \"\\n\", React.createElement(_components.p, null, \"Eligibility traces provide a unifying framework bridging MC and TD methods. By maintaining a decaying memory trace of which states (and/or actions) have been visited, these methods can update many states from each transition, improving data efficiency. The parameter \", React.createElement(Latex, {\n    text: \"\\\\(\\\\lambda\\\\)\"\n  }), \" determines how much credit assignment is spread over time steps.\"), \"\\n\", React.createElement(_components.p, null, \"For \", React.createElement(Latex, {\n    text: \"\\\\(\\\\lambda=0\\\\)\"\n  }), \", you recover standard TD(0). For \", React.createElement(Latex, {\n    text: \"\\\\(\\\\lambda=1\\\\)\"\n  }), \", you get something equivalent to Monte Carlo updates (for episodic tasks). In between, you get an interplay of bootstrapping and Monte Carlo backups.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"model-based-vs-model-free-approaches\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#model-based-vs-model-free-approaches\",\n    \"aria-label\": \"model based vs model free approaches permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"model-based vs. model-free approaches\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Model-Based\"), \": The agent has or learns an internal model of the environment's dynamics \", React.createElement(Latex, {\n    text: \"\\\\(P(s' \\\\mid s,a)\\\\)\"\n  }), \" and reward function \", React.createElement(Latex, {\n    text: \"\\\\(R(s,a)\\\\)\"\n  }), \". It can plan by simulating possible trajectories or using dynamic programming.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Model-Free\"), \": The agent directly learns value functions or policies from experience without explicitly constructing a model. Methods like Q-learning, SARSA, and policy gradient approaches typically fall under this umbrella.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"When you have a reliable model, model-based RL can be more sample-efficient, but in many practical tasks, the environment is too complex, or we do not have access to a perfect simulator, making model-free RL more commonly used.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"value-based-and-policy-based-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#value-based-and-policy-based-methods\",\n    \"aria-label\": \"value based and policy based methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"value-based and policy-based methods\"), \"\\n\", React.createElement(_components.p, null, \"The algorithms presented in the previous chapter are typically considered \", React.createElement(Highlight, null, \"value-based\"), \" methods, since they focus on estimating and improving an action-value function or state-value function. Another major approach is \", React.createElement(Highlight, null, \"policy-based\"), \", which directly parameterizes and optimizes the policy.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"comparing-value-based-vs-policy-based-approaches\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#comparing-value-based-vs-policy-based-approaches\",\n    \"aria-label\": \"comparing value based vs policy based approaches permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"comparing value-based vs. policy-based approaches\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Value-Based\"), \" approaches typically find an optimal Q-function (i.e., \", React.createElement(Latex, {\n    text: \"\\\\(Q^*\\\\)\"\n  }), \") and then derive a policy by greedily selecting actions that maximize \", React.createElement(Latex, {\n    text: \"\\\\(Q^*\\\\)\"\n  }), \". For many tasks, especially with discrete action spaces, this works well. But in large or continuous action spaces, searching for the argmax can be cumbersome, and function approximation can introduce instability in Q-value estimates.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Policy-Based\"), \" approaches parametrize the policy itself, for example \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi_\\\\theta(a\\\\mid s)\\\\)\"\n  }), \", using some parameters \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \" (often the weights of a neural network). One can then use gradient-based optimization (e.g., REINFORCE or actor-critic methods) to directly update \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \" toward maximizing expected returns. Policy-based methods are frequently used for continuous control, as they sidestep the need to explicitly store or approximate a Q-function over a continuous action set.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"actor-critic-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#actor-critic-methods\",\n    \"aria-label\": \"actor critic methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"actor-critic methods\"), \"\\n\", React.createElement(_components.p, null, \"Actor-critic methods combine the best of both worlds. They maintain both:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Actor\"), \": A parameterized policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi_\\\\theta(a \\\\mid s)\\\\)\"\n  }), \" that selects actions.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Critic\"), \": A value function \", React.createElement(Latex, {\n    text: \"\\\\(V_w(s)\\\\)\"\n  }), \" (or Q-value function) that evaluates how good the chosen actions or states are, guiding the gradient updates for the actor.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"By using a critic, the actor can be updated with lower-variance gradient estimates. By using an explicit policy representation in the actor, the method can seamlessly handle continuous actions.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"advantage-actor-critic-a2c\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#advantage-actor-critic-a2c\",\n    \"aria-label\": \"advantage actor critic a2c permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"advantage actor-critic (a2c)\"), \"\\n\", React.createElement(_components.p, null, \"A2C is a synchronous, or \\\"batched,\\\" version of advantage actor-critic. In advantage-based methods, the critic computes an \", React.createElement(Highlight, null, \"advantage function\"), \":\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nA(s,a) = Q(s,a) - V(s),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"which tells how much better or worse an action is, relative to the state's baseline value. The advantage reduces variance in policy gradient updates by not requiring the full return.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"asynchronous-advantage-actor-critic-a3c\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#asynchronous-advantage-actor-critic-a3c\",\n    \"aria-label\": \"asynchronous advantage actor critic a3c permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"asynchronous advantage actor-critic (a3c)\"), \"\\n\", React.createElement(_components.p, null, \"A3C, proposed by Mnih and gang (2016), is a parallelized version of the advantage actor-critic approach. Instead of training a single agent on experience from one environment, multiple environments and agents run in parallel threads, each computing updates to a shared global set of parameters asynchronously. This improves both the speed of training and the robustness of the learned policy.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"deterministic-policy-gradients-dpg\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#deterministic-policy-gradients-dpg\",\n    \"aria-label\": \"deterministic policy gradients dpg permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"deterministic policy gradients (dpg)\"), \"\\n\", React.createElement(_components.p, null, \"While standard policy gradient methods often assume a stochastic policy \", React.createElement(Latex, {\n    text: \"(\\\\pi_\\\\theta(a|s))\"\n  }), \" for exploration, for continuous control tasks it can be advantageous to use a deterministic policy \", React.createElement(Latex, {\n    text: \"(\\\\mu_\\\\theta(s))\"\n  }), \" that maps states directly to actions. The gradient of the policy performance objective can be computed using chain rule and the Q-function, leading to an algorithm known as \", React.createElement(_components.strong, null, \"Deterministic Policy Gradient\"), \" (DPG).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"proximal-policy-optimization-ppo-and-trpo\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#proximal-policy-optimization-ppo-and-trpo\",\n    \"aria-label\": \"proximal policy optimization ppo and trpo permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"proximal policy optimization (ppo) and trpo\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"PPO\"), \" (Proximal Policy Optimization) and \", React.createElement(_components.strong, null, \"TRPO\"), \" (Trust Region Policy Optimization) are popular policy gradient methods designed to improve stability. They limit the size of the policy update at each step. TRPO does so by enforcing a hard constraint on the KL divergence between the old policy and new policy, while PPO uses a clipped surrogate objective. Both methods aim to prevent destructive large updates that destabilize training.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"deep-reinforcement-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#deep-reinforcement-learning\",\n    \"aria-label\": \"deep reinforcement learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"deep reinforcement learning\"), \"\\n\", React.createElement(_components.p, null, \"When RL meets deep learning, we unlock the ability to handle very high-dimensional state spaces, such as raw images in Atari games, or complex continuous observations in robotics. However, naive application of neural networks to RL can lead to instability, so certain key architectural and algorithmic choices are needed to stabilize learning.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"role-of-neural-networks-in-rl\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#role-of-neural-networks-in-rl\",\n    \"aria-label\": \"role of neural networks in rl permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"role of neural networks in rl\"), \"\\n\", React.createElement(_components.p, null, \"Neural networks serve as powerful function approximators for value functions (e.g., \", React.createElement(Latex, {\n    text: \"\\\\(Q^\\\\pi(s,a)\\\\)\"\n  }), \"), state-value functions (\", React.createElement(Latex, {\n    text: \"\\\\(V^\\\\pi(s)\\\\)\"\n  }), \"), or policies (\", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi_\\\\theta(a\\\\mid s)\\\\)\"\n  }), \"). By adjusting network weights via gradient descent, we can learn representations of states and complex relationships between actions and expected returns.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"deep-q-networks-dqn\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#deep-q-networks-dqn\",\n    \"aria-label\": \"deep q networks dqn permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"deep q-networks (dqn)\"), \"\\n\", React.createElement(_components.p, null, \"Proposed by Mnih and gang (2013, 2015), DQN revolutionized RL for complex visual tasks. DQN uses a CNN to approximate the Q-function:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nQ(s,a; \\\\theta).\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Major innovations that made DQN successful:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Experience Replay\"), \": Instead of updating from consecutive samples, store transitions (\", React.createElement(Latex, {\n    text: \"\\\\(s_t, a_t, r_t, s_{t+1}\\\\)\"\n  }), \") in a replay buffer and sample mini-batches randomly. This breaks correlation in consecutive samples and improves data efficiency.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Target Network\"), \": Maintain a separate set of parameters \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^-\\\\)\"\n  }), \" for the target Q-network, updated only occasionally, to reduce instability due to constantly shifting targets.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"experience-replay\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#experience-replay\",\n    \"aria-label\": \"experience replay permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"experience replay\"), \"\\n\", React.createElement(_components.p, null, \"With experience replay, we store the agent's experience in a replay memory, then randomly sample from it to update the network. This randomization (rather than purely sequential updates) avoids bias from the highly correlated nature of consecutive data.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"target-networks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#target-networks\",\n    \"aria-label\": \"target networks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"target networks\"), \"\\n\", React.createElement(_components.p, null, \"In Q-learning, the TD target for \", React.createElement(Latex, {\n    text: \"\\\\(Q(s_t,a_t)\\\\)\"\n  }), \" depends on the next state's Q-values, which are themselves being updated. By using a target network with frozen or slowly updated parameters \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^-\\\\)\"\n  }), \", we have a more stable target:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\ny_t = r_{t+1} + \\\\gamma \\\\max_a Q(s_{t+1}, a; \\\\theta^-).\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"extensions-to-dqn-double-dueling-prioritized-replay\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#extensions-to-dqn-double-dueling-prioritized-replay\",\n    \"aria-label\": \"extensions to dqn double dueling prioritized replay permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"extensions to dqn (double, dueling, prioritized replay)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Double DQN\"), \": Addresses overestimation bias by separately selecting the action that maximizes the Q-function, and evaluating it with a target network.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Dueling DQN\"), \": Splits the Q-network into two streams: one for the state-value function and one for the advantage function, then combines them to produce Q-values. This helps the agent learn which states are (not) valuable, independent of the chosen action.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Prioritized Replay\"), \": Samples experiences that the agent is more uncertain about (i.e., those with higher TD error) more frequently, improving learning efficiency.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"policy-gradient-with-deep-networks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#policy-gradient-with-deep-networks\",\n    \"aria-label\": \"policy gradient with deep networks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"policy gradient with deep networks\"), \"\\n\", React.createElement(_components.p, null, \"Instead of approximating \", React.createElement(Latex, {\n    text: \"\\\\(Q(s,a)\\\\)\"\n  }), \" and then selecting \", React.createElement(Latex, {\n    text: \"\\\\(a\\\\)\"\n  }), \" greedily, we can parametrize a policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi_\\\\theta(a\\\\mid s)\\\\)\"\n  }), \" with a deep network and optimize for expected return. This is the essence of \", React.createElement(_components.strong, null, \"Deep Policy Gradients\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"A canonical example is the \", React.createElement(_components.strong, null, \"REINFORCE\"), \" algorithm (Williams, 1992), which uses Monte Carlo returns to compute an unbiased estimate of the gradient of performance. Although conceptually straightforward, REINFORCE can suffer from high variance, which actor-critic and advantage-based methods attempt to reduce.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"actor-critic-architectures-ddpg-sac\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#actor-critic-architectures-ddpg-sac\",\n    \"aria-label\": \"actor critic architectures ddpg sac permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"actor-critic architectures (ddpg, sac)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"DDPG\"), \" (Deep Deterministic Policy Gradient) extends DPG to large-scale deep networks, featuring an actor network for the deterministic policy \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mu_\\\\theta(s)\\\\)\"\n  }), \" and a critic network to approximate \", React.createElement(Latex, {\n    text: \"\\\\(Q^\\\\mu(s,a)\\\\)\"\n  }), \". It also uses a replay buffer and target networks.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"SAC\"), \" (Soft Actor-Critic) is another popular approach for continuous control, optimizing a stochastic policy with the twin goals of maximizing reward and maximizing entropy (exploration).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"distributional-rl-c51-qr-dqn\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#distributional-rl-c51-qr-dqn\",\n    \"aria-label\": \"distributional rl c51 qr dqn permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"distributional rl (c51, qr-dqn)\"), \"\\n\", React.createElement(_components.p, null, \"Distributional RL goes beyond learning the expected value of returns, focusing on learning the \", React.createElement(Highlight, null, \"distribution\"), \" of possible returns. For instance, \", React.createElement(_components.strong, null, \"C51\"), \" (Bellemare and gang) represents the return distribution with a discrete support of 51 atoms, while \", React.createElement(_components.strong, null, \"QR-DQN\"), \" uses quantile regression to learn the return distribution at different quantiles. This can give better performance and more insights into risk-sensitive decision-making.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"advanced-techniques\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#advanced-techniques\",\n    \"aria-label\": \"advanced techniques permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"advanced techniques\"), \"\\n\", React.createElement(_components.p, null, \"Having examined the fundamentals of reinforcement learning and how deep function approximation can help tackle complex, high-dimensional tasks, let's pivot to advanced techniques that address crucial problems such as efficient exploration, hierarchical learning, multi-agent settings, safe RL, and so forth.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"exploration-vs-exploitation-strategies\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#exploration-vs-exploitation-strategies\",\n    \"aria-label\": \"exploration vs exploitation strategies permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"exploration vs. exploitation strategies\"), \"\\n\", React.createElement(_components.p, null, \"One of the earliest lessons in RL is the need to balance \", React.createElement(_components.strong, null, \"exploration\"), \" (trying new actions to discover their consequences) and \", React.createElement(_components.strong, null, \"exploitation\"), \" (leveraging known actions that yield high reward). This fundamental trade-off can be studied in simpler settings through the \", React.createElement(Highlight, null, \"multi-armed bandit\"), \" problem.\"), \"\\n\", React.createElement(_components.p, null, \"Common exploration heuristics in full RL:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"ε-Greedy\"), \": With probability \", React.createElement(Latex, {\n    text: \"\\\\(\\\\epsilon\\\\)\"\n  }), \", select an action at random; otherwise select the greedy action.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Boltzmann Exploration (Softmax)\"), \": Sample actions according to a softmax distribution over Q-values.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Upper Confidence Bound (UCB)\"), \": Maintain an optimism in the face of uncertainty by adding a bonus for actions with fewer visits or higher uncertainty.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"ε-greedy-and-boltzmann-exploration\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%CE%B5-greedy-and-boltzmann-exploration\",\n    \"aria-label\": \"ε greedy and boltzmann exploration permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"ε-greedy and boltzmann exploration\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(Latex, {\n    text: \"\\\\(\\\\epsilon\\\\)\"\n  }), \"-greedy approach is straightforward but can be suboptimal if the environment is complex. \", React.createElement(_components.strong, null, \"Boltzmann exploration\"), \" (or Softmax) tries to allocate exploration probability proportionally to \", React.createElement(Latex, {\n    text: \"\\\\(\\\\exp(Q(s,a)/\\\\tau)\\\\)\"\n  }), \", where \", React.createElement(Latex, {\n    text: \"\\\\(\\\\tau\\\\)\"\n  }), \" is a temperature parameter controlling how sharply differences in Q-values affect selection probabilities.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"upper-confidence-bound-ucb\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#upper-confidence-bound-ucb\",\n    \"aria-label\": \"upper confidence bound ucb permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"upper confidence bound (ucb)\"), \"\\n\", React.createElement(_components.p, null, \"Originally popularized in multi-armed bandit scenarios, UCB-based techniques incorporate an exploration bonus term that is larger for rarely visited actions. A typical UCB formula for action-value estimates might be:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nQ_t(a) + b_t(a), \\\\quad b_t(a) = \\\\sqrt{\\\\frac{2 \\\\ln \\\\bigl(\\\\sum_{a'}P_{a'}\\\\bigr)}{P_a}},\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(P_a\\\\)\"\n  }), \" is the number of times action \", React.createElement(Latex, {\n    text: \"\\\\(a\\\\)\"\n  }), \" has been selected so far, and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\sum_{a'}P_{a'}\\\\)\"\n  }), \" is the total number of action selections.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"hierarchical-reinforcement-learning-options-framework-feudal-networks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#hierarchical-reinforcement-learning-options-framework-feudal-networks\",\n    \"aria-label\": \"hierarchical reinforcement learning options framework feudal networks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"hierarchical reinforcement learning (options framework, feudal networks)\"), \"\\n\", React.createElement(_components.p, null, \"In \", React.createElement(_components.strong, null, \"hierarchical RL\"), \", one aims to learn or exploit temporal abstractions, such as higher-level actions or \\\"options\\\" that span multiple time steps. This helps break down complex tasks into manageable sub-tasks. The \", React.createElement(Highlight, null, \"Options Framework\"), \" (Sutton and gang) formalizes such sub-policies, each with its own initiation and termination conditions.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"FeUdal Networks\"), \" (Vezhnevets and gang, 2017) propose a hierarchy of managers and workers, with managers setting high-level goals in an embedding space, and workers focusing on short-horizon control.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"multi-agent-reinforcement-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#multi-agent-reinforcement-learning\",\n    \"aria-label\": \"multi agent reinforcement learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"multi-agent reinforcement learning\"), \"\\n\", React.createElement(_components.p, null, \"When multiple agents learn and interact in the same environment, we have a multi-agent RL setting. Agents may cooperate, compete, or both. Key challenges include non-stationarity (since the environment changes when other agents change their behavior), communication strategies, and stability. A variety of approaches exist, from independent Q-learning to more advanced methods involving joint action learners or policy gradients with centralized critics and decentralized actors.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"transfer-curriculum-and-meta-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#transfer-curriculum-and-meta-learning\",\n    \"aria-label\": \"transfer curriculum and meta learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"transfer, curriculum, and meta-learning\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Transfer Learning\"), \": Using knowledge learned in one task to accelerate learning in a new, related task.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Curriculum Learning\"), \": Presenting simpler tasks first, then gradually increasing difficulty.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Meta-Learning\"), \": Learning how to learn. An agent might adapt quickly to new tasks after training on a distribution of tasks.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"These methods aim to improve sample efficiency and reduce the need to start learning \\\"from scratch\\\" every time the agent faces a new scenario.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"inverse-reinforcement-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#inverse-reinforcement-learning\",\n    \"aria-label\": \"inverse reinforcement learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"inverse reinforcement learning\"), \"\\n\", React.createElement(_components.p, null, \"Inverse reinforcement learning (IRL) seeks to infer the reward function \", React.createElement(Latex, {\n    text: \"\\\\(R\\\\)\"\n  }), \" from expert demonstrations. By observing how experts behave, one can back out what objective they are trying to optimize. IRL is particularly useful when the reward is difficult to specify but we have demonstration data.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"safe-and-robust-rl\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#safe-and-robust-rl\",\n    \"aria-label\": \"safe and robust rl permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"safe and robust rl\"), \"\\n\", React.createElement(_components.p, null, \"In real-world scenarios, we often need to ensure that the agent avoids catastrophic actions or respects certain constraints. \", React.createElement(_components.strong, null, \"Safe RL\"), \" studies ways to incorporate constraints into the learning process, or shape exploration so that catastrophic actions are less likely. \", React.createElement(_components.strong, null, \"Robust RL\"), \" similarly addresses the environment's uncertainty by training or regularizing the agent to handle worst-case scenarios or distribution shifts.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"offline-rl-batch-rl\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#offline-rl-batch-rl\",\n    \"aria-label\": \"offline rl batch rl permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"offline rl (batch rl)\"), \"\\n\", React.createElement(_components.p, null, \"Offline RL learns policies from a fixed dataset of transitions without additional environment interaction. This setting is especially useful in domains where real-world interaction is costly (e.g., healthcare, autonomous driving). Methods must carefully handle distributional shift issues and avoid extrapolation errors from out-of-distribution state-action pairs.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"applications-and-case-studies\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#applications-and-case-studies\",\n    \"aria-label\": \"applications and case studies permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"applications and case studies\"), \"\\n\", React.createElement(_components.p, null, \"Reinforcement learning has proven its mettle in numerous fields, both academic and industrial. While many breakthroughs are on benchmark domains like Atari, MuJoCo, or custom simulators, real-world applications continue to proliferate.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"robotics-and-control\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#robotics-and-control\",\n    \"aria-label\": \"robotics and control permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"robotics and control\"), \"\\n\", React.createElement(_components.p, null, \"Robotic manipulation, locomotion, and navigation are quintessential RL problems, featuring continuous state and action spaces and requiring an agent to handle high-dimensional sensor data (e.g., from cameras, lidar, joint encoders). Techniques such as DDPG, PPO, and SAC are widely tested here, often combined with robust domain randomization and sim-to-real transfer.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"game-ai-and-openai-gym\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#game-ai-and-openai-gym\",\n    \"aria-label\": \"game ai and openai gym permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"game ai and openai gym\"), \"\\n\", React.createElement(_components.p, null, \"OpenAI Gym provides a standard interface for RL agents and a variety of environments (classic control, Atari, Box2D, MuJoCo). This allows easy benchmarking of algorithms. High-profile game successes (AlphaGo, AlphaStar, OpenAI Five) used RL plus additional techniques (Monte Carlo Tree Search, self-play, etc.) to excel in extremely challenging domains.\"), \"\\n\", React.createElement(Image, {\n    alt: \"AlphaGo playing Go\",\n    path: \"\",\n    caption: \"AlphaGo's match against Lee Sedol, a hallmark demonstration of RL in complex environments\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"recommender-systems\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#recommender-systems\",\n    \"aria-label\": \"recommender systems permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"recommender systems\"), \"\\n\", React.createElement(_components.p, null, \"Sequential recommendation can be framed as a contextual bandit or RL problem, where the environment is the user or user-model, actions are content recommendations, and rewards might be clicks or engagement metrics. RL can dynamically adapt to evolving user tastes.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"healthcare-and-personalized-medicine\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#healthcare-and-personalized-medicine\",\n    \"aria-label\": \"healthcare and personalized medicine permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"healthcare and personalized medicine\"), \"\\n\", React.createElement(_components.p, null, \"In healthcare, RL methods can recommend treatment policies that maximize patient health over the long run. For instance, in sepsis management or oncology, where immediate interventions have delayed impacts. Challenges include partial observability, high stakes, and the need for explainability.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"finance-and-algorithmic-trading\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#finance-and-algorithmic-trading\",\n    \"aria-label\": \"finance and algorithmic trading permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"finance and algorithmic trading\"), \"\\n\", React.createElement(_components.p, null, \"Portfolio optimization, high-frequency trading, and algorithmic strategy design can be framed as RL tasks. The agent must choose trades or adjustments and receives profit/loss as a reward. High volatility, partial observability, and risk constraints complicate the matter, leading to interesting synergy with risk-sensitive or distributional RL.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"autonomous-vehicles\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#autonomous-vehicles\",\n    \"aria-label\": \"autonomous vehicles permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"autonomous vehicles\"), \"\\n\", React.createElement(_components.p, null, \"Self-driving cars must constantly make decisions about steering, acceleration, lane changes, and so on, balancing collision avoidance, speed, comfort, and traffic rules. RL can help address these decisions in principle, but real-world safety constraints, huge state-action spaces, and interpretability remain open challenges.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"resource-allocation-and-scheduling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#resource-allocation-and-scheduling\",\n    \"aria-label\": \"resource allocation and scheduling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"resource allocation and scheduling\"), \"\\n\", React.createElement(_components.p, null, \"RL can optimize scheduling or resource allocation in data centers, manufacturing, or supply chain management. Instead of coding heuristics, an RL agent can learn from data to handle complexities like changing demand patterns or unexpected disruptions.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"practical-considerations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#practical-considerations\",\n    \"aria-label\": \"practical considerations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"practical considerations\"), \"\\n\", React.createElement(_components.p, null, \"Finally, let's explore the real-world complexities an RL practitioner must consider, such as reward design, hyperparameter tuning, computational constraints, and reproducibility.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"designing-reward-functions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#designing-reward-functions\",\n    \"aria-label\": \"designing reward functions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"designing reward functions\"), \"\\n\", React.createElement(_components.p, null, \"Reward shaping can significantly impact the agent's behavior. A poorly designed reward might inadvertently create \", React.createElement(Highlight, null, \"reward hacking\"), \" (the agent finds a way to achieve the maximum reward in an unintended manner). It is crucial to craft the reward so that it aligns with the true objectives of the task.\"), \"\\n\", React.createElement(_components.p, null, \"Common pitfalls:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Sparse rewards: The agent seldom receives feedback, making exploration difficult.\"), \"\\n\", React.createElement(_components.li, null, \"Delayed rewards: The credit assignment problem becomes severe.\"), \"\\n\", React.createElement(_components.li, null, \"Surrogate or proxy rewards: If the reward is poorly correlated with the true objective, the agent might exploit the proxy.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"handling-continuous-action-spaces\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#handling-continuous-action-spaces\",\n    \"aria-label\": \"handling continuous action spaces permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"handling continuous action spaces\"), \"\\n\", React.createElement(_components.p, null, \"In robotics, continuous control, or many real-world tasks, actions are not discrete. Off-the-shelf methods like Q-learning do not directly apply, because \", React.createElement(Latex, {\n    text: \"\\\\(\\\\max_a Q(s,a)\\\\)\"\n  }), \" is not well-defined over a continuous domain in a naive sense. Policy gradient or actor-critic methods are more suitable here.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"scalability-and-computational-challenges\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#scalability-and-computational-challenges\",\n    \"aria-label\": \"scalability and computational challenges permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"scalability and computational challenges\"), \"\\n\", React.createElement(_components.p, null, \"Reinforcement learning can be data-hungry. In some domains, each sample is expensive (e.g., real-world robotic trials). Thus, parallelization and simulation are widely used. Tools like \", React.createElement(_components.strong, null, \"Ray RLlib\"), \" allow distributing experience collection across many workers.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Distributed training\"), \" remains an active area of research, especially for tasks requiring huge data throughput, such as large-scale game simulations or complex continuous control tasks.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"common-pitfalls-and-troubleshooting\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#common-pitfalls-and-troubleshooting\",\n    \"aria-label\": \"common pitfalls and troubleshooting permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"common pitfalls and troubleshooting\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Instability\"), \": Q-networks can diverge without careful hyperparameters or design choices (learning rates, replay buffer sizes, target updates, etc.).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Reward hacking\"), \": The agent finds an unintended strategy to maximize reward.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Lack of exploration\"), \": If the agent does not explore sufficiently, it will not find good policies.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Overfitting to training environment\"), \": An agent that performs well in one environment might fail in slightly different but related tasks.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"hyperparameter-tuning-and-experimentation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#hyperparameter-tuning-and-experimentation\",\n    \"aria-label\": \"hyperparameter tuning and experimentation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"hyperparameter tuning and experimentation\"), \"\\n\", React.createElement(_components.p, null, \"Reinforcement learning can be quite sensitive to hyperparameters (learning rate, discount factor, exploration schedules, neural network architectures, etc.). I recommend:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Performing grid or random searches to find good ranges.\"), \"\\n\", React.createElement(_components.li, null, \"Using best practices, such as decaying \", React.createElement(Latex, {\n    text: \"\\\\(\\\\epsilon\\\\)\"\n  }), \" for ε-greedy or \", React.createElement(Latex, {\n    text: \"\\\\(\\\\tau\\\\)\"\n  }), \" for softmax.\"), \"\\n\", React.createElement(_components.li, null, \"Carefully monitoring training curves and using multiple seeds.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"evaluation-and-benchmarking\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#evaluation-and-benchmarking\",\n    \"aria-label\": \"evaluation and benchmarking permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"evaluation and benchmarking\"), \"\\n\", React.createElement(_components.p, null, \"Because of the stochastic nature of RL, it is important to run multiple seeds or replicate results multiple times and report average performance plus confidence intervals. The RL community often uses standard benchmark suites like Arcade Learning Environment (Atari), MuJoCo tasks, or continuous control tasks from PyBullet for comparisons.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"reproducibility-and-experiment-tracking\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#reproducibility-and-experiment-tracking\",\n    \"aria-label\": \"reproducibility and experiment tracking permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"reproducibility and experiment tracking\"), \"\\n\", React.createElement(_components.p, null, \"Due to the complexity and stochasticity of RL algorithms, it is essential to track random seeds, algorithm hyperparameters, environment versions, etc., in a structured manner. Tools like Weights & Biases, MLflow, or TensorBoard can help keep track of experiments.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"frameworks-and-libraries-openai-gym-stable-baselines-rllib\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#frameworks-and-libraries-openai-gym-stable-baselines-rllib\",\n    \"aria-label\": \"frameworks and libraries openai gym stable baselines rllib permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"frameworks and libraries (openai gym, stable baselines, rllib)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"OpenAI Gym\"), \": Defines a standard interface for RL tasks and includes many classic and modern environments.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Stable Baselines\"), \": Provides popular RL algorithms (PPO, A2C, DDPG, SAC, TD3, etc.) in a user-friendly library.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"RLlib (part of Ray)\"), \": A scalable RL library that supports distributed training out of the box.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"For specialized tasks (e.g., robotics), frameworks like \", React.createElement(Highlight, null, \"PyBullet\"), \", \", React.createElement(Highlight, null, \"Roboschool\"), \", or \", React.createElement(Highlight, null, \"Isaac Gym\"), \" might be used.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"I hope this extensive overview has given you both the theoretical background and practical knowledge to appreciate how reinforcement learning fits into advanced data science and AI pipelines. It is truly one of the most dynamic fields in modern machine learning, continuing to evolve with cutting-edge research in deep RL, hierarchical approaches, multi-agent settings, and beyond.\"), \"\\n\", React.createElement(_components.p, null, \"The chapters here have highlighted fundamental ideas: MDPs, Bellman equations, Q-learning, SARSA, policy gradients, actor-critic methods, and modern breakthroughs like DQN, AlphaGo, or advanced policy optimization algorithms. If you plan to pursue RL further, I strongly recommend exploring in detail the references below, including the classic textbook by Sutton and Barto (which is available online), and some of the seminal papers that launched the deep RL revolution.\"), \"\\n\", React.createElement(_components.p, null, \"Reading about these algorithms is helpful, but nothing cements understanding like implementing them. I encourage you to experiment, possibly starting with simpler environments like CartPole or MountainCar in OpenAI Gym, then venturing to more advanced continuous control tasks or even custom domains relevant to your field of interest.\"), \"\\n\", React.createElement(_components.p, null, \"If you stay mindful of reward design, keep track of hyperparameters carefully, and remain vigilant about the exploration vs. exploitation dilemma, you will be well on your way to successful applications of reinforcement learning in your projects.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"References and further reading\"), \":\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Sutton, R. S., & Barto, A. G. (2018). \\\"Reinforcement Learning: An Introduction (2nd edition).\\\"\"), \"\\n\", React.createElement(_components.li, null, \"Bellman, R. (1957). \\\"Dynamic Programming.\\\" Princeton University Press.\"), \"\\n\", React.createElement(_components.li, null, \"Mnih, V. and gang (2015). \\\"Human-level control through deep reinforcement learning.\\\" \", React.createElement(_components.em, null, \"Nature\"), \", 518(7540), 529-533.\"), \"\\n\", React.createElement(_components.li, null, \"Silver, D. and gang (2016). \\\"Mastering the game of Go with deep neural networks and tree search.\\\" \", React.createElement(_components.em, null, \"Nature\"), \", 529(7587), 484-489.\"), \"\\n\", React.createElement(_components.li, null, \"Schulman, J. and gang (2015). \\\"Trust Region Policy Optimization.\\\" \", React.createElement(_components.em, null, \"ICML\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Schulman, J. and gang (2017). \\\"Proximal Policy Optimization Algorithms.\\\" \", React.createElement(_components.em, null, \"arXiv preprint arXiv:1707.06347.\")), \"\\n\", React.createElement(_components.li, null, \"Hessel, M. and gang (2018). \\\"Rainbow: Combining Improvements in Deep Reinforcement Learning.\\\" \", React.createElement(_components.em, null, \"AAAI.\")), \"\\n\", React.createElement(_components.li, null, \"Vezhnevets, A. S. and gang (2017). \\\"FeUdal Networks for Hierarchical Reinforcement Learning.\\\" \", React.createElement(_components.em, null, \"ICML.\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"And of course, exploring the open-source code bases (OpenAI Baselines, Stable Baselines, RLlib, etc.) can be instructive for practical implementations.\"), \"\\n\", React.createElement(_components.p, null, \"All in all, reinforcement learning stands out as a powerful paradigm for sequential decision-making under uncertainty, bridging ideas from control theory, behavioral psychology, and machine learning. By continually refining algorithms and deep architectures, RL researchers and practitioners push the boundaries of what learning-based agents can achieve, from playing complex games at superhuman levels to optimizing resource allocation in large-scale systems, to controlling sophisticated robotic platforms. The future is bright for RL, and as hardware and parallel computing frameworks improve, we can expect further leaps forward in speed, stability, and real-world applicability.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/avrtt/Repos/avrtt.github.io/src/pages/posts/research/intro_to_rl.mdx\";\nimport React, {useState, useEffect} from 'react';\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\nimport RemoveMarkdown from 'remove-markdown';\nimport {ImageContext} from '../context/ImageContext';\nimport {MDXProvider} from '@mdx-js/react';\nimport Image from '../components/PostImage';\nimport {motion} from 'framer-motion';\nimport SEO from \"../components/seo\";\nimport PostBanner from '../components/PostBanner';\nimport PostBottom from '../components/PostBottom';\nimport {wordsPerMinuteAdventures, wordsPerMinuteResearch, wordsPerMinuteThoughts} from '../data/commonVariables';\nimport {graphql} from 'gatsby';\nimport PartOfCourseNotice from \"../components/PartOfCourseNotice\";\nimport * as stylesButtonsCommon from \"../styles/buttons_common.module.scss\";\nimport * as stylesCustomPostLayouts from \"../styles/custom_post_layouts.module.scss\";\nimport * as stylesTableOfContents from \"../styles/table_of_contents.module.scss\";\nimport * as stylesTagBadges from \"../styles/tag_badges.module.scss\";\nfunction formatReadTime(minutes) {\n  if (minutes <= 10) return '~10 min';\n  if (minutes <= 20) return '~20 min';\n  if (minutes <= 30) return '~30 min';\n  if (minutes <= 40) return '~40 min';\n  if (minutes <= 50) return '~50 min';\n  if (minutes <= 60) return '~1 h';\n  const hours = Math.floor(minutes / 60);\n  const remainder = minutes % 60;\n  if (remainder <= 30) {\n    return `~${hours}${remainder > 0 ? '.5' : ''} h`;\n  }\n  return `~${hours + 1} h`;\n}\nconst TableOfContents = ({toc}) => {\n  if (!toc || !toc.items) return null;\n  const handleClick = (e, url) => {\n    e.preventDefault();\n    const targetId = url.replace('#', '');\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  return React.createElement(\"nav\", {\n    className: stylesTableOfContents.toc\n  }, React.createElement(\"ul\", null, toc.items.map((item, index) => React.createElement(\"li\", {\n    key: index\n  }, React.createElement(\"a\", {\n    href: item.url,\n    onClick: e => handleClick(e, item.url)\n  }, item.title), item.items && React.createElement(TableOfContents, {\n    toc: {\n      items: item.items\n    }\n  })))));\n};\nexport function PostTemplate({data: {mdx, allMdx, allPostImages}, children}) {\n  const {frontmatter, body, tableOfContents} = mdx;\n  const index = frontmatter.index;\n  const slug = frontmatter.slug;\n  const section = slug.split('/')[1];\n  const posts = allMdx.nodes.filter(post => post.frontmatter.slug.includes(`/${section}/`));\n  const sortedPosts = posts.sort((a, b) => a.frontmatter.index - b.frontmatter.index);\n  const currentIndex = sortedPosts.findIndex(post => post.frontmatter.index === index);\n  const nextPost = sortedPosts[currentIndex + 1];\n  const lastPost = sortedPosts[currentIndex - 1];\n  const trimmedSlug = frontmatter.slug.replace(/\\/$/, '');\n  const keyCurrent = (/[^/]*$/).exec(trimmedSlug)[0];\n  const basePath = `posts/${section}/content/${keyCurrent}/`;\n  const [isWideLayout, setIsWideLayout] = useState(frontmatter.flagWideLayoutByDefault);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const toggleLayout = () => {\n    setIsWideLayout(!isWideLayout);\n  };\n  useEffect(() => {\n    setIsAnimating(true);\n    const timer = setTimeout(() => setIsAnimating(false), 340);\n    return () => clearTimeout(timer);\n  }, [isWideLayout]);\n  var wordsPerMinute;\n  if (section === \"adventures\") {\n    wordsPerMinute = wordsPerMinuteAdventures;\n  } else if (section === \"research\") {\n    wordsPerMinute = wordsPerMinuteResearch;\n  } else if (section === \"thoughts\") {\n    wordsPerMinute = wordsPerMinuteThoughts;\n  }\n  const plainTextBody = RemoveMarkdown(body).replace(/import .*? from .*?;/g, '').replace(/<.*?>/g, '').replace(/\\{\\/\\*[\\s\\S]*?\\*\\/\\}/g, '').trim();\n  const wordCount = plainTextBody.split(/\\s+/).length;\n  const baseReadTimeMinutes = Math.ceil(wordCount / wordsPerMinute);\n  const extraTime = frontmatter.extraReadTimeMin || 0;\n  const totalReadTime = baseReadTimeMinutes + extraTime;\n  const readTime = formatReadTime(totalReadTime);\n  const notices = [{\n    flag: frontmatter.flagDraft,\n    component: () => import(\"../components/NotFinishedNotice\")\n  }, {\n    flag: frontmatter.flagMindfuckery,\n    component: () => import(\"../components/MindfuckeryNotice\")\n  }, {\n    flag: frontmatter.flagRewrite,\n    component: () => import(\"../components/RewriteNotice\")\n  }, {\n    flag: frontmatter.flagOffensive,\n    component: () => import(\"../components/OffensiveNotice\")\n  }, {\n    flag: frontmatter.flagProfane,\n    component: () => import(\"../components/ProfanityNotice\")\n  }, {\n    flag: frontmatter.flagMultilingual,\n    component: () => import(\"../components/MultilingualNotice\")\n  }, {\n    flag: frontmatter.flagUnreliably,\n    component: () => import(\"../components/UnreliablyNotice\")\n  }, {\n    flag: frontmatter.flagPolitical,\n    component: () => import(\"../components/PoliticsNotice\")\n  }, {\n    flag: frontmatter.flagCognitohazard,\n    component: () => import(\"../components/CognitohazardNotice\")\n  }, {\n    flag: frontmatter.flagHidden,\n    component: () => import(\"../components/HiddenNotice\")\n  }];\n  const [loadedNotices, setLoadedNotices] = useState([]);\n  useEffect(() => {\n    notices.forEach(({flag, component}) => {\n      if (flag) {\n        component().then(module => {\n          setLoadedNotices(prev => [...prev, module.default]);\n        });\n      }\n    });\n  }, []);\n  return React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.15\n    }\n  }, React.createElement(PostBanner, {\n    postNumber: frontmatter.index,\n    date: frontmatter.date,\n    updated: frontmatter.updated,\n    readTime: readTime,\n    difficulty: frontmatter.difficultyLevel,\n    title: frontmatter.title,\n    desc: frontmatter.desc,\n    banner: frontmatter.banner,\n    section: section,\n    postKey: keyCurrent,\n    isMindfuckery: frontmatter.flagMindfuckery,\n    mainTag: frontmatter.mainTag\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\",\n      maxWidth: \"75%\",\n      marginLeft: \"auto\",\n      paddingRight: \"1vw\",\n      marginTop: \"-6vh\",\n      marginBottom: \"4vh\"\n    }\n  }, frontmatter.otherTags.map((tag, index) => React.createElement(\"span\", {\n    key: index,\n    className: `noselect ${stylesTagBadges.tagPosts}`,\n    style: {\n      margin: \"0 5px 5px 0\"\n    }\n  }, tag))), React.createElement(\"div\", {\n    className: \"postBody\"\n  }, React.createElement(TableOfContents, {\n    toc: tableOfContents\n  })), React.createElement(\"br\"), React.createElement(\"div\", {\n    style: {\n      margin: \"0 10% -2vh 30%\",\n      textAlign: \"right\"\n    }\n  }, React.createElement(motion.button, {\n    className: `noselect ${stylesCustomPostLayouts.postButton}`,\n    id: stylesCustomPostLayouts.postLayoutSwitchButton,\n    onClick: toggleLayout,\n    whileTap: {\n      scale: 0.93\n    }\n  }, React.createElement(motion.div, {\n    className: stylesButtonsCommon.buttonTextWrapper,\n    key: isWideLayout,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }, isWideLayout ? \"Switch to default layout\" : \"Switch to wide layout\"))), React.createElement(\"br\"), React.createElement(\"div\", {\n    className: \"postBody\",\n    style: {\n      margin: isWideLayout ? \"0 -14%\" : \"\",\n      maxWidth: isWideLayout ? \"200%\" : \"\",\n      transition: \"margin 1s ease, max-width 1s ease, padding 1s ease\"\n    }\n  }, React.createElement(\"div\", {\n    className: `${stylesCustomPostLayouts.textContent} ${isAnimating ? stylesCustomPostLayouts.fadeOut : stylesCustomPostLayouts.fadeIn}`\n  }, loadedNotices.map((NoticeComponent, index) => React.createElement(NoticeComponent, {\n    key: index\n  })), frontmatter.indexCourse ? React.createElement(PartOfCourseNotice, {\n    index: frontmatter.indexCourse,\n    category: frontmatter.courseCategoryName\n  }) : \"\", React.createElement(ImageContext.Provider, {\n    value: {\n      images: allPostImages.nodes,\n      basePath: basePath.replace(/\\/$/, '') + '/'\n    }\n  }, React.createElement(MDXProvider, {\n    components: {\n      Image\n    }\n  }, children)))), React.createElement(PostBottom, {\n    nextPost: nextPost,\n    lastPost: lastPost,\n    keyCurrent: keyCurrent,\n    section: section\n  }));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head({data}) {\n  const {frontmatter} = data.mdx;\n  const title = frontmatter.titleSEO || frontmatter.title;\n  const titleOG = frontmatter.titleOG || title;\n  const titleTwitter = frontmatter.titleTwitter || title;\n  const description = frontmatter.descSEO || frontmatter.desc;\n  const descriptionOG = frontmatter.descOG || description;\n  const descriptionTwitter = frontmatter.descTwitter || description;\n  const schemaType = frontmatter.schemaType || \"BlogPosting\";\n  const keywords = frontmatter.keywordsSEO;\n  const datePublished = frontmatter.date;\n  const dateModified = frontmatter.updated || datePublished;\n  const imageOG = frontmatter.imageOG || frontmatter.banner?.childImageSharp?.gatsbyImageData?.images?.fallback?.src;\n  const imageAltOG = frontmatter.imageAltOG || descriptionOG;\n  const imageTwitter = frontmatter.imageTwitter || imageOG;\n  const imageAltTwitter = frontmatter.imageAltTwitter || descriptionTwitter;\n  const canonicalUrl = frontmatter.canonicalURL;\n  const flagHidden = frontmatter.flagHidden || false;\n  const mainTag = frontmatter.mainTag || \"Posts\";\n  const section = frontmatter.slug.split('/')[1] || \"posts\";\n  const type = \"article\";\n  const {siteUrl} = useSiteMetadata();\n  const breadcrumbJSON = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": [{\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": siteUrl\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 2,\n      \"name\": mainTag,\n      \"item\": `${siteUrl}/${frontmatter.slug.split('/')[1]}`\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 3,\n      \"name\": title,\n      \"item\": `${siteUrl}${frontmatter.slug}`\n    }]\n  };\n  return React.createElement(SEO, {\n    title: title + \" - avrtt.blog\",\n    titleOG: titleOG,\n    titleTwitter: titleTwitter,\n    description: description,\n    descriptionOG: descriptionOG,\n    descriptionTwitter: descriptionTwitter,\n    schemaType: schemaType,\n    keywords: keywords,\n    datePublished: datePublished,\n    dateModified: dateModified,\n    imageOG: imageOG,\n    imageAltOG: imageAltOG,\n    imageTwitter: imageTwitter,\n    imageAltTwitter: imageAltTwitter,\n    canonicalUrl: canonicalUrl,\n    flagHidden: flagHidden,\n    mainTag: mainTag,\n    section: section,\n    type: type\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumbJSON)));\n}\nexport const query = graphql`\n  query($id: String!, $postsFilterRegex: String!, $imagePathRegex: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        index\n        indexCourse\n        title\n        titleSEO\n        titleOG\n        titleTwitter\n        courseCategoryName\n        desc\n        descSEO\n        descOG\n        descTwitter\n        date\n        updated\n        extraReadTimeMin\n        difficultyLevel\n        flagDraft\n        flagMindfuckery\n        flagRewrite\n        flagOffensive\n        flagProfane\n        flagMultilingual\n        flagUnreliably\n        flagPolitical\n        flagCognitohazard\n        flagHidden\n        flagWideLayoutByDefault\n        schemaType\n        mainTag\n        otherTags\n        keywordsSEO\n        banner {\n          childImageSharp {\n            gatsbyImageData(\n\t\t\t\t\t\t\tformats: [JPG, WEBP], \n\t\t\t\t\t\t\tplaceholder: BLURRED, \n\t\t\t\t\t\t\tquality: 100\n\t\t\t\t\t\t)\n          }\n        }\n        imageOG\n        imageAltOG\n        imageTwitter\n        imageAltTwitter\n        canonicalURL\n        slug\n      }\n      body\n      tableOfContents(maxDepth: 3)\n    }\n    allMdx(filter: {frontmatter: {slug: {regex: $postsFilterRegex}}}) {\n      nodes {\n        frontmatter {\n          index\n          slug\n          banner {\n            childImageSharp {\n              gatsbyImageData(\n                formats: [JPG, WEBP],\n                placeholder: BLURRED,\n                quality: 100\n              )\n            }\n          }\n        }\n      }\n    }\n    allPostImages: allFile(\n      filter: { \n        sourceInstanceName: { eq: \"images\" },\n        relativePath: { regex: $imagePathRegex }\n      }\n    ) {\n      nodes {\n        relativePath\n        childImageSharp {\n          gatsbyImageData(\n            layout: CONSTRAINED\n            placeholder: DOMINANT_COLOR\n            quality: 100\n          )\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Latex from 'react-latex-next';\nimport 'katex/dist/katex.min.css'; \n  \nconst L = ({ text }) => {\n  return (\n    <Latex>{text}</Latex>\n  );\n};\nexport default L;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h3","a","span","ul","li","strong","h2","ol","hr","em","_provideComponents","components","Image","id","component","Error","_missingMdxReference","React","Highlight","style","position","href","className","dangerouslySetInnerHTML","__html","Latex","text","alt","path","caption","zoom","wrapper","MDXLayout","TableOfContents","_ref","toc","items","stylesTableOfContents","map","item","index","key","url","onClick","e","handleClick","preventDefault","targetId","replace","targetElement","document","getElementById","scrollIntoView","behavior","block","title","PostTemplate","_ref2","data","mdx","allMdx","allPostImages","children","frontmatter","body","tableOfContents","section","slug","split","sortedPosts","nodes","filter","post","includes","sort","b","currentIndex","findIndex","nextPost","lastPost","trimmedSlug","keyCurrent","exec","basePath","isWideLayout","setIsWideLayout","useState","flagWideLayoutByDefault","isAnimating","setIsAnimating","wordsPerMinute","useEffect","timer","setTimeout","clearTimeout","wordsPerMinuteAdventures","wordsPerMinuteResearch","wordsPerMinuteThoughts","wordCount","RemoveMarkdown","trim","length","readTime","minutes","hours","Math","floor","remainder","formatReadTime","ceil","extraReadTimeMin","notices","flag","flagDraft","flagMindfuckery","flagRewrite","flagOffensive","flagProfane","flagMultilingual","flagUnreliably","flagPolitical","flagCognitohazard","flagHidden","loadedNotices","setLoadedNotices","forEach","_ref3","then","module","prev","concat","_toConsumableArray","default","motion","div","initial","opacity","animate","exit","transition","duration","PostBanner","postNumber","date","updated","difficulty","difficultyLevel","desc","banner","postKey","isMindfuckery","mainTag","display","justifyContent","flexWrap","maxWidth","marginLeft","paddingRight","marginTop","marginBottom","otherTags","tag","stylesTagBadges","margin","textAlign","button","stylesCustomPostLayouts","toggleLayout","whileTap","scale","stylesButtonsCommon","ease","NoticeComponent","indexCourse","PartOfCourseNotice","category","courseCategoryName","ImageContext","Provider","value","images","MDXProvider","PostBottom","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref4","_frontmatter$banner","_frontmatter$banner$c","_frontmatter$banner$c2","_frontmatter$banner$c3","_frontmatter$banner$c4","titleSEO","titleOG","titleTwitter","description","descSEO","descriptionOG","descOG","descriptionTwitter","descTwitter","schemaType","keywords","keywordsSEO","datePublished","dateModified","imageOG","childImageSharp","gatsbyImageData","fallback","src","imageAltOG","imageTwitter","imageAltTwitter","canonicalUrl","canonicalURL","siteUrl","useSiteMetadata","breadcrumbJSON","SEO","type","JSON","stringify"],"sourceRoot":""}