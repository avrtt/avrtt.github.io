{"version":3,"file":"component---src-pages-extras-contact-tsx-6456c8ffa3d0d0d82892.js","mappings":"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","sources":["webpack://avrtt.blog/./src/images/about/photoAbout.jpg","webpack://avrtt.blog/./src/styles/wallets.module.scss","webpack://avrtt.blog/./src/pages/extras/contact.tsx","webpack://avrtt.blog/./src/images/icon.png","webpack://avrtt.blog/./src/components/seo.tsx","webpack://avrtt.blog/./src/hooks/useSiteMetadata.ts","webpack://avrtt.blog/./node_modules/@babel/runtime/helpers/extends.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/photoAbout-59cd1848d1acc7ce5078c52886c751d1.jpg\";","// extracted by mini-css-extract-plugin\nexport var container = \"wallets-module--container--4bc73\";\nexport var currencyName = \"wallets-module--currencyName--0cf9b\";\nexport var donateLink = \"wallets-module--donateLink--41025\";\nexport var elementToFadeInAndOut = \"wallets-module--elementToFadeInAndOut--a3369\";\nexport var fade = \"wallets-module--fade--a59fc\";\nexport var fadeInOut = \"wallets-module--fadeInOut--3c0be\";\nexport var icon = \"wallets-module--icon--6e309\";\nexport var mobileWalletButton = \"wallets-module--mobileWalletButton--7b41d\";\nexport var myImg1 = \"wallets-module--myImg1--8523f\";\nexport var myImg2 = \"wallets-module--myImg2--2b22b\";\nexport var myImg3 = \"wallets-module--myImg3--3cba7\";\nexport var phoneNumber = \"wallets-module--phoneNumber--20f34\";\nexport var qr = \"wallets-module--qr--d5971\";\nexport var tooltip = \"wallets-module--tooltip--ad88b\";\nexport var tooltiptext = \"wallets-module--tooltiptext--37dff\";\nexport var wallet1 = \"wallets-module--wallet1--4b31d\";\nexport var wallet2 = \"wallets-module--wallet2--ee4f1\";\nexport var wallet3 = \"wallets-module--wallet3--f215d\";\nexport var wallet4 = \"wallets-module--wallet4--838a3\";\nexport var wallet5 = \"wallets-module--wallet5--01e38\";\nexport var wallet6 = \"wallets-module--wallet6--02809\";\nexport var wallets = \"wallets-module--wallets--61ccd\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from 'react';\nimport SEO from '../../components/seo'\nimport { Link } from \"gatsby\";\nimport { motion } from 'framer-motion';\nimport M from '../../components/Markdown';\nimport Code from \"../../components/Code\"\nimport * as stylesWallets from \"../../styles/wallets.module.scss\"\n\nconst Contact = () => {\n    return (\n        <motion.div\n            initial={{opacity: 0 }}\n            animate={{opacity: 1 }}\n            exit={{opacity: 0 }}\n            transition={{ duration: 0.15 }}>\n            \n            <div className=\"contactBody\">\n                <M text=\"Questions, corrections, business proposals, creative suggestions, bucket list ideas, offers to travel together, just chatting:\"/>\n                <div className=\"list\">\n                    <M text={`\n- ðŸ“² Telegram (fastest way): **[@averett](https://t.me/averett)**<br/>\n- ðŸ“© Email: **[avrtt@tuta.io](mailto:avrtt@tuta.io)**<br/>\n- ðŸ‘¤ Facebook: **[@vladaverett](https://www.facebook.com/vladaverett)**\n                    `}/>\n                </div>\n                <M text=\"I'm open to making friends with people all over the world.\"/>\n                <p>If you're reaching out about business (i.e. ads and collaboration), please consider reading the <Link to=\"/information_for_business_inquiries\">Information for Business Inquiries</Link>. If you're addressing a question, it may have already been answered <Link to=\"/faq\">here</Link>.</p>\n                <span className=\"desktopOnlySupport\">\n                <br/>\n                <M text=\"---\"/>\n                <br/>\n                </span>\n                Share my opinion on the importance of secure communication? You might find these magic scribbles useful:\n                <ul>\n<li>[m]: <a href=\"https://matrix.to/#/!IkPReSNEepRWuitAYY:matrix.org\">!IkPReSNEepRWuitAYY</a>:matrix.org, <a href=\"https://matrix.to/#/@avrtt:digitalprivacy.diy\">@avrtt</a>:digitalprivacy.diy</li>\n<li className=\"desktopOnlySupport\">Session: <b>05a7b2f8134fc6915ded9df78f9c834a33a9157ce43d8ec40a195db8e3f834f35f</b></li>\n<li className=\"mobileOnlySupport\">Session: <b><motion.button className={stylesWallets.mobileWalletButton} onClick={() => navigator.clipboard.writeText(\"05a7b2f8134fc6915ded9df78f9c834a33a9157ce43d8ec40a195db8e3f834f35f\")} whileTap={{ scale: 0.95 }}>Copy ID</motion.button></b></li>\n                </ul>\n                <div className=\"desktopOnlySupport\">\n                    <Code text='\nmDMEZ1KmZRYJKwYBBAHaRw8BAQdAhDFnbiRMGWqAO1D6AUNdTuVeIQz6zoVlqvd6\nuUx9Pkm0GVZsYWRpc2xhdiA8YXZydHRAdHV0YS5pbz6IkwQTFgoAOxYhBBXEpnmU\nst0uikFNXSbyHQrTGEHhBQJnUqZlAhsDBQsJCAcCAiICBhUKCQgLAgQWAgMBAh4H\nAheAAAoJECbyHQrTGEHhLFkA/jXu0m3p/w9SmCZJhWKI8LlWNoVM25I19Xikq6nB\n9IusAP9MjSkVh9lNTR5m+Zlm9dr08WkQIs/5bi+SnMPmlk51Brg4BGdSpmUSCisG\nAQQBl1UBBQEBB0CdZEZQVxRYpv2McO4cz1z8+VyNy4Yku9V+QIbbmaweIAMBCAeI\neAQYFgoAIBYhBBXEpnmUst0uikFNXSbyHQrTGEHhBQJnUqZlAhsMAAoJECbyHQrT\nGEHhDvYBAIUwUljg/hFxgI71yMaJWFmH1hCBA1mHKYuI7qCSsqdvAQCsvpUjJn8R\noukZqhXuxAdlr5geyAbMceZFWz7aYO8GBw==\n=Jigm' language=\"bash\"/>\n                </div>\n                <span className=\"mobileOnlySupport\">PGP key: </span><a href=\"https://raw.githubusercontent.com/avrtt/pgp-keys/main/general.asc\">general.asc</a> <span className=\"desktopOnlySupport\">|</span><span className=\"mobileOnlySupport\"><br/></span> PGP fingerprint: <b><span className=\"desktopOnlySupport\">15C4 A679 94B2 DD2E 8A41 4D5D 26F2 </span><u>1D0A D318 41E1</u></b>\n                <span className=\"mobileOnlySupport\"><br/><br/></span>\n            </div>\n        </motion.div>\n    );\n};\n\nexport default Contact;\n\nexport const Head = () => (\n  <SEO \n    title=\"Contact - avrtt.blog\"\n    description=\"Find out how to contact Vladislav Averett in multiple ways.\"\n    keywords={[\"contact me\", \"contact page\"]}\n    image={\"\"}\n    canonicalUrl=\"https://avrtt.github.io/contact\"\n    schemaType=\"ContactPage\"\n    \n  />\n)\n","export default __webpack_public_path__ + \"static/icon-6e7479889441613ea062cf3d71374ab6.png\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\"\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\"\nimport icon from \"../images/icon.png\"\nimport photoAbout from \"../images/about/photoAbout.jpg\";\n\nfunction convertToISO(dateString: string): string {\n  const [day, month, year] = dateString.split('.').map(Number);\n  const date = new Date(year, month - 1, day);\n  return date.toISOString();\n}\n\ninterface SchemaProps {\n  schemaType: \"Article\" | \"BlogPosting\" | \"WebPage\" | \"ContactPage\" | \"Course\";\n  title: string;\n  description: string;\n  author: string;\n  photo: string;\n  datePublished?: string;\n  dateModified?: string;\n  url: string;\n  image?: string;\n  siteName: string;\n  siteUrl: string;\n  siteLogo: string;\n  keywords: string[] | string;\n  section: string;\n}\n\nconst generateSchema = ({\n  schemaType,\n  title,\n  description,\n  author,\n  photo,\n  datePublished,\n  dateModified,\n  url,\n  image,\n  siteName,\n  siteUrl,\n  siteLogo,\n  keywords,\n  section,\n}: SchemaProps): Record<string, any> => {\n\n  const baseSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": schemaType,\n    url,\n    description,\n  }\n\n  if (schemaType === \"Article\" || schemaType === \"BlogPosting\") {\n    return {\n      ...baseSchema,\n      headline: title,\n      image: image ? [image] : undefined,\n      datePublished: datePublished || undefined,\n      dateModified: dateModified || datePublished || undefined,\n      articleSection: section,\n      author: {\n        \"@type\": \"Person\",\n        name: author,\n        image: photo,\n        description: \"Traveler, content creator, data scientist, AI researcher, developer, musician.\",\n        url: `${siteUrl}/about`,\n        sameAs: [\n          \"https://youtube.com/@vladaverett\",\n          \"https://instagram.com/avrttv\",\n          \"https://twitter.com/vladaverett\",\n          \"https://tiktok.com/@vladaverett\",\n          \"https://github.com/avrtt\",\n          \"https://facebook.com/vladaverett\",\n          \"https://youtube.com/@avheuristics\",\n          \"https://t.me/venturingforth\",\n          \"https://t.me/avheuristics\",\n          \"https://kaggle.com/lenferdetroud\",\n          \"https://couchsurfing.com/people/averett\",\n          \"https://youtube.com/@noiserett\",\n          \"https://facebook.com/averett.freelance\",\n          \"https://facebook.com/avrttblog\",\n        ],\n      },\n      publisher: {\n        \"@type\": \"Organization\",\n        name: siteName,\n        logo: {\n          \"@type\": \"ImageObject\",\n          url: siteLogo,\n        },\n      },\n      mainEntityOfPage: url,\n      keywords: Array.isArray(keywords) ? keywords.join(\", \") : keywords\n    }\n  }\n\n  return {\n    ...baseSchema,\n    name: title,\n  }\n}\n\ninterface SEOProps {\n  title?: string;\n  titleOG?: string;\n  titleTwitter?: string;\n  description?: string;\n  descriptionOG?: string;\n  descriptionTwitter?: string;\n  schemaType?: \"Article\" | \"BlogPosting\" | \"WebPage\" | \"CollectionPage\" | \"Person\" | \"ContactPage\" | \"Course\";\n  keywords?: string[] | string;\n  datePublished?: string;\n  dateModified?: string;\n  image?: string;\n  siteUrl?: string;\n  siteName?: string;\n  author?: string;\n  twitterUsername?: string;\n  facebookUsername?: string;\n  imageOG?: string;\n  imageAltOG?: string;\n  imageTwitter?: string;\n  imageAltTwitter?: string;\n  imageWidth?: string;\n  imageHeight?: string;\n  canonicalUrl?: string;\n  flagHidden?: boolean;\n  section?: string;\n  mainTag?: string;\n  type?: string; // for og\n  children?: React.ReactNode;\n}\n\nconst SEO: React.FC<SEOProps> = ({\n  title,\n  titleOG,\n  titleTwitter,\n  description,\n  descriptionOG,\n  descriptionTwitter,\n  schemaType = \"WebPage\",\n  keywords,\n  datePublished,\n  dateModified,\n  image,\n  siteUrl,\n  siteName,\n  author,\n  twitterUsername,\n  facebookUsername,\n  imageOG,\n  imageAltOG,\n  imageTwitter,\n  imageAltTwitter,\n  imageWidth,\n  imageHeight,\n  canonicalUrl,\n  flagHidden = false,\n  section,\n  mainTag,\n  type = \"website\", // for og\n  children,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image: defaultImage,\n    siteUrl: defaultSiteUrl,\n    siteName: defaultSiteName,\n    author: defaultAuthor,\n    twitterUsername: defaultTwitterUsername,\n    facebookUsername: defaultFacebookUsername,\n  } = useSiteMetadata()\n\n  // fallbacks\n  const seoTitle = title || defaultTitle\n  const ogTitle = titleOG || seoTitle\n  const twTitle = titleTwitter || seoTitle\n  const seoDescription = description || defaultDescription\n  const ogDescription = descriptionOG || seoDescription\n  const twDescription = descriptionTwitter || seoDescription\n  const seoImage = image\n    ? (image.startsWith(\"http\") ? image : `${defaultSiteUrl}${image}`)\n    : `${defaultSiteUrl}${defaultImage}`\n  const ogImage = imageOG || seoImage\n  const ogImageAlt = imageAltOG || ogDescription\n  const twImage = imageTwitter || seoImage\n  const twImageAlt = imageAltTwitter || twDescription\n  const seoSiteUrl = siteUrl || defaultSiteUrl\n  const seoSiteName = siteName || defaultSiteName\n  const seoCanonical = canonicalUrl || seoSiteUrl\n  const seoAuthor = author || defaultAuthor\n  const seoDatePublished = datePublished ? convertToISO(datePublished) : new Date().toISOString()\n  const seoDateModified = dateModified ? convertToISO(dateModified) : seoDatePublished\n  const seoTwitterUsername = twitterUsername || defaultTwitterUsername\n  const seoFacebookUsername = facebookUsername || defaultFacebookUsername\n  const seoKeywords = keywords || [\"\"]\n  const seoTag = mainTag || \"\"\n  const seoSection = section || \"\"\n  \n  let seoSectionClarified = \"\";\n  if (section === \"adventures\") { \n    seoSectionClarified = \"Travel\";\n  } else if (section === \"research\") { \n    seoSectionClarified = \"Technology\";\n  } else if (section === \"thoughts\") { \n    seoSectionClarified = \"Thoughts\";\n  }\n\n  const schemaJSON = generateSchema({\n    schemaType,\n    title: seoTitle,\n    description: seoDescription,\n    author: seoAuthor,\n    photo: photoAbout,\n    datePublished: seoDatePublished,\n    dateModified: seoDateModified,\n    url: seoCanonical,\n    image: seoImage,\n    siteName: seoSiteName,\n    siteUrl: seoSiteUrl,\n    siteLogo: icon,\n    keywords: seoKeywords,\n    section: seoSection,\n  })\n\n  return (\n    <>\n      <title>{seoTitle}</title>\n      <meta name=\"description\" content={seoDescription} />\n\n      {seoCanonical && <link rel=\"canonical\" href={seoCanonical} />}\n\n      {seoKeywords && (\n        <meta\n          name=\"keywords\"\n          content={Array.isArray(seoKeywords) ? seoKeywords.join(\", \") : seoKeywords}\n        />\n      )}\n\n      <meta property=\"og:title\" content={ogTitle} />\n      <meta property=\"og:description\" content={ogDescription} />\n      <meta property=\"og:updated_time\" content={seoDateModified} />\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:url\" content={seoCanonical} />\n      <meta property=\"og:site_name\" content={seoSiteName} />\n      {ogImage && <meta property=\"og:image\" content={ogImage} />}\n      {imageWidth && <meta property=\"og:image:width\" content={imageWidth} />}\n      {imageHeight && <meta property=\"og:image:height\" content={imageHeight} />}\n      <meta property=\"og:image:alt\" content={ogImageAlt} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      {seoTwitterUsername && (<meta name=\"twitter:creator\" content={seoTwitterUsername} />)}\n      {seoTwitterUsername && (<meta name=\"twitter:site\" content={seoTwitterUsername} />)}\n      <meta name=\"twitter:title\" content={twTitle} />\n      <meta name=\"twitter:description\" content={twDescription} />\n      {twImage && <meta name=\"twitter:image\" content={twImage} />}\n      <meta name=\"twitter:image:alt\" content={twImageAlt} />\n\n      {type === \"article\" && (<meta property=\"article:published_time\" content={seoDatePublished} />)}\n      {type === \"article\" && (<meta property=\"article:modified_time\" content={seoDateModified} />)}\n      {type === \"article\" && seoSectionClarified && (<meta property=\"article:section\" content={seoSectionClarified} />)}\n      {type === \"article\" && seoAuthor && (<meta property=\"article:author\" content={seoAuthor} />)}\n      {type === \"article\" && seoFacebookUsername && (<meta property=\"article:publisher\" content={`https://www.facebook.com/${seoFacebookUsername}`} />)}\n      {type === \"article\" && seoTag && (<meta property=\"article:tag\" content={seoTag} />)}\n      {type === \"article\" && Array.isArray(seoKeywords) && \n        seoKeywords.map((keyword, i) => (\n          <meta key={i} property=\"article:tag\" content={keyword} />\n        ))\n      }\n\n      <meta name=\"robots\" content={flagHidden ? \"noindex, nofollow\" : \"index, follow\"} />\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaJSON)}\n      </script>\n\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport { graphql, useStaticQuery } from \"gatsby\"\n\ninterface SiteMetadata {\n  title: string;\n  description: string;\n  image: string;\n  siteUrl: string;\n  siteName: string;\n  author: string;\n  twitterUsername: string;\n  facebookUsername: string;\n}\n\nexport const useSiteMetadata = (): SiteMetadata => {\n  const { site } = useStaticQuery<{ site: { siteMetadata: SiteMetadata } }>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            image\n            siteUrl\n            siteName\n            author\n            twitterUsername\n            facebookUsername\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}","function _extends() {\n  return module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["currencyName","donateLink","icon","mobileWalletButton","myImg1","myImg2","myImg3","phoneNumber","qr","tooltip","tooltiptext","wallet1","wallet3","wallet6","wallets","Contact","React","motion","div","initial","opacity","animate","exit","transition","duration","className","M","text","Link","to","href","button","stylesWallets","onClick","navigator","clipboard","writeText","whileTap","scale","Code","language","Head","SEO","title","description","keywords","image","canonicalUrl","schemaType","convertToISO","dateString","day","month","year","split","map","Number","Date","toISOString","_ref2","titleOG","titleTwitter","descriptionOG","descriptionTwitter","datePublished","dateModified","siteUrl","siteName","author","twitterUsername","facebookUsername","imageOG","imageAltOG","imageTwitter","imageAltTwitter","imageWidth","imageHeight","flagHidden","section","mainTag","type","children","defaultTitle","defaultDescription","defaultImage","defaultSiteUrl","defaultSiteName","defaultAuthor","defaultTwitterUsername","defaultFacebookUsername","useSiteMetadata","seoTitle","ogTitle","twTitle","seoDescription","ogDescription","twDescription","seoImage","startsWith","ogImage","ogImageAlt","twImage","twImageAlt","seoSiteUrl","seoSiteName","seoCanonical","seoAuthor","seoDatePublished","seoDateModified","seoTwitterUsername","seoFacebookUsername","seoKeywords","seoTag","seoSection","seoSectionClarified","schemaJSON","_ref","photo","url","siteLogo","baseSchema","headline","undefined","articleSection","name","sameAs","publisher","logo","mainEntityOfPage","Array","isArray","join","generateSchema","photoAbout","content","rel","property","keyword","i","key","JSON","stringify","site","useStaticQuery","siteMetadata","_extends","module","exports","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","__esModule","apply"],"sourceRoot":""}