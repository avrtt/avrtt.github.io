import React, { useEffect } from 'react';
import { Helmet } from 'react-helmet'
import { motion } from 'framer-motion';
import { TelegramComments } from 'react-telegram-comments';
import { placesArr } from '../../data/exploration/temp';
import { countriesArr } from '../../data/exploration/temp';
import { mapData } from '../../data/exploration/temp';
import CountryMap from '../../components/CountryMap';
import TravelMap from '../../components/TravelMap';
import M from '../../components/Markdown';
import { AnimationOnScroll } from 'react-animation-on-scroll';
import { explorationLastUpdated } from '../../data/lastUpdated';
import info from "../../images/goals/info.svg";

const TITLE = 'Exploration - avrtt.blog'

const divStyle = {
	width: '100%',
	height: '540px',
	overflow: 'hidden'
}  

const mapFrameStyle = {
	border: 'none',
	width: '100%',
	height: '540px',
	position: 'relative',
	top: '-50px'
}

const posStyle = {
	'font-size': 25,
	'color': '#575656',
	'text-align': 'left',
	'opacity': '0.6'
}

const flagStyle = {
	'font-size': 20,
	'text-align': 'right'
}

const nameStyle = {
	'color': '#8e8e8e',
	'width': '200px'
}

const statStyle = {
	'font-size': 25,
	'text-align': 'center',
}

const spanStyle = {
	'opacity': 0.5
}

const sectionTitleStyle = {
	'font-size': '30px',
	'text-align': 'center',
	'margin-bottom': '0.8em'
}

const infoStyle = {
	'font-weight': 'bold',
	'text-align': 'left',
}

const yearStyle = {
	'color': '#696969',
	'font-weight': 'normal',
	'text-align': 'right',
	'opacity': '0.6'
}

const flags = {
  	AF: "ðŸ‡¦ðŸ‡«",
	AX: "ðŸ‡¦ðŸ‡½",
	AL: "ðŸ‡¦ðŸ‡±",
	DZ: "ðŸ‡©ðŸ‡¿",
	AS: "ðŸ‡¦ðŸ‡¸",
	AD: "ðŸ‡¦ðŸ‡©",
	AO: "ðŸ‡¦ðŸ‡´",
	AI: "ðŸ‡¦ðŸ‡®",
	AQ: "ðŸ‡¦ðŸ‡¶",
	AG: "ðŸ‡¦ðŸ‡¬",
	AR: "ðŸ‡¦ðŸ‡·",
	AM: "ðŸ‡¦ðŸ‡²",
	AW: "ðŸ‡¦ðŸ‡¼",
	AU: "ðŸ‡¦ðŸ‡º",
	AT: "ðŸ‡¦ðŸ‡¹",
	AZ: "ðŸ‡¦ðŸ‡¿",
	BS: "ðŸ‡§ðŸ‡¸",
	BH: "ðŸ‡§ðŸ‡­",
	BD: "ðŸ‡§ðŸ‡©",
	BB: "ðŸ‡§ðŸ‡§",
	BY: "ðŸ‡§ðŸ‡¾",
	BE: "ðŸ‡§ðŸ‡ª",
	BZ: "ðŸ‡§ðŸ‡¿",
	BJ: "ðŸ‡§ðŸ‡¯",
	BM: "ðŸ‡§ðŸ‡²",
	BT: "ðŸ‡§ðŸ‡¹",
	BO: "ðŸ‡§ðŸ‡´",
	BQ: "ðŸ‡§ðŸ‡¶",
	BA: "ðŸ‡§ðŸ‡¦",
	BW: "ðŸ‡§ðŸ‡¼",
	BV: "ðŸ‡§ðŸ‡»",
	BR: "ðŸ‡§ðŸ‡·",
	IO: "ðŸ‡®ðŸ‡´",
	BN: "ðŸ‡§ðŸ‡³",
	BG: "ðŸ‡§ðŸ‡¬",
	BF: "ðŸ‡§ðŸ‡«",
	BI: "ðŸ‡§ðŸ‡®",
	CV: "ðŸ‡¨ðŸ‡»",
	KH: "ðŸ‡°ðŸ‡­",
	CM: "ðŸ‡¨ðŸ‡²",
	CA: "ðŸ‡¨ðŸ‡¦",
	KY: "ðŸ‡°ðŸ‡¾",
	CF: "ðŸ‡¨ðŸ‡«",
	TD: "ðŸ‡¹ðŸ‡©",
	CL: "ðŸ‡¨ðŸ‡±",
	CN: "ðŸ‡¨ðŸ‡³",
	CX: "ðŸ‡¨ðŸ‡½",
	CC: "ðŸ‡¨ðŸ‡¨",
	CO: "ðŸ‡¨ðŸ‡´",
	KM: "ðŸ‡°ðŸ‡²",
	CG: "ðŸ‡¨ðŸ‡¬",
	CD: "ðŸ‡¨ðŸ‡©",
	CK: "ðŸ‡¨ðŸ‡°",
	CR: "ðŸ‡¨ðŸ‡·",
	CI: "ðŸ‡¨ðŸ‡®",
	HR: "ðŸ‡­ðŸ‡·",
	CU: "ðŸ‡¨ðŸ‡º",
	CW: "ðŸ‡¨ðŸ‡¼",
	CY: "ðŸ‡¨ðŸ‡¾",
	CZ: "ðŸ‡¨ðŸ‡¿",
	DK: "ðŸ‡©ðŸ‡°",
	DJ: "ðŸ‡©ðŸ‡¯",
	DM: "ðŸ‡©ðŸ‡²",
	DO: "ðŸ‡©ðŸ‡´",
	EC: "ðŸ‡ªðŸ‡¨",
	EG: "ðŸ‡ªðŸ‡¬",
	SV: "ðŸ‡¸ðŸ‡»",
	GQ: "ðŸ‡¬ðŸ‡¶",
	ER: "ðŸ‡ªðŸ‡·",
	EE: "ðŸ‡ªðŸ‡ª",
	ET: "ðŸ‡ªðŸ‡¹",
	FK: "ðŸ‡«ðŸ‡°",
	FO: "ðŸ‡«ðŸ‡´",
	FJ: "ðŸ‡«ðŸ‡¯",
	FI: "ðŸ‡«ðŸ‡®",
	FR: "ðŸ‡«ðŸ‡·",
	GF: "ðŸ‡¬ðŸ‡«",
	PF: "ðŸ‡µðŸ‡«",
	TF: "ðŸ‡¹ðŸ‡«",
	GA: "ðŸ‡¬ðŸ‡¦",
	GM: "ðŸ‡¬ðŸ‡²",
	GE: "ðŸ‡¬ðŸ‡ª",
	DE: "ðŸ‡©ðŸ‡ª",
	GH: "ðŸ‡¬ðŸ‡­",
	GI: "ðŸ‡¬ðŸ‡®",
	GR: "ðŸ‡¬ðŸ‡·",
	GL: "ðŸ‡¬ðŸ‡±",
	GD: "ðŸ‡¬ðŸ‡©",
	GP: "ðŸ‡¬ðŸ‡µ",
	GU: "ðŸ‡¬ðŸ‡º",
	GT: "ðŸ‡¬ðŸ‡¹",
	GG: "ðŸ‡¬ðŸ‡¬",
	GN: "ðŸ‡¬ðŸ‡³",
	GW: "ðŸ‡¬ðŸ‡¼",
	GY: "ðŸ‡¬ðŸ‡¾",
	HT: "ðŸ‡­ðŸ‡¹",
	HM: "ðŸ‡­ðŸ‡²",
	VA: "ðŸ‡»ðŸ‡¦",
	HN: "ðŸ‡­ðŸ‡³",
	HK: "ðŸ‡­ðŸ‡°",
	HU: "ðŸ‡­ðŸ‡º",
	IS: "ðŸ‡®ðŸ‡¸",
	IN: "ðŸ‡®ðŸ‡³",
	ID: "ðŸ‡®ðŸ‡©",
	IR: "ðŸ‡®ðŸ‡·",
	IQ: "ðŸ‡®ðŸ‡¶",
	IE: "ðŸ‡®ðŸ‡ª",
	IM: "ðŸ‡®ðŸ‡²",
	IL: "ðŸ‡®ðŸ‡±",
	IT: "ðŸ‡®ðŸ‡¹",
	JM: "ðŸ‡¯ðŸ‡²",
	JP: "ðŸ‡¯ðŸ‡µ",
	JE: "ðŸ‡¯ðŸ‡ª",
	JO: "ðŸ‡¯ðŸ‡´",
	KZ: "ðŸ‡°ðŸ‡¿",
	KE: "ðŸ‡°ðŸ‡ª",
	KI: "ðŸ‡°ðŸ‡®",
	KP: "ðŸ‡°ðŸ‡µ",
	KR: "ðŸ‡°ðŸ‡·",
	KW: "ðŸ‡°ðŸ‡¼",
	KG: "ðŸ‡°ðŸ‡¬",
	LA: "ðŸ‡±ðŸ‡¦",
	LV: "ðŸ‡±ðŸ‡»",
	LB: "ðŸ‡±ðŸ‡§",
	LS: "ðŸ‡±ðŸ‡¸",
	LR: "ðŸ‡±ðŸ‡·",
	LY: "ðŸ‡±ðŸ‡¾",
	LI: "ðŸ‡±ðŸ‡®",
	LT: "ðŸ‡±ðŸ‡¹",
	LU: "ðŸ‡±ðŸ‡º",
	MO: "ðŸ‡²ðŸ‡´",
	MK: "ðŸ‡²ðŸ‡°",
	MG: "ðŸ‡²ðŸ‡¬",
	MW: "ðŸ‡²ðŸ‡¼",
	MY: "ðŸ‡²ðŸ‡¾",
	MV: "ðŸ‡²ðŸ‡»",
	ML: "ðŸ‡²ðŸ‡±",
	MT: "ðŸ‡²ðŸ‡¹",
	MH: "ðŸ‡²ðŸ‡­",
	MQ: "ðŸ‡²ðŸ‡¶",
	MR: "ðŸ‡²ðŸ‡·",
	MU: "ðŸ‡²ðŸ‡º",
	YT: "ðŸ‡¾ðŸ‡¹",
	MX: "ðŸ‡²ðŸ‡½",
	FM: "ðŸ‡«ðŸ‡²",
	MD: "ðŸ‡²ðŸ‡©",
	MC: "ðŸ‡²ðŸ‡¨",
	MN: "ðŸ‡²ðŸ‡³",
	ME: "ðŸ‡²ðŸ‡ª",
	MS: "ðŸ‡²ðŸ‡¸",
	MA: "ðŸ‡²ðŸ‡¦",
	MZ: "ðŸ‡²ðŸ‡¿",
	MM: "ðŸ‡²ðŸ‡²",
	NA: "ðŸ‡³ðŸ‡¦",
	NR: "ðŸ‡³ðŸ‡·",
	NP: "ðŸ‡³ðŸ‡µ",
	NL: "ðŸ‡³ðŸ‡±",
	NC: "ðŸ‡³ðŸ‡¨",
	NZ: "ðŸ‡³ðŸ‡¿",
	NI: "ðŸ‡³ðŸ‡®",
	NE: "ðŸ‡³ðŸ‡ª",
	NG: "ðŸ‡³ðŸ‡¬",
	NU: "ðŸ‡³ðŸ‡º",
	NF: "ðŸ‡³ðŸ‡«",
	MP: "ðŸ‡²ðŸ‡µ",
	NO: "ðŸ‡³ðŸ‡´",
	OM: "ðŸ‡´ðŸ‡²",
	PK: "ðŸ‡µðŸ‡°",
	PW: "ðŸ‡µðŸ‡¼",
	PS: "ðŸ‡µðŸ‡¸",
	PA: "ðŸ‡µðŸ‡¦",
	PG: "ðŸ‡µðŸ‡¬",
	PY: "ðŸ‡µðŸ‡¾",
	PE: "ðŸ‡µðŸ‡ª",
	PH: "ðŸ‡µðŸ‡­",
	PN: "ðŸ‡µðŸ‡³",
	PL: "ðŸ‡µðŸ‡±",
	PT: "ðŸ‡µðŸ‡¹",
	PR: "ðŸ‡µðŸ‡·",
	QA: "ðŸ‡¶ðŸ‡¦",
	RE: "ðŸ‡·ðŸ‡ª",
	RO: "ðŸ‡·ðŸ‡´",
	RU: "ðŸ‡·ðŸ‡º",
	RW: "ðŸ‡·ðŸ‡¼",
	BL: "ðŸ‡§ðŸ‡±",
	SH: "ðŸ‡¸ðŸ‡­",
	KN: "ðŸ‡°ðŸ‡³",
	LC: "ðŸ‡±ðŸ‡¨",
	MF: "ðŸ‡²ðŸ‡«",
	PM: "ðŸ‡µðŸ‡²",
	VC: "ðŸ‡»ðŸ‡¨",
	WS: "ðŸ‡¼ðŸ‡¸",
	SM: "ðŸ‡¸ðŸ‡²",
	ST: "ðŸ‡¸ðŸ‡¹",
	SA: "ðŸ‡¸ðŸ‡¦",
	SN: "ðŸ‡¸ðŸ‡³",
	RS: "ðŸ‡·ðŸ‡¸",
	SC: "ðŸ‡¸ðŸ‡¨",
	SL: "ðŸ‡¸ðŸ‡±",
	SG: "ðŸ‡¸ðŸ‡¬",
	SX: "ðŸ‡¸ðŸ‡½",
	SK: "ðŸ‡¸ðŸ‡°",
	SI: "ðŸ‡¸ðŸ‡®",
	SB: "ðŸ‡¸ðŸ‡§",
	SO: "ðŸ‡¸ðŸ‡´",
	ZA: "ðŸ‡¿ðŸ‡¦",
	GS: "ðŸ‡¬ðŸ‡¸",
	SS: "ðŸ‡¸ðŸ‡¸",
	ES: "ðŸ‡ªðŸ‡¸",
	LK: "ðŸ‡±ðŸ‡°",
	SD: "ðŸ‡¸ðŸ‡©",
	SR: "ðŸ‡¸ðŸ‡·",
	SJ: "ðŸ‡¸ðŸ‡¯",
	SZ: "ðŸ‡¸ðŸ‡¿",
	SE: "ðŸ‡¸ðŸ‡ª",
	CH: "ðŸ‡¨ðŸ‡­",
	SY: "ðŸ‡¸ðŸ‡¾",
	TW: "ðŸ‡¹ðŸ‡¼",
	TJ: "ðŸ‡¹ðŸ‡¯",
	TZ: "ðŸ‡¹ðŸ‡¿",
	TH: "ðŸ‡¹ðŸ‡­",
	TL: "ðŸ‡¹ðŸ‡±",
	TG: "ðŸ‡¹ðŸ‡¬",
	TK: "ðŸ‡¹ðŸ‡°",
	TO: "ðŸ‡¹ðŸ‡´",
	TT: "ðŸ‡¹ðŸ‡¹",
	TN: "ðŸ‡¹ðŸ‡³",
	TR: "ðŸ‡¹ðŸ‡·",
	TM: "ðŸ‡¹ðŸ‡²",
	TC: "ðŸ‡¹ðŸ‡¨",
	TV: "ðŸ‡¹ðŸ‡»",
	UG: "ðŸ‡ºðŸ‡¬",
	UA: "ðŸ‡ºðŸ‡¦",
	AE: "ðŸ‡¦ðŸ‡ª",
	GB: "ðŸ‡¬ðŸ‡§",
	US: "ðŸ‡ºðŸ‡¸",
	UM: "ðŸ‡ºðŸ‡²",
	UY: "ðŸ‡ºðŸ‡¾",
	UZ: "ðŸ‡ºðŸ‡¿",
	VU: "ðŸ‡»ðŸ‡º",
	VE: "ðŸ‡»ðŸ‡ª",
	VN: "ðŸ‡»ðŸ‡³",
	VG: "ðŸ‡»ðŸ‡¬",
	VI: "ðŸ‡»ðŸ‡®",
	WF: "ðŸ‡¼ðŸ‡«",
	EH: "ðŸ‡ªðŸ‡­",
	YE: "ðŸ‡¾ðŸ‡ª",
	ZM: "ðŸ‡¿ðŸ‡²",
	ZW: "ðŸ‡¿ðŸ‡¼",
};

const visitedCodes = Object.keys(Object.fromEntries(Object.entries(mapData).filter(([k,v]) => v === 1)));
var flagsCollected = '';
var flagsNotCollected = '';

for (const [k1, v1] of Object.entries(flags)) {
	for (const [k2, v2] of Object.entries(mapData)) {
  		if (v2 === 1 && k1 === k2) {
  	 		 flagsCollected = flagsCollected + v1;
  		}
  		if (v2 === 0 && k1 === k2) {
  	 		 flagsNotCollected = flagsNotCollected + v1;
  		}
	}
}	


const Exploration = () => {
	
	useEffect(() => {
  		window.scrollTo(0, 0)
	}, [])	
	
  return (
    <motion.div
		initial={{ opacity: 0 }}
		animate={{ opacity: 1 }}
		exit={{ opacity: 0 }}
		transition={{ duration: 0.15 }}>
		
		<Helmet>
			<title>{ TITLE }</title>
		</Helmet>
	
		<div class='explorationBody'> 
			<br/>
			<div class="yellowNotice">
				<M text="## ðŸš§ HEADS UP!"/>
				<M text="This page isn't finished or has been hidden for redesign. Content will appear soon."/>
			</div>
		</div> 
    </motion.div>
  );
};
  
export default Exploration;
