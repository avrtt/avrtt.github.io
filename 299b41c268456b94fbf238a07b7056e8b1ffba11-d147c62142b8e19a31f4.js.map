{"version":3,"file":"299b41c268456b94fbf238a07b7056e8b1ffba11-d147c62142b8e19a31f4.js","mappings":"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","sources":["webpack://avrtt.blog/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://avrtt.blog/./src/images/about/photoAbout.jpg","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://avrtt.blog/./node_modules/motion-utils/dist/es/memo.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://avrtt.blog/./node_modules/motion-utils/dist/es/progress.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://avrtt.blog/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://avrtt.blog/./node_modules/motion-utils/dist/es/errors.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://avrtt.blog/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://avrtt.blog/./src/hooks/useSiteMetadata.js","webpack://avrtt.blog/./node_modules/motion-utils/dist/es/noop.mjs","webpack://avrtt.blog/./src/images/icon.png","webpack://avrtt.blog/./src/components/seo.jsx","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://avrtt.blog/./node_modules/framer-motion/dist/es/utils/is-browser.mjs"],"sourcesContent":["import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","export default __webpack_public_path__ + \"static/photoAbout-59cd1848d1acc7ce5078c52886c751d1.jpg\";","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            image\n            siteUrl\n            siteName\n            author\n            twitterUsername\n            facebookUsername\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","export default __webpack_public_path__ + \"static/icon-6e7479889441613ea062cf3d71374ab6.png\";","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\"\nimport icon from \"../images/icon.png\"\nimport photoAbout from \"../images/about/photoAbout.jpg\";\n\nfunction convertToISO(dateString) {\n  const [day, month, year] = dateString.split('.').map(Number);\n  const date = new Date(year, month - 1, day);\n  return date.toISOString();\n}\n\nconst generateSchema = ({\n  schemaType, // \"Article\" for Research, \"BlogPosting\" for Adventures & Thoughts, \"WebPage\" for anything else\n  title,\n  description,\n  author,\n  photo,\n  datePublished,\n  dateModified,\n  url,\n  image,\n  siteName,\n  siteUrl,\n  siteLogo,\n  keywords,\n  section,\n}) => {\n\n  const baseSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": schemaType,\n    url,\n    description,\n  }\n\n  if (schemaType === \"Article\" || schemaType === \"BlogPosting\") {\n    return {\n      ...baseSchema,\n      headline: title,\n      image: image ? [image] : undefined,\n      datePublished: datePublished || undefined,\n      dateModified: dateModified || datePublished || undefined,\n      articleSection: section,\n      author: {\n        \"@type\": \"Person\",\n        name: author,\n        image: photo,\n        description: \"Traveler, content creator, data scientist, AI researcher, developer, musician.\",\n        url: `${siteUrl}/about`,\n        sameAs: [\n          \"https://youtube.com/@vladaverett\",\n          \"https://instagram.com/avrttv\",\n          \"https://twitter.com/vladaverett\",\n          \"https://tiktok.com/@vladaverett\",\n          \"https://github.com/avrtt\",\n          \"https://facebook.com/vladaverett\",\n          \"https://youtube.com/@avheuristics\",\n          \"https://t.me/venturingforth\",\n          \"https://t.me/avheuristics\",\n          \"https://kaggle.com/lenferdetroud\",\n          \"https://couchsurfing.com/people/averett\",\n          \"https://youtube.com/@noiserett\",\n          \"https://facebook.com/averett.freelance\",\n          \"https://facebook.com/avrttblog\",\n        ],\n      },\n      publisher: {\n        \"@type\": \"Organization\",\n        name: siteName,\n        logo: {\n          \"@type\": \"ImageObject\",\n          url: siteLogo,\n        },\n      },\n      mainEntityOfPage: url,\n      keywords: Array.isArray(keywords) ? keywords.join(\", \") : keywords\n    }\n  }\n\n  return {\n    ...baseSchema,\n    name: title,\n  }\n}\n\nconst SEO = ({\n  title,\n  titleOG,\n  titleTwitter,\n  description,\n  descriptionOG,\n  descriptionTwitter,\n  schemaType = \"WebPage\",\n  keywords,\n  datePublished,\n  dateModified,\n  image,\n  siteUrl,\n  siteName,\n  author,\n  twitterUsername,\n  facebookUsername,\n  imageOG,\n  imageAltOG,\n  imageTwitter,\n  imageAltTwitter,\n  imageWidth,\n  imageHeight,\n  canonicalUrl,\n  flagHidden = false,\n  section,\n  mainTag,\n  type = \"website\", // for og\n  children,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image: defaultImage,\n    siteUrl: defaultSiteUrl,\n    siteName: defaultSiteName,\n    author: defaultAuthor,\n    twitterUsername: defaultTwitterUsername,\n    facebookUsername: defaultFacebookUsername,\n  } = useSiteMetadata()\n\n  // fallbacks\n  const seoTitle = title || defaultTitle\n  const ogTitle = titleOG || seoTitle\n  const twTitle = titleTwitter || seoTitle\n  const seoDescription = description || defaultDescription\n  const ogDescription = descriptionOG || seoDescription\n  const twDescription = descriptionTwitter || seoDescription\n  const seoImage = image\n    ? (image.startsWith(\"http\") ? image : `${defaultSiteUrl}${image}`)\n    : `${defaultSiteUrl}${defaultImage}`\n  const ogImage = imageOG || seoImage\n  const ogImageAlt = imageAltOG || ogDescription\n  const twImage = imageTwitter || seoImage\n  const twImageAlt = imageAltTwitter || twDescription\n  const seoSiteUrl = siteUrl || defaultSiteUrl\n  const seoSiteName = siteName || defaultSiteName\n  const seoCanonical = canonicalUrl || seoSiteUrl\n  const seoAuthor = author || defaultAuthor\n  const seoDatePublished = datePublished ? convertToISO(datePublished) : new Date().toISOString()\n  const seoDateModified = dateModified ? convertToISO(dateModified) : seoDatePublished\n  const seoTwitterUsername = twitterUsername || defaultTwitterUsername\n  const seoFacebookUsername = facebookUsername || defaultFacebookUsername\n  const seoKeywords = keywords || [\"\"]\n  const seoTag = mainTag || \"\"\n  const seoSection = section || \"\"\n  \n  var seoSectionClarified\n  if (section === \"adventures\" ) { seoSectionClarified = \"Travel\" } \n  else if (section === \"research\" ) { seoSectionClarified = \"Technology\" } \n  else if (section === \"thoughts\" ) { seoSectionClarified = \"Thoughts\" } \n  else { seoSectionClarified = \"\" }\n\n  const schemaJSON = generateSchema({\n    schemaType,\n    title: seoTitle,\n    description: seoDescription,\n    author: seoAuthor,\n    photo: photoAbout,\n    datePublished: seoDatePublished,\n    dateModified: seoDateModified,\n    url: seoCanonical,\n    image: seoImage,\n    siteName: seoSiteName,\n    siteUrl: seoSiteUrl,\n    siteLogo: icon,\n    keywords: seoKeywords,\n    section: seoSection,\n  })\n\n  return (\n    <>\n      <title>{seoTitle}</title>\n      <meta name=\"description\" content={seoDescription} />\n\n      {seoCanonical && <link rel=\"canonical\" href={seoCanonical} />}\n\n      {seoKeywords && (\n        <meta\n          name=\"keywords\"\n          content={Array.isArray(seoKeywords) ? seoKeywords.join(\", \") : seoKeywords}\n        />\n      )}\n\n      <meta property=\"og:title\" content={ogTitle} />\n      <meta property=\"og:description\" content={ogDescription} />\n      <meta property=\"og:updated_time\" content={seoDateModified} />\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:url\" content={seoCanonical} />\n      <meta property=\"og:site_name\" content={seoSiteName} />\n      {ogImage && <meta property=\"og:image\" content={ogImage} />}\n      {imageWidth && <meta property=\"og:image:width\" content={imageWidth} />}\n      {imageHeight && <meta property=\"og:image:height\" content={imageHeight} />}\n      <meta property=\"og:image:alt\" content={ogImageAlt} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      {seoTwitterUsername && (<meta name=\"twitter:creator\" content={seoTwitterUsername} />)}\n      {seoTwitterUsername && (<meta name=\"twitter:site\" content={seoTwitterUsername} />)}\n      <meta name=\"twitter:title\" content={twTitle} />\n      <meta name=\"twitter:description\" content={twDescription} />\n      {twImage && <meta name=\"twitter:image\" content={twImage} />}\n      <meta name=\"twitter:image:alt\" content={twImageAlt} />\n\n      {type === \"article\" && (<meta property=\"article:published_time\" content={seoDatePublished} />)}\n      {type === \"article\" && (<meta property=\"article:modified_time\" content={seoDateModified} />)}\n      {type === \"article\" && seoSectionClarified && (<meta property=\"article:section\" content={seoSectionClarified} />)}\n      {type === \"article\" && seoAuthor && (<meta property=\"article:author\" content={seoAuthor} />)}\n      {type === \"article\" && seoFacebookUsername && (<meta property=\"article:publisher\" content={\"https://www.facebook.com/\" + seoFacebookUsername} />)}\n      {type === \"article\" && seoTag && (<meta property=\"article:tag\" content={seoTag} />)}\n      {type === \"article\" && Array.isArray(seoKeywords) && \n        seoKeywords.map((keyword, i) => (\n          <meta key={i} property=\"article:tag\" content={keyword} />\n        ))\n      }\n\n      <meta name=\"robots\" content={flagHidden ? \"noindex, nofollow\" : \"index, follow\"} />\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaJSON)}\n      </script>\n\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n"],"names":["schedule","frame","cancel","cancelFrame","state","frameData","steps","frameSteps","requestAnimationFrame","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","keepAlive","immediate","queue","add","delete","process","forEach","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","i","length","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","values","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","result","supportsScrollTimeline","window","ScrollTimeline","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","time","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","seconds","millisecondsToSeconds","milliseconds","transformPropOrder","transformProps","positionalKeys","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","createContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","LayoutGroupContext","L","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","PresenceContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion","useConstant","useSiteMetadata","site","useStaticQuery","siteMetadata","noop","any","convertToISO","dateString","day","month","year","Number","Date","toISOString","_ref2","title","titleOG","titleTwitter","description","descriptionOG","descriptionTwitter","schemaType","keywords","datePublished","dateModified","image","siteUrl","siteName","author","twitterUsername","facebookUsername","imageOG","imageAltOG","imageTwitter","imageAltTwitter","imageWidth","imageHeight","canonicalUrl","flagHidden","section","mainTag","defaultTitle","defaultDescription","defaultImage","defaultSiteUrl","defaultSiteName","defaultAuthor","defaultTwitterUsername","defaultFacebookUsername","seoTitle","ogTitle","twTitle","seoDescription","ogDescription","twDescription","seoImage","ogImage","ogImageAlt","twImage","twImageAlt","seoSiteUrl","seoSiteName","seoCanonical","seoAuthor","seoDatePublished","seoDateModified","seoTwitterUsername","seoFacebookUsername","seoKeywords","seoTag","seoSection","seoSectionClarified","schemaJSON","_ref","photo","url","siteLogo","baseSchema","headline","articleSection","sameAs","publisher","logo","mainEntityOfPage","generateSchema","photoAbout","icon","React","content","rel","href","property","keyword","MotionGlobalConfig","usePresence","useId","isBrowser"],"sourceRoot":""}