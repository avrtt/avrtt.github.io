{"version":3,"file":"23203c3b-a4d3e9bfd20a5ed7fab8.js","mappings":"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","sources":["webpack://avrtt.blog/./src/pages/posts/research/vision_transformers.mdx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/**(intro: a quote, catchphrase, joke, etc.)**/\n/*\n\nUnit 3:\nhttps://huggingface.co/learn/computer-vision-course/en/unit0/welcome/welcome\n[Tutorial 15: Vision Transformers](https://uvadlc-notebooks.readthedocs.io/en/latest/tutorial_notebooks/tutorial15/Vision_Transformer.html)\n\n*/\n/*\n\n1. Motivation\n2. Fundamentals of vision transformers\n- Revisiting the transformer architecture: self-attention, feed-forward layers, residual connections\n- Patch embeddings for images: splitting images into patches and embedding them as tokens\n- Encoder and decoder overview: understanding the core components of ViTs\n- Strengths and challenges: data requirements, interpretability, computational complexity\n- Multi-head self-attention and positional embedding strategies\n- Tokenization nuances in vision vs. language\n- Common training pitfalls (e.g., overfitting, data augmentation, large-scale pretraining needs)\n3. CNN vs. vision transformers\n- Inductive bias in CNNs: local receptive fields, weight sharing, translation invariance\n- Why transformers can work without strong inductive bias: global attention and flexible modeling\n- Scalability and data requirements: large-scale datasets vs. smaller datasets\n- Practical considerations (hardware, dataset size, etc.)\n- Comparison with classical CNN architectures (e.g., ResNet, EfficientNet)\n- Effects of data augmentation and regularization on ViTs vs. CNNs\n4. Using pre-trained vision transformers\n- Publicly available models (Hugging Face Hub, etc.) and model zoos\n- Pros and cons of using pre-trained backbones\n- Transfer learning workflow: from loading weights to final evaluation\n- Freezing layers vs. full fine-tuning: trade-offs and best practices\n- Choosing a learning rate and optimizer: recommendations for stable training\n- Multi-class image classification case study: example dataset and code flow\n- Multi-label image classification case study: handling multiple labels per image\n- Domain adaptation challenges for specialized tasks\n- Hyperparameter tuning guidelines (batch size, weight decay, etc.)\n5. Swin transformer\n- Key highlights and hierarchical design for scalable architectures\n- Shifted window attention mechanism: local windows and shifting strategies\n- Advantages and performance considerations across various benchmarks\n- Extensions: Swin v2 and its improvements\n- Larger parameter counts: trade-offs in memory usage and accuracy\n- SimMIM self-supervised learning: mask-based training strategies\n- Applications in image restoration (SwinIR, Swin2SR)\n6. Convolutional vision transformer (CvT)\n- Recap: How ViT paved the way for hybrid models\n- CNN–transformer hybrid approach: leveraging convolutional layers in attention blocks\n- Convolutional token embedding: embedding patches via CNN-like kernels\n- Convolutional projection for queries, keys, and values: localizing attention operations\n- Architectural highlights (no positional encodings, hierarchical structure)\n- Comparison with other transformer-based backbones\n- Potential for bridging the best of both worlds (local vs. global feature extraction)\n7. Dilated neighborhood attention transformer (DiNAT)\n- Overview and motivation: addressing global context more efficiently\n- Neighborhood attention vs. global attention: balancing locality and range\n- Dilated neighborhood attention for sparse global context\n- Evolution from NAT to DiNA to DiNAT: key incremental improvements\n- Performance and use cases: large images, medical imaging, dense predictions\n8. MobileViT and separable self-attention\n- Challenges on mobile and low-resource devices\n- Original MobileViT: bridging CNNs and transformers for lightweight models\n- The MobileViT block (local + global representations): combining convolution and attention\n- Separable self-attention for O(k) complexity: reducing computations\n- Performance benchmarks on mobile devices: latency, power consumption\n- Model compression and hardware-aware optimizations\n9. Vision transformers for object detection\n- Brief overview of object detection tasks: bounding box regression and classification\n- DETR (DEtection TRansformer): encoder-decoder structure and set-based prediction\n- Bounding box predictions in parallel: removing hand-crafted components\n- Comparison to traditional approaches (e.g., YOLO, Faster R-CNN)\n- Fine-tuning for custom detection tasks: dataset requirements and hyperparameters\n- Extensions of DETR (Deformable DETR, Conditional DETR, etc.)\n10. Vision transformers for segmentation\n- Comparison: CNN-based vs. ViT-based segmentation approaches\n- Capturing global context with attention: benefits for dense prediction\n- Unified segmentation frameworks (MaskFormer, SegFormer, SAM)\n- OneFormer: task-conditioned joint training for semantic and instance segmentation\n- Practical tips for fine-tuning on segmentation datasets (optimizer, data augmentation)\n- Multi-task learning for semantic, instance, and panoptic segmentation\n11. Knowledge distillation with vision transformers\n- What is knowledge distillation?: teacher–student model concept\n- Teacher–student model setup in practice\n- Distillation in practice (distilGPT, distilBERT analogies) for vision tasks\n- Compressing large vision transformers for edge devices: reducing parameters and latency\n- Combining distillation with quantization or pruning: further compression techniques\n12. Future directions and emerging trends\n- Larger-scale pretraining and foundation models for vision\n- Self-supervised learning beyond SimMIM: masked autoencoders, contrastive learning\n- Cross-modal transformers (vision–language, vision–audio)\n- Efficient training techniques: mixed precision, gradient checkpointing, multi-GPU scaling\n- Real-world industrial applications: robotics, medical imaging, autonomous vehicles\n- Adversarial robustness and safety: challenges in attention-based models\n- Integration of transformer-based vision models with large language models (LLMs)\n- Potential breakthroughs and open research questions\n\nOld version:\n\n1. Introduction\n1.1 Motivation for vision transformers\n1.2 Historical context: from NLP to computer vision\n1.3 Organization of this article\n2. Fundamentals of vision transformers\n2.1 Revisiting the transformer architecture\n2.2 Patch embeddings for images\n2.3 Encoder and decoder overview\n2.4 Strengths and challenges\n3. Cnn vs. vision transformers\n3.1 Inductive bias in CNNs\n3.2 Why transformers can work without strong inductive bias\n3.3 Scalability and data requirements\n3.4 Practical considerations (hardware, dataset size, etc.)\n4. Using pre-trained vision transformers\n4.1 Publicly available models (Hugging Face Hub, etc.)\n4.2 Pros and cons of using pre-trained backbones\n4.3 Transfer learning workflow\n4.3.1 Freezing layers vs. full fine-tuning\n4.3.2 Choosing a learning rate and optimizer\n4.4 Multi-class image classification case study\n4.5 Multi-label image classification case study\n5. Swin transformer\n5.1 Key highlights and hierarchical design\n5.2 Shifted window attention mechanism\n5.3 Advantages and performance considerations\n5.4 Extensions: Swin v2 and its improvements\n5.4.1 Larger parameter counts\n5.4.2 SimMIM self-supervised learning\n5.5 Applications in image restoration (SwinIR, Swin2SR)\n6. Convolutional vision transformer (CvT)\n6.1 Recap: How ViT paved the way\n6.2 Cnn–transformer hybrid approach\n6.3 Convolutional token embedding\n6.4 Convolutional projection for queries, keys, and values\n6.5 Architectural highlights (no positional encodings, hierarchical structure)\n6.6 Comparison with other transformer-based backbones\n7. Dilated neighborhood attention transformer (DiNAT)\n7.1 Overview and motivation\n7.2 Neighborhood attention vs. global attention\n7.3 Dilated neighborhood attention for sparse global context\n7.4 Evolution from NAT to DiNA to DiNAT\n7.5 Performance and use cases\n8. MobileViT and separable self-attention\n8.1 Challenges on mobile and low-resource devices\n8.2 Original MobileViT: bridging CNNs and transformers\n8.3 The MobileViT block (local + global representations)\n8.4 Separable self-attention for O(k) complexity\n8.5 Performance benchmarks on mobile devices\n9. Vision transformers for object detection\n9.1 Brief overview of object detection tasks\n9.2 Detr (DEtection TRansformer)\n9.2.1 Encoder-decoder structure\n9.2.2 Bounding box predictions in parallel\n9.2.3 Comparison to traditional approaches (e.g., YOLO)\n9.3 Fine-tuning for custom detection tasks\n10. Vision transformers for segmentation\n10.1 Comparison: CNN-based vs. ViT-based segmentation\n10.2 Capturing global context with attention\n10.3 Unified segmentation frameworks (MaskFormer, SegFormer, SAM)\n10.4 OneFormer: task-conditioned joint training\n10.5 Practical tips for fine-tuning on segmentation datasets\n11. Knowledge distillation with vision transformers\n11.1 What is knowledge distillation?\n11.2 Teacher–student model setup\n11.3 Distillation in practice (distilGPT, distilBERT analogies)\n11.4 Compressing large vision transformers for edge devices\n\n*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Highlight from \"../../../components/Highlight\";\nimport Code from \"../../../components/Code\";\nimport Latex from \"../../../components/Latex\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components), {Image} = _components;\n  if (!Image) _missingMdxReference(\"Image\", true);\n  return React.createElement(React.Fragment, null, \"\\n\", React.createElement(\"br\"), \"\\n\", \"\\n\", \"\\n\", React.createElement(_components.p, null, \"Deep learning has achieved remarkable progress in computer vision over the past decade, mainly propelled by convolutional neural networks (CNNs). Models such as AlexNet, VGG, ResNet, and more advanced architectures like EfficientNet all leverage convolutional layers as the backbone for image feature extraction. Convolutions exploit inductive biases like local connectivity, weight sharing, and translation invariance, which have proven extremely effective for tasks such as image classification, object detection, and image segmentation.\"), \"\\n\", React.createElement(_components.p, null, \"However, the success of transformers in natural language processing (most prominently in the form of the \\\"transformer\\\" architecture used in machine translation, language modeling, etc.) inspired researchers to adapt these architectures to vision problems. The transformer, introduced in \\\"Attention Is All You Need\\\" (Vaswani and gang, NeurIPS 2017), relies heavily on self-attention mechanisms and feed-forward layers without convolutional operations or recurrent structures. Translating this approach to images initially seemed nontrivial, since images are fundamentally 2D structures, while text is typically processed as 1D token sequences. Moreover, early attempts raised concerns about the heavy computational cost of pairwise attention among all image pixels.\"), \"\\n\", React.createElement(_components.p, null, \"Despite these challenges, the notion of global attention — enabling every image patch or \\\"token\\\" to attend to every other patch — offers a compelling proposition for capturing long-range dependencies. Convolutions, although powerful, inherently limit receptive fields (albeit they can expand through deeper layers). Vision transformers (ViTs) achieve this kind of global interaction from the start, with minimal inductive bias. The question then arises: how should an image be transformed into a sequence of tokens? The answer came in the form of patch embeddings, effectively slicing images into smaller patches, flattening them, and embedding them as vectors. This straightforward scheme proved highly effective, especially at scale.\"), \"\\n\", React.createElement(_components.p, null, \"In this article, I explore the world of vision transformers in great detail — covering everything from the fundamental architecture to modern variants like Swin transformer, Convolutional Vision Transformer (CvT), Dilated Neighborhood Attention Transformer (DiNAT), and more. Along the way, I discuss how these models compare to and sometimes integrate with CNNs. I explain the benefits, the known challenges, and provide pointers on how to train these models effectively. The material aims to be deeply theoretical, yet approachable, illustrating core ideas with formulas, code snippets, and references to state-of-the-art research from major ML conferences and journals (e.g., NeurIPS, ICCV, CVPR, ICML, JMLR).\"), \"\\n\", React.createElement(_components.p, null, \"Given that we are now seeing an explosion of attention-based architectures for tasks as diverse as medical imaging, advanced object detection, segmentation, and beyond, it is essential to understand the foundations on which these models are built and how they can be applied and adapted in real-world settings. Let's begin by revisiting the fundamentals of the transformer model and see how it has been adapted from natural language processing (NLP) to computer vision.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"fundamentals-of-vision-transformers\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#fundamentals-of-vision-transformers\",\n    \"aria-label\": \"fundamentals of vision transformers permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"fundamentals of vision transformers\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"revisiting-the-transformer-architecture-self-attention-feed-forward-layers-residual-connections\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#revisiting-the-transformer-architecture-self-attention-feed-forward-layers-residual-connections\",\n    \"aria-label\": \"revisiting the transformer architecture self attention feed forward layers residual connections permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"revisiting the transformer architecture: self-attention, feed-forward layers, residual connections\"), \"\\n\", React.createElement(_components.p, null, \"The transformer was originally designed for sequence-to-sequence tasks in NLP, where each sequence element (typically a subword token) attends to all other tokens in the sequence to capture contextual relationships. The key mechanism at play is \", React.createElement(Highlight, null, \"self-attention\"), \", a computational block that computes attention weights between every pair of tokens in the input sequence. These tokens are first projected into three representations: queries \", React.createElement(Latex, {\n    text: \"\\\\(Q\\\\)\"\n  }), \", keys \", React.createElement(Latex, {\n    text: \"\\\\(K\\\\)\"\n  }), \", and values \", React.createElement(Latex, {\n    text: \"\\\\(V\\\\)\"\n  }), \". Formally, for an input sequence of tokens \", React.createElement(Latex, {\n    text: \"\\\\(X \\\\in \\\\mathbb{R}^{n \\\\times d}\\\\)\"\n  }), \" (where \", React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \" is the sequence length and \", React.createElement(Latex, {\n    text: \"\\\\(d\\\\)\"\n  }), \" is the embedding dimensionality), we have:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nQ = X W_Q, \\\\quad K = X W_K, \\\\quad V = X W_V\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Each of \", React.createElement(Latex, {\n    text: \"\\\\(W_Q, W_K, W_V\\\\)\"\n  }), \" is a learned projection matrix of shape \", React.createElement(Latex, {\n    text: \"\\\\(d \\\\times d'\\\\)\"\n  }), \" for queries, keys, and values, respectively (often \", React.createElement(Latex, {\n    text: \"\\\\(d' = d\\\\)\"\n  }), \", but it can differ). The self-attention output is computed as:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\text{Attention}(Q, K, V) = \\\\text{softmax}\\\\Bigl(\\\\frac{QK^\\\\top}{\\\\sqrt{d'}}\\\\Bigr)V\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The attention distribution indicates how strongly each token should weigh every other token for representation. Transformers typically feature multiple heads of attention (\", React.createElement(Highlight, null, \"multi-head self-attention\"), \"), each projecting queries, keys, and values into different subspaces to capture diverse aspects of relationships. Then these heads are concatenated:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\text{MHA}(Q, K, V) = [\\\\text{head}_1; \\\\text{head}_2; \\\\dots; \\\\text{head}_h] W_O\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where each \", React.createElement(Latex, {\n    text: \"\\\\(head_i = \\\\text{Attention}(Q_i, K_i, V_i)\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(W_O\\\\)\"\n  }), \" is another learned projection. The \", React.createElement(Highlight, null, \"feed-forward layer\"), \" is typically a two-layer MLP with a non-linear activation, applied after the attention block. Finally, residual connections and layer normalization are included at various points in the architecture:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Residual connections help preserve gradients across layers and reduce vanishing or exploding gradient problems.\"), \"\\n\", React.createElement(_components.li, null, \"Layer normalization stabilizes training by normalizing the activations across feature dimensions.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In the standard transformer, the entire architecture can be summarized as repeated blocks of: multi-head self-attention, add & norm, feed-forward, add & norm. In a vision transformer, these same components are reused almost verbatim — although the way the data is tokenized is quite distinct from language use cases.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"patch-embeddings-for-images-splitting-images-into-patches-and-embedding-them-as-tokens\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#patch-embeddings-for-images-splitting-images-into-patches-and-embedding-them-as-tokens\",\n    \"aria-label\": \"patch embeddings for images splitting images into patches and embedding them as tokens permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"patch embeddings for images: splitting images into patches and embedding them as tokens\"), \"\\n\", React.createElement(_components.p, null, \"A crucial step when applying transformers to vision is converting a 2D image into a set of 1D tokens. One canonical approach (introduced in Vision Transformer, Dosovitskiy and gang, ICLR 2021) is to split an image of shape \", React.createElement(Latex, {\n    text: \"\\\\(H \\\\times W \\\\times C\\\\)\"\n  }), \" (height, width, and channels) into non-overlapping patches of size \", React.createElement(Latex, {\n    text: \"\\\\(P \\\\times P\\\\)\"\n  }), \". If we flatten each patch, it becomes a vector of size \", React.createElement(Latex, {\n    text: \"\\\\(P^2 \\\\times C\\\\)\"\n  }), \". Next, we linearly project this flattened patch into an embedding of size \", React.createElement(Latex, {\n    text: \"\\\\(D\\\\)\"\n  }), \". By doing this for all patches, we obtain a set of \", React.createElement(Latex, {\n    text: \"\\\\(\\\\frac{HW}{P^2}\\\\)\"\n  }), \" tokens, each of dimension \", React.createElement(Latex, {\n    text: \"\\\\(D\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, \"To help the model understand the position of each token, positional embeddings (fixed or learned) are usually added to the token embeddings. These can be 1D sinusoidal embeddings, trainable vectors, or other variations. Concretely, if \", React.createElement(Latex, {\n    text: \"\\\\(x_i\\\\)\"\n  }), \" is the embedding of the \", React.createElement(Latex, {\n    text: \"\\\\(i\\\\)\"\n  }), \"-th patch, then the final input token is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nz_i = x_i + e_i\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(e_i\\\\)\"\n  }), \" is the positional embedding for the \", React.createElement(Latex, {\n    text: \"\\\\(i\\\\)\"\n  }), \"-th token. The sequence \", React.createElement(Latex, {\n    text: \"\\\\(z_1, z_2, \\\\dots, z_N\\\\)\"\n  }), \" is then passed into the transformer encoder layers.\"), \"\\n\", React.createElement(_components.p, null, \"A further detail from the original ViT approach is to prepend a \", React.createElement(Highlight, null, \"[class]\"), \" token embedding (just like BERT's [CLS]) at the start of the sequence; the output of this class token is used for classification. Alternatively, one can pool the final patch token embeddings. Different variants exist, but the overarching idea is that the token for classification is learned as a global descriptor that aggregates information from other patches through the attention mechanism.\"), \"\\n\", React.createElement(Image, {\n    alt: \"illustration-of-vit-patch-embedding\",\n    path: \"\",\n    caption: \"A conceptual diagram showing an image split into patches, each flattened and linearly embedded, then combined with position embeddings.\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"encoder-and-decoder-overview-understanding-the-core-components-of-vit\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#encoder-and-decoder-overview-understanding-the-core-components-of-vit\",\n    \"aria-label\": \"encoder and decoder overview understanding the core components of vit permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"encoder and decoder overview: understanding the core components of vit\"), \"\\n\", React.createElement(_components.p, null, \"The original transformer architecture typically has an encoder and a decoder (useful in sequence-to-sequence tasks like machine translation). However, for many vision tasks (like classification), a decoder is not strictly necessary. The standard Vision Transformer (Dosovitskiy and gang) employs only the \", React.createElement(Highlight, null, \"encoder\"), \" portion. That means the pipeline is:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Compute patch embeddings and add positional embeddings.\"), \"\\n\", React.createElement(_components.li, null, \"Pass these embeddings through multiple layers of multi-head self-attention + feed-forward sublayers + residual connections + layer normalization.\"), \"\\n\", React.createElement(_components.li, null, \"Optionally, extract the [class] token output or perform some pooling, feed it to a classification head (often a linear layer), and produce the final class logits.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"For downstream tasks such as image generation, object detection, or segmentation, some modifications or expansions might include decoder-like structures (as we see in DETR for object detection). But for standard classification, the focus is primarily on the encoder.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"strengths-and-challenges-data-requirements-interpretability-computational-complexity\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#strengths-and-challenges-data-requirements-interpretability-computational-complexity\",\n    \"aria-label\": \"strengths and challenges data requirements interpretability computational complexity permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"strengths and challenges: data requirements, interpretability, computational complexity\"), \"\\n\", React.createElement(_components.p, null, \"One of the major benefits of using a transformer-based model in vision is the ability to capture global relationships from the very first layer, thanks to self-attention across patches. Another benefit is the minimal inherent inductive bias — transformers do not enforce local connectivity like convolutions do. This can be a double-edged sword:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Strength\"), \": The model can learn relevant features end-to-end, potentially discovering superior representations if provided with enough data.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Challenge\"), \": Vision transformers often require massive datasets (like ImageNet-21K or JFT-300M) to unlock their full potential. Without enough data or aggressive data augmentation, they may suffer from overfitting.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Interpretability\"), \": The attention maps in transformers can sometimes provide interpretable cues about where the model focuses. However, interpretability remains complex, as attention can be distributed in subtle ways, and not all forms of attention are easily human-interpretable.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Computational complexity\"), \": The standard self-attention mechanism scales quadratically with the number of tokens. For high-resolution images, this can be computationally expensive. Modern variants address this challenge in different ways (e.g., shifting windows, dilating attention, or imposing local constraints).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Overall, if you have large-scale data or use pre-trained models, ViTs can yield performance on par or better than CNNs, often with strong scaling properties as you grow the model size and data. However, these benefits come at the cost of high training requirements and more complexity in implementing efficient operations on GPUs or specialized hardware.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"multi-head-self-attention-and-positional-embedding-strategies\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#multi-head-self-attention-and-positional-embedding-strategies\",\n    \"aria-label\": \"multi head self attention and positional embedding strategies permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"multi-head self-attention and positional embedding strategies\"), \"\\n\", React.createElement(_components.p, null, \"Vision transformers typically preserve the multi-head attention design from the original transformer. Each attention head learns to focus on different aspects or regions of the image. Researchers have experimented with variations on positional embedding for images, such as:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Learned 2D embeddings\"), \" that map row and column coordinates to vectors, then combine them.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Sinusoidal 2D embeddings\"), \" that extend the 1D sinusoidal approach from the original transformer to two dimensions.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Relative positional embeddings\"), \", popular in some advanced variants like the Swin transformer, which model relative distances among patches.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Zero or no explicit embeddings\"), \" in some hierarchical approaches that rely on convolution-like operations (seen in certain hybrid models).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Each approach has trade-offs between simplicity, expressivity, and the capacity for the model to generalize to different input resolutions.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"tokenization-nuances-in-vision-vs-language\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#tokenization-nuances-in-vision-vs-language\",\n    \"aria-label\": \"tokenization nuances in vision vs language permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"tokenization nuances in vision vs. language\"), \"\\n\", React.createElement(_components.p, null, \"In language tasks, tokens often represent subwords or words with natural boundaries. In images, patch boundaries may not always align with semantic boundaries (like edges of objects). A single patch may contain partial or multiple objects or backgrounds. This can make the model's job more challenging — hence the desire for large datasets and robust training. Some approaches incorporate learnable patch splitting or dynamic patch shapes, but the mainstream approach in ViTs remains fixed patch sizes.\"), \"\\n\", React.createElement(_components.p, null, \"Furthermore, \", React.createElement(Highlight, null, \"Token ordering\"), \" can be artificial in images. In text, there is a clear sequence order. In images, the row-major or column-major flattening of patches is an arbitrary linearization. The model must learn the concept of 2D spatial layout through positional embeddings. This is an additional reason why large-scale data or strong regularization might be needed.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"common-training-pitfalls-eg-overfitting-data-augmentation-large-scale-pretraining-needs\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#common-training-pitfalls-eg-overfitting-data-augmentation-large-scale-pretraining-needs\",\n    \"aria-label\": \"common training pitfalls eg overfitting data augmentation large scale pretraining needs permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"common training pitfalls (e.g., overfitting, data augmentation, large-scale pretraining needs)\"), \"\\n\", React.createElement(_components.p, null, \"Researchers have found that training a ViT from scratch on smaller datasets (like ImageNet with 1 million images) can be quite difficult without heavy regularization. Some standard recommendations include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Use large-scale pretraining\"), \" on bigger datasets (ImageNet-21K, JFT-300M, LAION, etc.), then fine-tune on the target dataset.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Adopt strong data augmentation\"), \" such as Mixup, CutMix, RandAugment, or augmentations from the AugReg approach (Steiner and gang, 2021).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Apply knowledge distillation\"), \" from a well-trained CNN teacher (as in DeiT, Touvron and gang, ICML 2021).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Carefully tune hyperparameters\"), \" such as learning rate, weight decay, batch size, and the type of optimizer (AdamW is common for ViTs).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"When these best practices are followed, ViTs can outperform comparable CNNs in various benchmarks, showcasing the potential of attention-based models in vision.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"cnn-vs-vision-transformers\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cnn-vs-vision-transformers\",\n    \"aria-label\": \"cnn vs vision transformers permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"cnn vs. vision transformers\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"inductive-bias-in-cnns-local-receptive-fields-weight-sharing-translation-invariance\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#inductive-bias-in-cnns-local-receptive-fields-weight-sharing-translation-invariance\",\n    \"aria-label\": \"inductive bias in cnns local receptive fields weight sharing translation invariance permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"inductive bias in cnns: local receptive fields, weight sharing, translation invariance\"), \"\\n\", React.createElement(_components.p, null, \"CNNs have dominated computer vision due to their built-in inductive biases:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Local receptive fields\"), \": Convolutions operate over local pixel neighborhoods, which is efficient for capturing edges, textures, and simple shapes.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Weight sharing\"), \": A single filter is applied across different spatial locations, greatly reducing the number of parameters and enabling translation-invariant feature detection.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Translation invariance\"), \": The same pattern recognized at one location can be recognized at another location in the image. This ties well to typical object recognition tasks.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"These biases make CNNs sample-efficient and easier to train on relatively smaller datasets, because the model does not have to learn these fundamental properties from scratch.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"why-transformers-can-work-without-strong-inductive-bias-global-attention-and-flexible-modeling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#why-transformers-can-work-without-strong-inductive-bias-global-attention-and-flexible-modeling\",\n    \"aria-label\": \"why transformers can work without strong inductive bias global attention and flexible modeling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"why transformers can work without strong inductive bias: global attention and flexible modeling\"), \"\\n\", React.createElement(_components.p, null, \"Vision transformers eliminate some of the strict assumptions embedded in CNNs. Rather than forcing local connectivity at each stage, ViTs allow for:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Global attention\"), \": Each patch can potentially attend to any other patch, enabling the model to capture long-range interactions from the beginning.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Flexible receptive fields\"), \": The receptive field can scale up or down depending on the attention patterns.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Learned features\"), \": The model learns how to parse the image by itself, which can lead to emergent forms of invariances or hierarchical structure, but requires significant data.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"While CNNs do well with smaller or medium-sized datasets, ViTs often shine when large-scale data is available or when there is a powerful pretraining scheme. This is the central trade-off: minimal inductive bias with high capacity can yield state-of-the-art performance, but usually at the expense of more data and computational resources.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"scalability-and-data-requirements-large-scale-datasets-vs-smaller-datasets\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#scalability-and-data-requirements-large-scale-datasets-vs-smaller-datasets\",\n    \"aria-label\": \"scalability and data requirements large scale datasets vs smaller datasets permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"scalability and data requirements: large-scale datasets vs. smaller datasets\"), \"\\n\", React.createElement(_components.p, null, \"Compared to CNNs, vision transformers exhibit impressive \", React.createElement(Highlight, null, \"scaling\"), \" behavior. As you increase the model size (e.g., from ViT-Base to ViT-Large or ViT-Huge) and the pretraining dataset size, the performance can keep improving steadily. Meanwhile, CNN performance often saturates faster at large parameter counts. This suggests that in scenarios where:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"You have extremely large labeled or unlabeled image corpora.\"), \"\\n\", React.createElement(_components.li, null, \"You have the computational resources to train giant models.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ViTs can be a compelling choice. However, if you only have a small dataset (e.g., medical images with a few thousand samples), you might see better results using CNNs — or you might resort to heavy regularization, knowledge distillation, or specialized data augmentation to make a ViT work.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"practical-considerations-hardware-dataset-size-etc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#practical-considerations-hardware-dataset-size-etc\",\n    \"aria-label\": \"practical considerations hardware dataset size etc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"practical considerations (hardware, dataset size, etc.)\"), \"\\n\", React.createElement(_components.p, null, \"Vision transformers can be memory-intensive, especially at higher resolutions, because self-attention has \", React.createElement(Latex, {\n    text: \"\\\\(O(n^2)\\\\)\"\n  }), \" complexity in the number of tokens. With high-resolution images, the number of patches \", React.createElement(Latex, {\n    text: \"\\\\(n = \\\\frac{HW}{P^2}\\\\)\"\n  }), \" can be quite large. Some practical considerations include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Using smaller patch sizes\"), \" can increase the length of the token sequence, so a balance is needed. Large patches reduce sequence length but might degrade performance by not capturing fine details.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Gradient checkpointing\"), \" can reduce memory usage at the cost of slightly more computation.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Efficient attention variants\"), \" (like hierarchical windows or local attention) can mitigate the quadratic cost.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Multi-GPU or distributed training\"), \" is often necessary for large-scale training.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"comparison-with-classical-cnn-architectures-eg-resnet-efficientnet\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#comparison-with-classical-cnn-architectures-eg-resnet-efficientnet\",\n    \"aria-label\": \"comparison with classical cnn architectures eg resnet efficientnet permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"comparison with classical cnn architectures (e.g., resnet, efficientnet)\"), \"\\n\", React.createElement(_components.p, null, \"ResNet is a classic backbone for many vision tasks, featuring skip connections and uniform convolutional blocks. EfficientNet introduced a compound scaling approach that systematically increases network depth, width, and resolution. ViTs introduced a new dimension of scaling that does not revolve around convolution kernels but rather the size of the transformer layers, the embedding dimension, and the number of attention heads. Empirically:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"On ImageNet with around 1.2M training images, both a well-tuned ResNet and a well-tuned ViT can achieve strong accuracy, but the ResNet might be easier to train from scratch without specialized techniques.\"), \"\\n\", React.createElement(_components.li, null, \"On extremely large datasets, ViTs can surpass CNN accuracy with fewer heuristics.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"effects-of-data-augmentation-and-regularization-on-vits-vs-cnns\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#effects-of-data-augmentation-and-regularization-on-vits-vs-cnns\",\n    \"aria-label\": \"effects of data augmentation and regularization on vits vs cnns permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"effects of data augmentation and regularization on vits vs. cnns\"), \"\\n\", React.createElement(_components.p, null, \"Data augmentation and regularization can be even more critical for ViTs due to the weaker inductive bias. Techniques like CutMix, Mixup, RandAugment, stochastic depth, label smoothing, and knowledge distillation (DeiT approach) often serve as crucial components of a successful training recipe. These strategies help reduce overfitting and produce stronger generalization. CNNs also benefit from data augmentation, but to a lesser extent, they rely heavily on the built-in local connectivity prior.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"using-pre-trained-vision-transformers\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#using-pre-trained-vision-transformers\",\n    \"aria-label\": \"using pre trained vision transformers permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"using pre-trained vision transformers\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"publicly-available-models-hugging-face-hub-etc-and-model-zoos\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#publicly-available-models-hugging-face-hub-etc-and-model-zoos\",\n    \"aria-label\": \"publicly available models hugging face hub etc and model zoos permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"publicly available models (hugging face hub, etc.) and model zoos\"), \"\\n\", React.createElement(_components.p, null, \"Many pre-trained ViT checkpoints are publicly accessible, for example in the \", React.createElement(Highlight, null, \"Hugging Face Hub\"), \" or the official repositories of major research institutions. There are also frameworks like timm (PyTorch Image Models) by Ross Wightman, which include an extensive model zoo of vision transformers and other state-of-the-art architectures. These resources can drastically speed up your workflow by allowing you to skip the expensive stage of training from scratch on massive datasets.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"pros-and-cons-of-using-pre-trained-backbones\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#pros-and-cons-of-using-pre-trained-backbones\",\n    \"aria-label\": \"pros and cons of using pre trained backbones permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"pros and cons of using pre-trained backbones\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Advantages\"), \":\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Save time and compute resources, especially when the pre-training was done on hundreds of millions of images.\"), \"\\n\", React.createElement(_components.li, null, \"Benefit from the general representations learned on large corpora, leading to higher accuracy and better generalization.\"), \"\\n\", React.createElement(_components.li, null, \"Potentially reduce the risk of overfitting on small or medium-sized datasets.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Drawbacks\"), \":\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Pre-trained weights might not perfectly fit your domain (e.g., medical imaging, satellite imagery), requiring domain adaptation.\"), \"\\n\", React.createElement(_components.li, null, \"Large-scale pre-trained models can be big in size (hundreds of MB or more), posing challenges for memory or deployment.\"), \"\\n\", React.createElement(_components.li, null, \"You might end up relying on high-level features that are suboptimal for specialized tasks, unless you do extensive fine-tuning.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"transfer-learning-workflow-from-loading-weights-to-final-evaluation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#transfer-learning-workflow-from-loading-weights-to-final-evaluation\",\n    \"aria-label\": \"transfer learning workflow from loading weights to final evaluation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"transfer learning workflow: from loading weights to final evaluation\"), \"\\n\", React.createElement(_components.p, null, \"A typical recipe to fine-tune a pre-trained ViT on a new dataset involves:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Load the checkpoint\"), \" from the model zoo or a local checkpoint file.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Replace\"), \" the final classification head to match your dataset's number of classes.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Optionally freeze\"), \" early layers if you have very limited data, although many practitioners prefer to unfreeze all layers eventually.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Train\"), \" with a smaller learning rate initially, then adjust or use a learning rate scheduler.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Evaluate\"), \" on a validation or test set to monitor performance and avoid overfitting.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"freezing-layers-vs-full-fine-tuning-trade-offs-and-best-practices\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#freezing-layers-vs-full-fine-tuning-trade-offs-and-best-practices\",\n    \"aria-label\": \"freezing layers vs full fine tuning trade offs and best practices permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"freezing layers vs. full fine-tuning: trade-offs and best practices\"), \"\\n\", React.createElement(_components.p, null, \"Freezing the lower layers can reduce overfitting when you have few training samples, since it also reduces the effective number of learnable parameters. However, it can limit the adaptability of the model to domain-specific features. As a compromise, you might freeze layers at first and then progressively unfreeze them (a technique sometimes referred to as \", React.createElement(Highlight, null, \"layer-wise learning rate tuning\"), \"). Generally, if you have enough data and computational capacity, a full fine-tuning approach is recommended.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"choosing-a-learning-rate-and-optimizer-recommendations-for-stable-training\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#choosing-a-learning-rate-and-optimizer-recommendations-for-stable-training\",\n    \"aria-label\": \"choosing a learning rate and optimizer recommendations for stable training permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"choosing a learning rate and optimizer: recommendations for stable training\"), \"\\n\", React.createElement(_components.p, null, \"AdamW is currently the most common optimizer for vision transformers, with a typical weight decay around 0.05–0.1. A common learning rate schedule starts relatively low (e.g., 1e-5 or 2e-5) for fine-tuning, then decays over time. Experimentation with warm-up epochs is also beneficial. A small number of warm-up steps (5–10 epochs) at an even lower LR can stabilize early training, especially if the final layers were replaced or re-initialized.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"multi-class-image-classification-case-study-example-dataset-and-code-flow\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#multi-class-image-classification-case-study-example-dataset-and-code-flow\",\n    \"aria-label\": \"multi class image classification case study example dataset and code flow permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"multi-class image classification case study: example dataset and code flow\"), \"\\n\", React.createElement(_components.p, null, \"Below is a simplified PyTorch code snippet illustrating how one might load a pre-trained ViT, replace its classification head, and then train on a hypothetical dataset of 10 classes:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport torch\nimport torch.nn as nn\nfrom torchvision import datasets, transforms\nfrom timm import create_model\n\n# Data transforms\ntrain_transform = transforms.Compose([\n    transforms.RandomResizedCrop(224),\n    transforms.RandomHorizontalFlip(),\n    transforms.ToTensor(),\n    transforms.Normalize((0.5,), (0.5,)),\n])\nval_transform = transforms.Compose([\n    transforms.Resize(256),\n    transforms.CenterCrop(224),\n    transforms.ToTensor(),\n    transforms.Normalize((0.5,), (0.5,)),\n])\n\n# Example dataset\ntrain_dataset = datasets.ImageFolder(\"path_to_train\", transform=train_transform)\nval_dataset = datasets.ImageFolder(\"path_to_val\", transform=val_transform)\n\ntrain_loader = torch.utils.data.DataLoader(train_dataset, batch_size=32, shuffle=True)\nval_loader = torch.utils.data.DataLoader(val_dataset, batch_size=32, shuffle=False)\n\n# Load a pre-trained ViT base model\nmodel = create_model(\"vit_base_patch16_224\", pretrained=True)\nmodel.head = nn.Linear(model.head.in_features, 10)  # 10 classes\n\ncriterion = nn.CrossEntropyLoss()\noptimizer = torch.optim.AdamW(model.parameters(), lr=2e-5, weight_decay=0.05)\n\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\nmodel.to(device)\n\n# Training loop\nfor epoch in range(10):\n    model.train()\n    for images, labels in train_loader:\n        images, labels = images.to(device), labels.to(device)\n        optimizer.zero_grad()\n        outputs = model(images)\n        loss = criterion(outputs, labels)\n        loss.backward()\n        optimizer.step()\n    \n    # Validation\n    model.eval()\n    correct = 0\n    total = 0\n    with torch.no_grad():\n        for images, labels in val_loader:\n            images, labels = images.to(device), labels.to(device)\n            outputs = model(images)\n            _, predicted = torch.max(outputs, 1)\n            total += labels.size(0)\n            correct += (predicted == labels).sum().item()\n    accuracy = 100 * correct / total\n    print(f\"Epoch {epoch}, Validation Accuracy: {accuracy:.2f}%\")\n`\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"multi-label-image-classification-case-study-handling-multiple-labels-per-image\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#multi-label-image-classification-case-study-handling-multiple-labels-per-image\",\n    \"aria-label\": \"multi label image classification case study handling multiple labels per image permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"multi-label image classification case study: handling multiple labels per image\"), \"\\n\", React.createElement(_components.p, null, \"Multi-label classification differs from multi-class classification. Instead of having a single label from a fixed set of classes, each image can have multiple labels. This typically requires a \", React.createElement(Highlight, null, \"sigmoid\"), \" output layer and a \", React.createElement(Highlight, null, \"binary cross-entropy loss\"), \". You might change the final layer to something like:\"), \"\\n\", React.createElement(Code, {\n    text: `\nmodel.head = nn.Sequential(\n    nn.Linear(model.head.in_features, 10),\n    nn.Sigmoid()\n)\ncriterion = nn.BCEWithLogitsLoss()\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"where each of the 10 outputs corresponds to a particular label that can be either 0 or 1. The rest of the process — data loading, training loop, etc. — is broadly similar, except you must account for multiple targets per image and compute accuracy or F1 scores accordingly.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"domain-adaptation-challenges-for-specialized-tasks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#domain-adaptation-challenges-for-specialized-tasks\",\n    \"aria-label\": \"domain adaptation challenges for specialized tasks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"domain adaptation challenges for specialized tasks\"), \"\\n\", React.createElement(_components.p, null, \"When your dataset drastically differs from the images used in pre-training (e.g., medical scans, satellite imagery, IR images), the extracted features might not directly transfer. You may need advanced domain adaptation techniques such as:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Custom data augmentations to match the domain properties.\"), \"\\n\", React.createElement(_components.li, null, \"Fine-tuning all layers more aggressively.\"), \"\\n\", React.createElement(_components.li, null, \"Possibly pre-training from scratch on large domain-specific data if feasible.\"), \"\\n\", React.createElement(_components.li, null, \"Using self-supervised or semi-supervised approaches if labeled data is scarce.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"hyperparameter-tuning-guidelines-batch-size-weight-decay-etc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#hyperparameter-tuning-guidelines-batch-size-weight-decay-etc\",\n    \"aria-label\": \"hyperparameter tuning guidelines batch size weight decay etc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"hyperparameter tuning guidelines (batch size, weight decay, etc.)\"), \"\\n\", React.createElement(_components.p, null, \"For vision transformers, recommended hyperparameters might differ from typical CNN defaults. Some general tips:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Batch size\"), \": Larger batch sizes are often preferred to stabilize training, but memory constraints can limit this. Using gradient accumulation can help.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Weight decay\"), \": Values in the range 0.01 to 0.1 are common. It's good to experiment since it can strongly affect overfitting.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Learning rate schedulers\"), \": Cosine decay or step-based schedules are popular. A brief warm-up period is often beneficial.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Precision\"), \": Mixed-precision training (fp16) can speed up training significantly on GPUs with Tensor Cores.\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"swin-transformer\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#swin-transformer\",\n    \"aria-label\": \"swin transformer permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"swin transformer\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"key-highlights-and-hierarchical-design-for-scalable-architectures\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#key-highlights-and-hierarchical-design-for-scalable-architectures\",\n    \"aria-label\": \"key highlights and hierarchical design for scalable architectures permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"key highlights and hierarchical design for scalable architectures\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(Highlight, null, \"Swin transformer\"), \" (Liu and gang, ICCV 2021) was proposed to address the high computational cost of standard ViTs, which rely on global self-attention. Swin stands for \", React.createElement(Highlight, null, \"Shifted Window\"), \" — it partitions images into small, non-overlapping windows and performs self-attention within each window. Across layers, the windows shift in such a way that patches from different windows can interact, enabling a hierarchical feature representation reminiscent of CNNs.\"), \"\\n\", React.createElement(_components.p, null, \"Swin is often described as a hierarchical vision transformer because it reduces the resolution of feature maps progressively, similar to many CNN backbones (like ResNet). This allows the network to handle high-resolution inputs without the quadratic blow-up in cost.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"shifted-window-attention-mechanism-local-windows-and-shifting-strategies\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#shifted-window-attention-mechanism-local-windows-and-shifting-strategies\",\n    \"aria-label\": \"shifted window attention mechanism local windows and shifting strategies permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"shifted window attention mechanism: local windows and shifting strategies\"), \"\\n\", React.createElement(_components.p, null, \"In standard local attention, the image is divided into local windows, and self-attention is computed only within each window. The \", React.createElement(Highlight, null, \"shifted window\"), \" approach in Swin modifies the window arrangement at alternate layers. Specifically:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"On one layer, the feature map is partitioned into non-overlapping windows.\"), \"\\n\", React.createElement(_components.li, null, \"On the next layer, the windows are shifted by some pixels (like half the window size), which causes different patches to be grouped together in a new arrangement.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This shift ensures that each patch eventually has the chance to interact with patches in neighboring windows, effectively capturing cross-window dependencies. The compute cost is significantly reduced compared to global self-attention. Swin's attention complexity scales \", React.createElement(Latex, {\n    text: \"\\\\(O(h \\\\cdot w \\\\cdot \\\\frac{M^2}{M^2} \\\\cdot d)\\\\)\"\n  }), \" within each window of size \", React.createElement(Latex, {\n    text: \"\\\\(M \\\\times M\\\\)\"\n  }), \" rather than \", React.createElement(Latex, {\n    text: \"\\\\(O(h \\\\cdot w \\\\cdot h \\\\cdot w)\\\\)\"\n  }), \" in naive global self-attention.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"advantages-and-performance-considerations-across-various-benchmarks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#advantages-and-performance-considerations-across-various-benchmarks\",\n    \"aria-label\": \"advantages and performance considerations across various benchmarks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"advantages and performance considerations across various benchmarks\"), \"\\n\", React.createElement(_components.p, null, \"Swin has shown state-of-the-art or near state-of-the-art results on tasks like ImageNet classification, COCO object detection, and ADE20K segmentation. It is also widely used as a backbone in many computer vision toolkits (e.g., MMDetection, Detectron2). Key advantages:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Better scalability to high-resolution inputs.\"), \"\\n\", React.createElement(_components.li, null, \"Hierarchical representations that adapt easily to downstream dense tasks.\"), \"\\n\", React.createElement(_components.li, null, \"Strong performance improvements over the original ViT on smaller or mid-sized datasets.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"extensions-swin-v2-and-its-improvements\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#extensions-swin-v2-and-its-improvements\",\n    \"aria-label\": \"extensions swin v2 and its improvements permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"extensions: swin v2 and its improvements\"), \"\\n\", React.createElement(_components.p, null, \"Swin V2 introduced further refinements, including larger window sizes, improved normalization strategies, and novel initialization schemes that enable stable training of even bigger models (such as 3 billion parameters). These improvements push the envelope of performance on large-scale benchmarks.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"larger-parameter-counts-trade-offs-in-memory-usage-and-accuracy\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#larger-parameter-counts-trade-offs-in-memory-usage-and-accuracy\",\n    \"aria-label\": \"larger parameter counts trade offs in memory usage and accuracy permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"larger parameter counts: trade-offs in memory usage and accuracy\"), \"\\n\", React.createElement(_components.p, null, \"Swin can scale to very large parameter counts (billions of parameters). The trade-off is memory usage and training time. As with other large models, these big Swin variants can require distributed training across many GPUs. If you're working on a resource-constrained setup, smaller variants like Swin-T (tiny) or Swin-S (small) might be more practical.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"simmim-self-supervised-learning-mask-based-training-strategies\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#simmim-self-supervised-learning-mask-based-training-strategies\",\n    \"aria-label\": \"simmim self supervised learning mask based training strategies permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"simmim self-supervised learning: mask-based training strategies\"), \"\\n\", React.createElement(_components.p, null, \"A major area of active research is \", React.createElement(Highlight, null, \"masked image modeling\"), \", an analog to masked language modeling (BERT) in NLP. Swin has a self-supervised extension called \", React.createElement(Highlight, null, \"SimMIM\"), \", which trains the model to reconstruct masked patches in the pixel space. This can help the model learn meaningful features without requiring large-scale labeled data, and then fine-tune for specific tasks.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"applications-in-image-restoration-swinir-swin2sr\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#applications-in-image-restoration-swinir-swin2sr\",\n    \"aria-label\": \"applications in image restoration swinir swin2sr permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"applications in image restoration (swinir, swin2sr)\"), \"\\n\", React.createElement(_components.p, null, \"Other specialized variants of Swin incorporate the same shifted window principle but focus on super-resolution and image restoration tasks. \", React.createElement(Highlight, null, \"SwinIR\"), \" (Liang and gang, ICCV 2021) used a Swin-based architecture to achieve impressive results in super-resolution, denoising, and JPEG artifact removal. \", React.createElement(Highlight, null, \"Swin2SR\"), \" is a more recent iteration with even better performance. This highlights the flexibility of hierarchical transformers for tasks beyond classification and detection.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"convolutional-vision-transformer-cvt\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#convolutional-vision-transformer-cvt\",\n    \"aria-label\": \"convolutional vision transformer cvt permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"convolutional vision transformer (cvt)\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"recap-how-vit-paved-the-way-for-hybrid-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#recap-how-vit-paved-the-way-for-hybrid-models\",\n    \"aria-label\": \"recap how vit paved the way for hybrid models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"recap: how vit paved the way for hybrid models\"), \"\\n\", React.createElement(_components.p, null, \"After the first wave of excitement around pure vision transformers, researchers explored various hybrid architectures to incorporate the best of both worlds: the flexibility and global attention of transformers with the strong inductive bias and efficiency of convolutions. In some early experiments, CNN layers were used to create patch embeddings for ViTs, effectively bridging convolutional feature extraction and transformer-based attention.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"cnntransformer-hybrid-approach-leveraging-convolutional-layers-in-attention-blocks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cnntransformer-hybrid-approach-leveraging-convolutional-layers-in-attention-blocks\",\n    \"aria-label\": \"cnntransformer hybrid approach leveraging convolutional layers in attention blocks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"cnn–transformer hybrid approach: leveraging convolutional layers in attention blocks\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"CvT\"), \" (Wu and gang, ICCV 2021) stands for \", React.createElement(Highlight, null, \"Convolutional Vision Transformer\"), \". It is one such hybrid approach, introducing convolutions both in the token embedding step and within the projection step for queries, keys, and values. By adding these local operations, CvT can:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Capture local structures more efficiently.\"), \"\\n\", React.createElement(_components.li, null, \"Reduce the parameter count by sharing weights in a CNN-like manner.\"), \"\\n\", React.createElement(_components.li, null, \"Achieve stable training with less data than a pure ViT.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"convolutional-token-embedding-embedding-patches-via-cnn-like-kernels\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#convolutional-token-embedding-embedding-patches-via-cnn-like-kernels\",\n    \"aria-label\": \"convolutional token embedding embedding patches via cnn like kernels permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"convolutional token embedding: embedding patches via cnn-like kernels\"), \"\\n\", React.createElement(_components.p, null, \"Instead of using a simple linear projection of flattened patches, CvT employs a CNN-based token embedding. For example, a single 2D convolution layer with a certain stride can be used to reduce the spatial dimension and produce a feature map that is then flattened into tokens. This approach helps the model better capture low-level visual cues right from the start.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"convolutional-projection-for-queries-keys-and-values-localizing-attention-operations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#convolutional-projection-for-queries-keys-and-values-localizing-attention-operations\",\n    \"aria-label\": \"convolutional projection for queries keys and values localizing attention operations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"convolutional projection for queries, keys, and values: localizing attention operations\"), \"\\n\", React.createElement(_components.p, null, \"CvT goes further by applying depthwise separable convolutions to the queries, keys, and values. This step introduces a local receptive field in the attention mechanism, effectively combining local attention with global attention. It also reduces the computational overhead. The result is a series of \", React.createElement(Highlight, null, \"CvT blocks\"), \" that are reminiscent of standard transformer blocks but incorporate convolution at key steps.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"architectural-highlights-no-positional-encodings-hierarchical-structure\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#architectural-highlights-no-positional-encodings-hierarchical-structure\",\n    \"aria-label\": \"architectural highlights no positional encodings hierarchical structure permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"architectural highlights (no positional encodings, hierarchical structure)\"), \"\\n\", React.createElement(_components.p, null, \"Because convolutions already incorporate some positional information (the arrangement of kernel filters), CvT can dispense with explicit positional embeddings. The architecture is also \", React.createElement(Highlight, null, \"hierarchical\"), \", reducing the spatial dimensions as we move through the layers, very much like a traditional CNN. This hierarchical design typically ends in a global average pooling (or a class token) before the final classification layer.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"comparison-with-other-transformer-based-backbones\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#comparison-with-other-transformer-based-backbones\",\n    \"aria-label\": \"comparison with other transformer based backbones permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"comparison with other transformer-based backbones\"), \"\\n\", React.createElement(_components.p, null, \"CvT competes with other backbones like Swin, PVT (Pyramid Vision Transformer), and hierarchical ViT variants. Depending on the benchmark or task, the best choice can vary. CvT's main selling points include simpler hierarchical design, CNN-like tokenization, and potentially better efficiency than a pure ViT at moderate image sizes.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"potential-for-bridging-the-best-of-both-worlds-local-vs-global-feature-extraction\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#potential-for-bridging-the-best-of-both-worlds-local-vs-global-feature-extraction\",\n    \"aria-label\": \"potential for bridging the best of both worlds local vs global feature extraction permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"potential for bridging the best of both worlds (local vs. global feature extraction)\"), \"\\n\", React.createElement(_components.p, null, \"In essence, CvT is part of a broader trend of \", React.createElement(Highlight, null, \"rethinking attention\"), \" to strike a balance between:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Local interactions: cheaply captured by convolution or local attention.\"), \"\\n\", React.createElement(_components.li, null, \"Global interactions: captured by the self-attention mechanism.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"By combining local biases with the flexible attention mechanism, these hybrid architectures often offer improved performance and efficiency.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"dilated-neighborhood-attention-transformer-dinat\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#dilated-neighborhood-attention-transformer-dinat\",\n    \"aria-label\": \"dilated neighborhood attention transformer dinat permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"dilated neighborhood attention transformer (dinat)\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"overview-and-motivation-addressing-global-context-more-efficiently\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#overview-and-motivation-addressing-global-context-more-efficiently\",\n    \"aria-label\": \"overview and motivation addressing global context more efficiently permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"overview and motivation: addressing global context more efficiently\"), \"\\n\", React.createElement(_components.p, null, \"One limitation of local window-based approaches like Swin is that patches outside the window can only indirectly interact after multiple layers. \", React.createElement(Highlight, null, \"Dilated Neighborhood Attention (DiNA)\"), \" and the \", React.createElement(Highlight, null, \"Dilated Neighborhood Attention Transformer (DiNAT)\"), \" were proposed to cover a broader receptive field without paying the full cost of global attention. Dilated attention introduces spacing between attended patches, similar to dilated convolutions.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"neighborhood-attention-vs-global-attention-balancing-locality-and-range\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#neighborhood-attention-vs-global-attention-balancing-locality-and-range\",\n    \"aria-label\": \"neighborhood attention vs global attention balancing locality and range permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"neighborhood attention vs. global attention: balancing locality and range\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Neighborhood Attention (NA)\"), \" (Hassani and gang, 2022) processes a local region around each patch for attention. Instead of every patch attending to every other patch, we focus on a neighborhood. This reduces complexity from \", React.createElement(Latex, {\n    text: \"\\\\(O(n^2)\\\\)\"\n  }), \" to \", React.createElement(Latex, {\n    text: \"\\\\(O(n \\\\cdot k)\\\\)\"\n  }), \", where \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \" is the neighborhood size (far smaller than \", React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \"). However, a purely local region might still hamper capturing global interactions quickly. Hence, \", React.createElement(Highlight, null, \"dilated\"), \" attention expands this neighborhood by skipping patches in between, effectively letting each patch attend to a sparser but more globally spread set of patches.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"dilated-neighborhood-attention-for-sparse-global-context\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#dilated-neighborhood-attention-for-sparse-global-context\",\n    \"aria-label\": \"dilated neighborhood attention for sparse global context permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"dilated neighborhood attention for sparse global context\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Dilated NA\"), \" can be visualized as taking a local region around a patch but skipping certain patches at a defined rate — like the dilation factor in dilated convolutions. This approach can capture global structure faster without the overhead of full global attention. Meanwhile, it remains more efficient than naive global self-attention.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"evolution-from-nat-to-dina-to-dinat-key-incremental-improvements\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#evolution-from-nat-to-dina-to-dinat-key-incremental-improvements\",\n    \"aria-label\": \"evolution from nat to dina to dinat key incremental improvements permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"evolution from nat to dina to dinat: key incremental improvements\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"NAT\"), \" introduced the concept of neighborhood attention with a localized approach.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"DiNA\"), \" extended NAT with dilated attention, covering more context.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"DiNAT\"), \" further refines these concepts into a full hierarchical transformer backbone for classification, detection, or segmentation tasks.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"performance-and-use-cases-large-images-medical-imaging-dense-predictions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#performance-and-use-cases-large-images-medical-imaging-dense-predictions\",\n    \"aria-label\": \"performance and use cases large images medical imaging dense predictions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"performance and use cases: large images, medical imaging, dense predictions\"), \"\\n\", React.createElement(_components.p, null, \"DiNAT can handle large images more efficiently than a pure ViT or Swin, making it suitable for high-resolution tasks like medical imaging or satellite imagery, where patch-based methods might falter due to memory constraints. It also excels in tasks requiring dense predictions (segmentation, detection), because local but well-dilated attention can capture both near and far context.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"mobilevit-and-separable-self-attention\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#mobilevit-and-separable-self-attention\",\n    \"aria-label\": \"mobilevit and separable self attention permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"mobilevit and separable self-attention\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"challenges-on-mobile-and-low-resource-devices\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#challenges-on-mobile-and-low-resource-devices\",\n    \"aria-label\": \"challenges on mobile and low resource devices permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"challenges on mobile and low-resource devices\"), \"\\n\", React.createElement(_components.p, null, \"Although vision transformers have shown remarkable performance, deploying them on mobile or edge devices is challenging. The attention mechanism can be computationally expensive, and large model sizes can exceed memory constraints. There is thus a strong need for specialized, lightweight transformer designs.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"original-mobilevit-bridging-cnns-and-transformers-for-lightweight-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#original-mobilevit-bridging-cnns-and-transformers-for-lightweight-models\",\n    \"aria-label\": \"original mobilevit bridging cnns and transformers for lightweight models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"original mobilevit: bridging cnns and transformers for lightweight models\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"MobileViT\"), \" (Mehta & Rastegari, ICLR 2022) was introduced to adapt transformer blocks for mobile environments. It uses Inverted Residual Blocks (popularized by MobileNetV2) combined with lightweight transformer layers that operate on smaller feature maps. The key idea is to fuse \", React.createElement(Highlight, null, \"local representations\"), \" (from convolutions) with \", React.createElement(Highlight, null, \"global representations\"), \" (from attention), but keep the overall parameter count and FLOPs low.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"the-mobilevit-block-local--global-representations-combining-convolution-and-attention\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#the-mobilevit-block-local--global-representations-combining-convolution-and-attention\",\n    \"aria-label\": \"the mobilevit block local  global representations combining convolution and attention permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"the mobilevit block (local + global representations): combining convolution and attention\"), \"\\n\", React.createElement(_components.p, null, \"A \", React.createElement(Highlight, null, \"MobileViT block\"), \" typically has:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"A convolutional layer (or layers) to extract local features and reduce or expand the channel dimension.\"), \"\\n\", React.createElement(_components.li, null, \"A small transformer block (often operating on unfolded or flattened feature maps) to capture global interactions.\"), \"\\n\", React.createElement(_components.li, null, \"Another convolutional layer to merge the output with the local path.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This synergy allows the model to retain the efficiency of separable convolutions while benefiting from a global receptive field in the attention sub-block.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"separable-self-attention-for-ok-complexity-reducing-computations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#separable-self-attention-for-ok-complexity-reducing-computations\",\n    \"aria-label\": \"separable self attention for ok complexity reducing computations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"separable self-attention for o(k) complexity: reducing computations\"), \"\\n\", React.createElement(_components.p, null, \"Various approaches to \", React.createElement(Highlight, null, \"separable self-attention\"), \" have emerged. The notion is to factorize the attention computation along spatial and channel dimensions, or to break down the query–key–value interactions into more efficient forms. By doing so, the complexity can be cut down significantly, approaching linear in the number of patches or tokens, rather than quadratic. This is especially relevant when designing \", React.createElement(Highlight, null, \"mobile-friendly\"), \" or \", React.createElement(Highlight, null, \"low-latency\"), \" architectures.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"performance-benchmarks-on-mobile-devices-latency-power-consumption\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#performance-benchmarks-on-mobile-devices-latency-power-consumption\",\n    \"aria-label\": \"performance benchmarks on mobile devices latency power consumption permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"performance benchmarks on mobile devices: latency, power consumption\"), \"\\n\", React.createElement(_components.p, null, \"MobileViT outperforms many conventional CNN-based mobile models (like MobileNetV3 or ShuffleNet) in terms of accuracy–FLOPs trade-off. However, actual latency and power consumption must also be measured on target hardware, since theoretical FLOPs might not perfectly correlate with real-world performance. The model can still become bottlenecked by memory bandwidth or suboptimal kernel implementations for attention layers.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"model-compression-and-hardware-aware-optimizations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#model-compression-and-hardware-aware-optimizations\",\n    \"aria-label\": \"model compression and hardware aware optimizations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"model compression and hardware-aware optimizations\"), \"\\n\", React.createElement(_components.p, null, \"To further tailor MobileViT for resource-limited environments, additional compression techniques can be applied:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Pruning\"), \": Remove unimportant heads, tokens, or channels.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Quantization\"), \": Use lower precision (INT8, for instance) to reduce memory usage.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Knowledge distillation\"), \": Distill from a larger teacher model to a lightweight student.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Hardware-aware neural architecture search (NAS) might also identify the best trade-offs for a particular device (smartphone, microcontroller, etc.).\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"vision-transformers-for-object-detection\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#vision-transformers-for-object-detection\",\n    \"aria-label\": \"vision transformers for object detection permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"vision transformers for object detection\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"brief-overview-of-object-detection-tasks-bounding-box-regression-and-classification\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#brief-overview-of-object-detection-tasks-bounding-box-regression-and-classification\",\n    \"aria-label\": \"brief overview of object detection tasks bounding box regression and classification permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"brief overview of object detection tasks: bounding box regression and classification\"), \"\\n\", React.createElement(_components.p, null, \"Object detection requires assigning bounding boxes to objects in an image and classifying those objects. Traditional methods rely on region proposals (R-CNN family), single-stage detectors (YOLO), or anchor-based approaches (RetinaNet). Transformers bring a novel perspective to detection by removing the need for many hand-crafted components.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"detr-detection-transformer-encoderdecoder-structure-and-set-based-prediction\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#detr-detection-transformer-encoderdecoder-structure-and-set-based-prediction\",\n    \"aria-label\": \"detr detection transformer encoderdecoder structure and set based prediction permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"detr (detection transformer): encoder–decoder structure and set-based prediction\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"DETR\"), \" (Carion and gang, ECCV 2020) was the pioneering approach to use a transformer for detection. It processes an image with a CNN backbone (e.g., ResNet), then flattens the feature map into a sequence. A transformer \", React.createElement(Highlight, null, \"encoder\"), \" refines this sequence, and a transformer \", React.createElement(Highlight, null, \"decoder\"), \" attends to it with learnable \\\"object queries\\\" to predict bounding boxes and classes. One distinctive aspect is the \", React.createElement(Highlight, null, \"set-based prediction\"), \" loss, where the final predictions are treated as a set, and a bipartite matching cost assigns predictions to ground-truth bounding boxes.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"bounding-box-predictions-in-parallel-removing-hand-crafted-components\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#bounding-box-predictions-in-parallel-removing-hand-crafted-components\",\n    \"aria-label\": \"bounding box predictions in parallel removing hand crafted components permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"bounding box predictions in parallel: removing hand-crafted components\"), \"\\n\", React.createElement(_components.p, null, \"By leveraging the transformer architecture, DETR removes the need for anchors, region proposals, or non-maximum suppression. All bounding boxes are predicted in parallel. Although DETR can be slower to converge and less effective for small objects, subsequent variants (like \", React.createElement(Highlight, null, \"Deformable DETR\"), \" or \", React.createElement(Highlight, null, \"Conditional DETR\"), \") address these issues.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"comparison-to-traditional-approaches-eg-yolo-faster-r-cnn\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#comparison-to-traditional-approaches-eg-yolo-faster-r-cnn\",\n    \"aria-label\": \"comparison to traditional approaches eg yolo faster r cnn permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"comparison to traditional approaches (e.g., yolo, faster r-cnn)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"YOLO\"), \" (You Only Look Once) is a one-stage approach with anchor boxes, while \", React.createElement(Highlight, null, \"Faster R-CNN\"), \" is a two-stage approach with region proposals. Both rely heavily on CNN backbones and hand-designed components for bounding box generation or refinement. DETR uses a more direct approach, but typically needs more epochs to converge. Its performance is competitive, especially with improvements in the form of \", React.createElement(Highlight, null, \"Deformable DETR\"), \", which reduces memory usage and speeds up training by focusing attention on relevant spatial regions.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"fine-tuning-for-custom-detection-tasks-dataset-requirements-and-hyperparameters\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#fine-tuning-for-custom-detection-tasks-dataset-requirements-and-hyperparameters\",\n    \"aria-label\": \"fine tuning for custom detection tasks dataset requirements and hyperparameters permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"fine-tuning for custom detection tasks: dataset requirements and hyperparameters\"), \"\\n\", React.createElement(_components.p, null, \"When using DETR or its variants, a few points to remember:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Pretraining a CNN backbone\"), \" or a hybrid CNN–transformer backbone is often beneficial.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Training time\"), \" can be high. Convergence is slower compared to methods like Faster R-CNN, so large batch sizes and many epochs might be required.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Hyperparameters\"), \" such as the number of object queries, learning rate, and matching cost components can significantly affect performance.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Data augmentation\"), \" for object detection (random crops, random scale, color jittering) is crucial to improve robustness.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"extensions-of-detr-deformable-detr-conditional-detr-etc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#extensions-of-detr-deformable-detr-conditional-detr-etc\",\n    \"aria-label\": \"extensions of detr deformable detr conditional detr etc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"extensions of detr (deformable detr, conditional detr, etc.)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Deformable DETR\"), \" (Zhu and gang, ICLR 2021) introduces multi-scale deformable attention, significantly speeding up training and improving small object detection.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Conditional DETR\"), \" modifies how queries attend to encoded features, further stabilizing training and boosting performance.\"), \"\\n\", React.createElement(_components.li, null, \"Numerous other variants experiment with hierarchical backbones (like Swin or CvT) or incorporate extra modules (like bounding box refinements).\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"vision-transformers-for-segmentation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#vision-transformers-for-segmentation\",\n    \"aria-label\": \"vision transformers for segmentation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"vision transformers for segmentation\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"comparison-cnn-based-vs-vit-based-segmentation-approaches\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#comparison-cnn-based-vs-vit-based-segmentation-approaches\",\n    \"aria-label\": \"comparison cnn based vs vit based segmentation approaches permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"comparison: cnn-based vs. vit-based segmentation approaches\"), \"\\n\", React.createElement(_components.p, null, \"Image segmentation tasks — semantic, instance, or panoptic — require classifying each pixel in an image. CNN-based methods (e.g., FCN, U-Net, DeepLab) leverage dilated convolutions or encoder–decoder designs to generate dense predictions. Vision transformers handle segmentation by using attention over flattened patches or tokens. This can capture richer global context but also demands careful handling of upsampling or patch reshaping in the decoder stage.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"capturing-global-context-with-attention-benefits-for-dense-prediction\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#capturing-global-context-with-attention-benefits-for-dense-prediction\",\n    \"aria-label\": \"capturing global context with attention benefits for dense prediction permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"capturing global context with attention: benefits for dense prediction\"), \"\\n\", React.createElement(_components.p, null, \"One of the biggest advantages of attention-based segmentation is the capacity to handle interactions among distant pixels. This global view can improve boundary delineation and reduce confusion among classes that appear at different scales.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"unified-segmentation-frameworks-maskformer-segformer-sam\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#unified-segmentation-frameworks-maskformer-segformer-sam\",\n    \"aria-label\": \"unified segmentation frameworks maskformer segformer sam permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"unified segmentation frameworks (maskformer, segformer, sam)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"MaskFormer\"), \" (Cheng and gang, CVPR 2021) unifies semantic and instance segmentation by predicting a set of masks and associated class labels.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"SegFormer\"), \" (Xie and gang, NeurIPS 2021) is a purely transformer-based approach with an encoder that outputs multi-scale features, then merges them for segmentation.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"SAM (Segment Anything Model)\"), \" (Kirillov and gang, 2023) introduced a highly generic segmentation approach that can handle a wide variety of objects and tasks with strong zero-shot capabilities, using a powerful vision transformer backbone.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"oneformer-task-conditioned-joint-training-for-semantic-and-instance-segmentation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#oneformer-task-conditioned-joint-training-for-semantic-and-instance-segmentation\",\n    \"aria-label\": \"oneformer task conditioned joint training for semantic and instance segmentation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"oneformer: task-conditioned joint training for semantic and instance segmentation\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"OneFormer\"), \" (Li and gang, 2022) extends the idea by training a single model for multiple segmentation tasks simultaneously. It uses a \", React.createElement(Highlight, null, \"task prompt\"), \" to condition the model on whether it's performing semantic, instance, or panoptic segmentation. The backbone can be a strong vision transformer, making it flexible for multi-task scenarios.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"practical-tips-for-fine-tuning-on-segmentation-datasets-optimizer-data-augmentation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#practical-tips-for-fine-tuning-on-segmentation-datasets-optimizer-data-augmentation\",\n    \"aria-label\": \"practical tips for fine tuning on segmentation datasets optimizer data augmentation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"practical tips for fine-tuning on segmentation datasets (optimizer, data augmentation)\"), \"\\n\", React.createElement(_components.p, null, \"Segmentation tasks often rely on specialized data augmentation: random scaling, cropping, flipping, and color jittering. The choice of optimizer (AdamW or SGD with momentum) can depend on your architecture. The learning rate might need to be carefully scaled if you're using a pre-trained backbone (like a Swin or ViT) to avoid catastrophic forgetting of learned features. Techniques like \", React.createElement(Highlight, null, \"sliding window inference\"), \" or \", React.createElement(Highlight, null, \"mixed precision\"), \" might be necessary for large images.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"multi-task-learning-for-semantic-instance-and-panoptic-segmentation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#multi-task-learning-for-semantic-instance-and-panoptic-segmentation\",\n    \"aria-label\": \"multi task learning for semantic instance and panoptic segmentation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"multi-task learning for semantic, instance, and panoptic segmentation\"), \"\\n\", React.createElement(_components.p, null, \"One advantage of attention-based models is that they can unify tasks that require different types of supervision. With appropriate architectural additions and multi-task losses, a single transformer-based model can handle multiple segmentation paradigms. This synergy can sometimes improve performance across all tasks by sharing underlying representations.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"knowledge-distillation-with-vision-transformers\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#knowledge-distillation-with-vision-transformers\",\n    \"aria-label\": \"knowledge distillation with vision transformers permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"knowledge distillation with vision transformers\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"what-is-knowledge-distillation-teacherstudent-model-concept\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#what-is-knowledge-distillation-teacherstudent-model-concept\",\n    \"aria-label\": \"what is knowledge distillation teacherstudent model concept permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"what is knowledge distillation?: teacher–student model concept\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Knowledge distillation\"), \" is a technique where a large (teacher) model's outputs or intermediate representations are used to guide the training of a smaller (student) model. This technique was originally popularized in the context of compressing large CNN-based models, but it also applies to transformers.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"teacherstudent-model-setup-in-practice\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#teacherstudent-model-setup-in-practice\",\n    \"aria-label\": \"teacherstudent model setup in practice permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"teacher–student model setup in practice\"), \"\\n\", React.createElement(_components.p, null, \"A typical pipeline for distillation includes:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Pretraining\"), \" the teacher model on a large dataset.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Forwarding\"), \" a batch of images through the teacher, collecting the logits or sometimes internal feature maps.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Forwarding\"), \" the same batch through the student model.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Computing a loss\"), \" (KL divergence, MSE) between the teacher outputs and the student outputs, possibly combined with a standard task loss.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"distillation-in-practice-distilgpt-distilbert-analogies-for-vision-tasks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#distillation-in-practice-distilgpt-distilbert-analogies-for-vision-tasks\",\n    \"aria-label\": \"distillation in practice distilgpt distilbert analogies for vision tasks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"distillation in practice (distilgpt, distilbert analogies) for vision tasks\"), \"\\n\", React.createElement(_components.p, null, \"Just as \", React.createElement(Highlight, null, \"DistilBERT\"), \" or \", React.createElement(Highlight, null, \"DistilGPT\"), \" have shrunk large language models, distillation can reduce the size of vision transformers while retaining much of their performance. \", React.createElement(Highlight, null, \"DeiT\"), \" famously used distillation from a CNN teacher to train a data-efficient ViT. This approach addresses the lack of inductive bias by guiding the transformer to adopt some of the CNN's learned priors.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"compressing-large-vision-transformers-for-edge-devices-reducing-parameters-and-latency\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#compressing-large-vision-transformers-for-edge-devices-reducing-parameters-and-latency\",\n    \"aria-label\": \"compressing large vision transformers for edge devices reducing parameters and latency permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"compressing large vision transformers for edge devices: reducing parameters and latency\"), \"\\n\", React.createElement(_components.p, null, \"If you want to deploy a giant ViT on a device with limited compute, knowledge distillation helps produce a more compact model. Combined with \", React.createElement(Highlight, null, \"quantization\"), \" or \", React.createElement(Highlight, null, \"pruning\"), \", you can achieve significant memory reductions and faster inference times.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"combining-distillation-with-quantization-or-pruning-further-compression-techniques\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#combining-distillation-with-quantization-or-pruning-further-compression-techniques\",\n    \"aria-label\": \"combining distillation with quantization or pruning further compression techniques permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"combining distillation with quantization or pruning: further compression techniques\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Quantization\"), \": Convert the weights from float32 or float16 to int8 or even int4. Distillation can help the model remain accurate post-quantization.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Pruning\"), \": Remove entire heads, tokens, or channels that contribute less to final accuracy. Distillation can compensate for lost capacity.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Neural Architecture Search (NAS)\"), \": Automated search methods can discover smaller, more efficient architectures that benefit from distillation.\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"future-directions-and-emerging-trends\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#future-directions-and-emerging-trends\",\n    \"aria-label\": \"future directions and emerging trends permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"future directions and emerging trends\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"larger-scale-pretraining-and-foundation-models-for-vision\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#larger-scale-pretraining-and-foundation-models-for-vision\",\n    \"aria-label\": \"larger scale pretraining and foundation models for vision permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"larger-scale pretraining and foundation models for vision\"), \"\\n\", React.createElement(_components.p, null, \"As data keeps growing, the idea of building \", React.createElement(Highlight, null, \"foundation models\"), \" in vision — analogous to large language models in NLP — has gained momentum. These are massive models trained on huge unlabeled or partially labeled datasets. The vision transformer (or variants) is at the core of many of these foundational efforts (e.g., large MAE or iGPT-like approaches).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"self-supervised-learning-beyond-simmim-masked-autoencoders-contrastive-learning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#self-supervised-learning-beyond-simmim-masked-autoencoders-contrastive-learning\",\n    \"aria-label\": \"self supervised learning beyond simmim masked autoencoders contrastive learning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"self-supervised learning beyond simmim: masked autoencoders, contrastive learning\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"MAE (Masked Autoencoders)\"), \" (He and gang, CVPR 2022) is an approach that masks a large portion of the input image patches and trains the model to reconstruct them, providing a strong pre-training signal without labels. \", React.createElement(Highlight, null, \"Contrastive learning\"), \" (like MoCo, SimCLR) and \", React.createElement(Highlight, null, \"CLIP\"), \" (for vision–language tasks) are also pushing the boundaries of representation learning. These directions show that vision transformers can excel in self-supervised or multimodal contexts.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"cross-modal-transformers-visionlanguage-visionaudio\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cross-modal-transformers-visionlanguage-visionaudio\",\n    \"aria-label\": \"cross modal transformers visionlanguage visionaudio permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"cross-modal transformers (vision–language, vision–audio)\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(Highlight, null, \"attention\"), \" mechanism is domain-agnostic; it can handle text, images, and other modalities. This allows the creation of \", React.createElement(Highlight, null, \"cross-modal transformers\"), \", which process multiple data streams simultaneously. CLIP (Radford and gang, ICML 2021) is an example of learning a joint vision–language embedding space. This synergy paves the way for tasks like image captioning, visual question answering, or advanced text-to-image generation.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"efficient-training-techniques-mixed-precision-gradient-checkpointing-multi-gpu-scaling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#efficient-training-techniques-mixed-precision-gradient-checkpointing-multi-gpu-scaling\",\n    \"aria-label\": \"efficient training techniques mixed precision gradient checkpointing multi gpu scaling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"efficient training techniques: mixed precision, gradient checkpointing, multi-gpu scaling\"), \"\\n\", React.createElement(_components.p, null, \"To train large vision transformers, it's essential to use:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Mixed precision\"), \" (fp16 or bf16) to significantly reduce memory usage and speed up training.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Gradient checkpointing\"), \" to recompute activations during backpropagation and reduce memory at the cost of compute.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Distributed training\"), \" (DP, DDP, ZeRO) or multi-GPU parallelism to handle bigger batch sizes and faster iteration.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"real-world-industrial-applications-robotics-medical-imaging-autonomous-vehicles\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#real-world-industrial-applications-robotics-medical-imaging-autonomous-vehicles\",\n    \"aria-label\": \"real world industrial applications robotics medical imaging autonomous vehicles permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"real-world industrial applications: robotics, medical imaging, autonomous vehicles\"), \"\\n\", React.createElement(_components.p, null, \"Vision transformers are increasingly being tested in real-world domains:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Robotics\"), \": Understanding complex environments with 3D geometry or multi-camera setups.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Medical imaging\"), \": Analysis of CT, MRI, histopathology slides, which can be high-resolution and large in size — an area where hierarchical attention shines.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"Autonomous vehicles\"), \": Multi-view cameras for scene understanding, object detection, and tracking under challenging conditions.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"adversarial-robustness-and-safety-challenges-in-attention-based-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#adversarial-robustness-and-safety-challenges-in-attention-based-models\",\n    \"aria-label\": \"adversarial robustness and safety challenges in attention based models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"adversarial robustness and safety: challenges in attention-based models\"), \"\\n\", React.createElement(_components.p, null, \"Recent studies show that transformers can be vulnerable to \", React.createElement(Highlight, null, \"adversarial examples\"), \" or may exhibit distribution shift issues. Their global attention might inadvertently amplify spurious correlations in the data. Ongoing research focuses on making ViTs more robust through specialized training procedures, adversarial training, or improved architectural designs.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"integration-of-transformer-based-vision-models-with-large-language-models-llms\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#integration-of-transformer-based-vision-models-with-large-language-models-llms\",\n    \"aria-label\": \"integration of transformer based vision models with large language models llms permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"integration of transformer-based vision models with large language models (llms)\"), \"\\n\", React.createElement(_components.p, null, \"We are witnessing an era of \", React.createElement(Highlight, null, \"multimodal LLMs\"), \" that combine vision and language under a single large-scale transformer (e.g., BLIP-2, PaLI, Flamingo). The synergy of image understanding and language understanding enables advanced tasks like describing images with high-level semantic detail, answering visual questions, or performing image retrieval conditioned on textual inputs. This intersection is likely to grow rapidly in the future.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"potential-breakthroughs-and-open-research-questions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#potential-breakthroughs-and-open-research-questions\",\n    \"aria-label\": \"potential breakthroughs and open research questions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"potential breakthroughs and open research questions\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"How to develop more efficient attention mechanisms for extremely high resolutions?\"), \"\\n\", React.createElement(_components.li, null, \"How to handle data scarcity when training large transformer-based models for specific domains?\"), \"\\n\", React.createElement(_components.li, null, \"Can we unify all computer vision tasks — classification, detection, segmentation, 3D understanding — into a single foundation architecture?\"), \"\\n\", React.createElement(_components.li, null, \"How to ensure robust and fair usage of these powerful models in real-world applications?\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"With this comprehensive exploration, I hope I've provided a deeper look at vision transformers, from the core architecture to diverse variants and practical considerations. The excitement in the field is palpable, and the pace of innovation is rapid. While training large-scale ViTs can be resource-intensive, the potential rewards in performance, representation power, and flexibility are remarkable. Researchers and practitioners are actively discovering new ways to blend the best of CNNs and transformers, or push pure attention-based methods to new frontiers. Whether you aim to adopt vision transformers in a production pipeline or continue exploring advanced research questions, understanding their foundations, variants, and best practices is key to harnessing the next wave of breakthroughs in computer vision.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","span","h3","ul","li","ol","_provideComponents","components","Image","id","component","Error","_missingMdxReference","React","style","position","href","className","dangerouslySetInnerHTML","__html","Highlight","Latex","text","alt","path","caption","zoom","Code","wrapper","MDXLayout"],"sourceRoot":""}