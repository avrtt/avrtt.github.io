{"version":3,"file":"component---src-templates-post-tsx-content-file-path-src-pages-posts-research-monte-carlo-methods-mdx-dc859354ca138781b6b4.js","mappings":"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","sources":["webpack://avrtt.blog/./src/pages/posts/research/monte_carlo_methods.mdx","webpack://avrtt.blog/./src/templates/post.tsx","webpack://avrtt.blog/./src/components/Latex/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/**(intro: a quote, catchphrase, joke, etc.)**/\n/*\n\n1. Introduction\n- Continuation from Markov models and Sampling in-depth: connects the concepts of Markov chains with sampling strategies introduced previously\n- Overview of Monte Carlo methods in deep learning: highlights why these methods are useful for approximating complex posteriors\n- Scope and objectives: outlines the focus on MCMC-based techniques and their relevance in modern machine learning\n2. Markov Chain Monte Carlo\n- Recap of Markov chain properties: emphasizes state transitions and stationary distributions\n- Core idea behind MCMC: discusses sampling from a target distribution by constructing a suitable Markov chain\n- Common use cases in discrete and continuous latent variable models: explains broad applicability\n- etc.\n3. The Metropolis-Hastings algorithm\n- Proposal distributions and acceptance ratio: introduces the key mechanism for generating candidate samples\n- Balancing exploration vs. acceptance rate: addresses how proposal scales affect efficiency\n- Practical considerations in machine learning contexts: discusses typical proposals and computational constraints\n- etc.\n4. Gibbs sampling\n- Conditional sampling as a special case of Metropolis-Hastings: explains why Gibbs is simpler if conditionals are easy to sample\n- Blocked Gibbs sampling vs. full conditional updates: covers strategies for high-dimensional variables\n- Convergence and mixing properties: highlights when Gibbs sampling excels or struggles\n- etc.\n5. Slice sampling\n- Conceptual overview: how slice sampling adaptively samples from the \"slice\" of the probability function\n- Implementation details: outlines the stepping-out and shrinkage steps\n- Advantages for certain distributions: mentions when slice sampling converges quickly or is more robust\n- etc.\n6. The hybrid Monte Carlo algorithm\n- Combining Hamiltonian dynamics with Markov chains: leverages gradient information for efficient exploration\n- Leapfrog integrator and energy functions: explains the mechanics of Hamiltonian sampling\n- Typical usage in continuous latent variable models: notes performance gains in high-dimensional spaces\n- etc.\n7. The challenge of mixing between separated modes\n- Why isolated modes cause sampling difficulties: highlights energy barriers and metastable states\n- Possible strategies to encourage exploration: mentions parallel tempering, adaptive proposals, or mixing heuristics\n- Implications for discrete relaxations and large-scale models: connects to the complexities addressed in prior articles\n- etc.\n8.-... (other topics)\n\n*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Highlight from \"../../../components/Highlight\";\nimport Code from \"../../../components/Code\";\nimport Latex from \"../../../components/Latex\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {Image} = _components;\n  if (!Image) _missingMdxReference(\"Image\", true);\n  return React.createElement(React.Fragment, null, \"\\n\", React.createElement(\"br\"), \"\\n\", \"\\n\", React.createElement(_components.p, null, \"Monte Carlo methods are a broad class of computational algorithms that rely on random sampling to approximate complex mathematical quantities. Historically, these methods trace their origins to the mid-20th century, notably during the Manhattan Project, where researchers encountered extremely intricate integrals and discovered that randomized procedures offered a remarkably effective strategy for approximating solutions. Over the decades, Monte Carlo algorithms have become indispensable in a variety of domains ranging from physics and computational chemistry to economics and modern machine learning.\"), \"\\n\", React.createElement(_components.p, null, \"In this course, Monte Carlo methods appear after our discussions on markov models, sampling, and the broader context of statistical modeling. By now, we have already encountered the notion of a \", React.createElement(Highlight, null, \"Markov chain\"), \", which offers a sequence of random variables wherein the conditional distribution of future states depends only on the current state. We also explored how sampling from certain probability distributions is central to many machine learning tasks, especially when these distributions are too complex or high-dimensional for direct analytical solutions. Monte Carlo methods tie these threads together, providing a framework for systematically sampling from challenging distributions, especially in the context of Bayesian inference and advanced generative modeling.\"), \"\\n\", React.createElement(_components.p, null, \"At a high level, the power of Monte Carlo approaches lies in their ability to simulate random draws from a target distribution — or at least a very close approximation — and then use these samples to compute expectations, probabilities, normalizing constants, or other quantities of interest. In modern machine learning, particularly in Bayesian deep learning and probabilistic modeling, we frequently encounter intractable integrals over high-dimensional parameter spaces. Monte Carlo solutions circumvent direct integration by numerical approximation, often in a way that is feasible even when explicit forms are unavailable.\"), \"\\n\", React.createElement(_components.p, null, \"The primary focus here is \", React.createElement(Highlight, null, \"Markov Chain Monte Carlo (MCMC)\"), \", a particular set of Monte Carlo methods that constructs an ergodic Markov chain with the desired target distribution as its stationary distribution. MCMC has had a transformative effect on Bayesian data analysis and remains a staple in large-scale, complex models. Throughout these chapters, I will also shed light on specialized approaches such as Gibbs sampling, the Metropolis-Hastings algorithm, slice sampling, and the hybrid (Hamiltonian) Monte Carlo method. Each approach has its strengths and weaknesses, which I will detail in the coming sections.\"), \"\\n\", React.createElement(_components.p, null, \"Monte Carlo methods are not restricted to Bayesian statistics; they also appear in everything from reinforcement learning (where policy gradients might incorporate various Monte Carlo estimates) to generative adversarial networks (which rely on sampling from high-dimensional distributions). However, I will place an emphasis on their common usage in Bayesian settings because that is where their role is especially prominent and theoretically elegant. My aim is to show why these approaches are powerful yet sometimes tricky to deploy, and how to mitigate practical issues like slow mixing or poor acceptance rates.\"), \"\\n\", React.createElement(_components.p, null, \"Lastly, I want to emphasize that Monte Carlo methods are not just an academic curiosity — they are used in real-world systems at scale. Whether you are building Bayesian neural networks in healthcare or analyzing complex hierarchical data in astrophysics, MCMC-based sampling can offer a rigorous path to quantifying uncertainty in parameters and predictions. By the end of this long-form article, you should have a deep theoretical and practical understanding of the core ideas, be able to confidently select and implement different types of Monte Carlo algorithms, and appreciate how they fit into the larger tapestry of advanced machine learning techniques.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"2-markov-chain-monte-carlo\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-markov-chain-monte-carlo\",\n    \"aria-label\": \"2 markov chain monte carlo permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. markov chain monte carlo\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"21-recap-of-markov-chain-properties\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#21-recap-of-markov-chain-properties\",\n    \"aria-label\": \"21 recap of markov chain properties permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1. recap of markov chain properties\"), \"\\n\", React.createElement(_components.p, null, \"In previous discussions, we explored the properties of Markov chains. A Markov chain is a sequence of random variables \", React.createElement(Latex, {\n    text: \"\\\\(X_0, X_1, X_2, \\\\ldots\\\\)\"\n  }), \" such that each \", React.createElement(Latex, {\n    text: \"\\\\(X_{n+1}\\\\)\"\n  }), \" depends on \", React.createElement(Latex, {\n    text: \"\\\\(X_n\\\\)\"\n  }), \" but is conditionally independent of all the preceding states:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(X_{n+1} \\\\mid X_n, \\\\ldots, X_1) = p(X_{n+1} \\\\mid X_n).\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"This Markov property significantly simplifies model specification and analysis. A Markov chain is specified by its state space (which can be discrete or continuous) and a transition distribution \", React.createElement(Latex, {\n    text: \"\\\\(p(X_{n+1} \\\\mid X_n)\\\\)\"\n  }), \". Under certain regularity conditions — such as ergodicity (every state can be reached from any other state with non-zero probability across some number of transitions, plus other technical constraints) — a Markov chain will converge to a unique stationary distribution \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi\\\\)\"\n  }), \". Once in stationarity, the distribution of \", React.createElement(Latex, {\n    text: \"\\\\(X_n\\\\)\"\n  }), \" does not change with \", React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"22-the-core-idea-behind-mcmc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#22-the-core-idea-behind-mcmc\",\n    \"aria-label\": \"22 the core idea behind mcmc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2. the core idea behind mcmc\"), \"\\n\", React.createElement(_components.p, null, \"The key to Markov Chain Monte Carlo is constructing a Markov chain whose stationary distribution is exactly (or approximately) our \", React.createElement(Highlight, null, \"target distribution\"), \" of interest, say \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \". Often, this target is a posterior distribution in Bayesian inference problems, or a distribution we want to sample from in a generative model. Rather than attempting to compute \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \" directly (which can be intractable in high dimensions), MCMC methods define a transition kernel \", React.createElement(Latex, {\n    text: \"\\\\(T(\\\\theta' \\\\mid \\\\theta)\\\\)\"\n  }), \" that ensures \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \" is the unique stationary distribution of the chain. We then run the chain for many iterations, discard some initial \\\"burn-in\\\" period, and use the subsequent draws as correlated samples from \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, \"A simplified schematic is:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Start from an initial point \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(0)}\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, \"Generate a proposed sample \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \" from a transition rule dependent on \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(t)}\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, \"Decide whether to accept or reject \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \", using an acceptance criterion derived to maintain \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \" as stationary.\"), \"\\n\", React.createElement(_components.li, null, \"If accepted, let \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(t+1)} = \\\\theta'\\\\)\"\n  }), \"; otherwise, let \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(t+1)} = \\\\theta^{(t)}\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, \"Repeat for many steps.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"23-common-use-cases-in-discrete-and-continuous-latent-variable-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#23-common-use-cases-in-discrete-and-continuous-latent-variable-models\",\n    \"aria-label\": \"23 common use cases in discrete and continuous latent variable models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.3. common use cases in discrete and continuous latent variable models\"), \"\\n\", React.createElement(_components.p, null, \"In machine learning, many latent variable models such as latent Dirichlet allocation (used in topic modeling) or hidden Markov models have complex posteriors that can be factorized but remain unnormalized, making direct sampling difficult. MCMC helps us approximate these posteriors:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Discrete latent variable models\"), \": For instance, in a Bayesian mixture model with discrete cluster assignments, MCMC can sequentially sample cluster assignments for each data point by conditioning on the current assignments of all other points.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Continuous latent variable models\"), \": In Bayesian neural networks, each weight is treated as a random variable. MCMC can, in principle, approximate the posterior over weights, though naive MCMC can be quite expensive for large networks.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Moreover, advanced variants of MCMC incorporate gradient information to be more efficient in continuous high-dimensional spaces. Regardless of discrete or continuous nature, the underlying principle is the same: simulate a Markov chain that will hopefully \\\"mix\\\" well across the target distribution.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"24-stepping-beyond-brute-force-simulation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#24-stepping-beyond-brute-force-simulation\",\n    \"aria-label\": \"24 stepping beyond brute force simulation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.4. stepping beyond brute-force simulation\"), \"\\n\", React.createElement(_components.p, null, \"Why not just do random sampling from \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \" in a straightforward manner? Typically, \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \" is known only up to a normalization constant. For instance, in Bayesian inference:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\pi(\\\\theta \\\\mid x) = \\\\frac{p(x \\\\mid \\\\theta) \\\\, p(\\\\theta)}{p(x)}.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The denominator \", React.createElement(Latex, {\n    text: \"\\\\(p(x)\\\\)\"\n  }), \" is often an intractable integral. MCMC sidesteps the direct computation of \", React.createElement(Latex, {\n    text: \"\\\\(p(x)\\\\)\"\n  }), \" by relying solely on ratios of densities. This elegantly bypasses the need for normalizing constants. However, MCMC introduces correlation between successive samples, leading to potential challenges with respect to the variance of estimators and the time needed to traverse the distribution. A key concept is the idea of \\\"mixing time\\\", which can be long in high-dimensional or multimodal scenarios, but is still frequently more tractable than naive direct sampling.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"3-the-metropolis-hastings-algorithm\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-the-metropolis-hastings-algorithm\",\n    \"aria-label\": \"3 the metropolis hastings algorithm permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3. the metropolis-hastings algorithm\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"31-proposal-distributions-and-acceptance-ratio\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#31-proposal-distributions-and-acceptance-ratio\",\n    \"aria-label\": \"31 proposal distributions and acceptance ratio permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.1. proposal distributions and acceptance ratio\"), \"\\n\", React.createElement(_components.p, null, \"The Metropolis-Hastings (MH) algorithm is a cornerstone of MCMC, first introduced by Metropolis and gang (1953) and later generalized by Hastings (1970). At each iteration, you propose a new state \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \" from a \", React.createElement(Highlight, null, \"proposal distribution\"), \" \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta' \\\\mid \\\\theta^{(t)})\\\\)\"\n  }), \", and then decide whether to accept or reject it based on an acceptance probability \", React.createElement(Latex, {\n    text: \"\\\\(\\\\alpha\\\\)\"\n  }), \":\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\alpha(\\\\theta^{(t)}, \\\\theta') = \\\\min \\\\Biggl\\\\{ 1, \\\\frac{\\\\pi(\\\\theta')\\\\, q(\\\\theta^{(t)} \\\\mid \\\\theta')}{\\\\pi(\\\\theta^{(t)})\\\\, q(\\\\theta' \\\\mid \\\\theta^{(t)})} \\\\Biggr\\\\}.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Here:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \" is the target density (up to a constant factor).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta' \\\\mid \\\\theta)\\\\)\"\n  }), \" is the proposal density that suggests candidate updates.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(\\\\alpha\\\\)\"\n  }), \" ensures that in equilibrium, the chain adheres to \", React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Intuitively, if \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \" has higher posterior density than \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(t)}\\\\)\"\n  }), \", it's more likely to be accepted; if it's lower, it might still be accepted, but with a probability less than 1. This mechanism encourages the chain to \\\"explore\\\" but not get stuck entirely in one region.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"32-balancing-exploration-vs-acceptance-rate\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#32-balancing-exploration-vs-acceptance-rate\",\n    \"aria-label\": \"32 balancing exploration vs acceptance rate permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.2. balancing exploration vs. acceptance rate\"), \"\\n\", React.createElement(_components.p, null, \"One of the biggest practical challenges in MH is to choose the right proposal distribution \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\cdot \\\\mid \\\\theta)\\\\)\"\n  }), \". Common choices include symmetric random walks such as a Gaussian:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\theta' = \\\\theta^{(t)} + \\\\epsilon, \\\\quad \\\\epsilon \\\\sim \\\\mathcal{N}(0, \\\\Sigma).\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"When \", React.createElement(Latex, {\n    text: \"\\\\(q\\\\)\"\n  }), \" is symmetric (\", React.createElement(Latex, {\n    text: \"\\\\(q(a \\\\mid b) = q(b \\\\mid a)\\\\)\"\n  }), \"), the acceptance ratio simplifies to\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\alpha(\\\\theta^{(t)}, \\\\theta') = \\\\min\\\\Bigl\\\\{1, \\\\frac{\\\\pi(\\\\theta')}{\\\\pi(\\\\theta^{(t)})}\\\\Bigr\\\\}.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"If \", React.createElement(Latex, {\n    text: \"\\\\(\\\\Sigma\\\\)\"\n  }), \" is too large, the chain might propose states too far from the current location, leading to frequent rejections (low acceptance rate).\"), \"\\n\", React.createElement(_components.li, null, \"If \", React.createElement(Latex, {\n    text: \"\\\\(\\\\Sigma\\\\)\"\n  }), \" is too small, the chain takes tiny steps and might traverse the space very slowly (high acceptance rate but poor exploration).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In practice, one often tunes the step size or covariance of the proposal to achieve an acceptance rate in a recommended range (e.g., 0.2 — 0.5 for typical problems, though it can vary). This tuning often must be done adaptively or in multiple pilot runs to converge to an efficient setting.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"33-practical-considerations-in-machine-learning-contexts\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#33-practical-considerations-in-machine-learning-contexts\",\n    \"aria-label\": \"33 practical considerations in machine learning contexts permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.3. practical considerations in machine learning contexts\"), \"\\n\", React.createElement(_components.p, null, \"In large-scale machine learning, naive Metropolis-Hastings can be expensive because each proposed update often requires evaluation of a high-dimensional posterior. For instance, a Bayesian neural network with millions of parameters can be extremely cumbersome to evaluate for each proposal. Some strategies to mitigate these challenges include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Parallelization\"), \": Evaluate multiple chains simultaneously (if resources permit).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Adaptive proposals\"), \": Use something like the adaptive Metropolis algorithm, which tunes \", React.createElement(Latex, {\n    text: \"\\\\(\\\\Sigma\\\\)\"\n  }), \" on-the-fly based on the empirical covariance of previously accepted states.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Surrogate models\"), \": Train approximate surrogates or use partial gradient information to propose new states that are more likely to be accepted.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Despite these complexities, Metropolis-Hastings remains conceptually simple and widely used, particularly in moderate to high dimensional settings where specialized alternatives, such as Gibbs or Hamiltonian Monte Carlo, are less straightforward to implement.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"34-code-snippet-a-simple-metropolis-hastings-in-python\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#34-code-snippet-a-simple-metropolis-hastings-in-python\",\n    \"aria-label\": \"34 code snippet a simple metropolis hastings in python permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.4. code snippet: a simple metropolis-hastings in python\"), \"\\n\", React.createElement(_components.p, null, \"Below is a minimal Python snippet illustrating Metropolis-Hastings for sampling from a univariate posterior. Assume we have a target unnormalized density \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\theta)\\\\)\"\n  }), \", represented by a function \", React.createElement(Latex, {\n    text: \"target_density\"\n  }), \".\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport numpy as np\n\ndef target_density(theta):\n    # Example: unnormalized posterior for demonstration\n    # Let's say p(theta) ~ exp(-theta^2/2), i.e. Gaussian(0,1)\n    return np.exp(-theta**2 / 2)\n\ndef metropolis_hastings(target, n_samples=10000, init=0.0, proposal_std=1.0):\n    samples = np.zeros(n_samples)\n    current = init\n    current_p = target(current)\n    \n    for i in range(n_samples):\n        proposal = current + np.random.normal(0, proposal_std)\n        proposal_p = target(proposal)\n        \n        # Acceptance ratio\n        alpha = proposal_p / current_p\n        # Compare alpha to a uniform random threshold\n        if np.random.rand() < alpha:\n            current = proposal\n            current_p = proposal_p\n        \n        samples[i] = current\n    \n    return samples\n\n# Example usage\nsamples = metropolis_hastings(target_density, n_samples=5000)\nprint(\"Mean of samples:\", np.mean(samples))\nprint(\"Std of samples:\", np.std(samples))\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"This code uses a simple Gaussian(0, 1) target, but we do not need to specify any normalizing constant because the ratio in the acceptance step cancels it out. Note that in practice, one might have more complicated \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\theta)\\\\)\"\n  }), \" and also might tune \", React.createElement(Latex, {\n    text: \"proposal_std\"\n  }), \" carefully to get a good acceptance rate.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"4-gibbs-sampling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#4-gibbs-sampling\",\n    \"aria-label\": \"4 gibbs sampling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4. gibbs sampling\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"41-conditional-sampling-as-a-special-case-of-metropolis-hastings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#41-conditional-sampling-as-a-special-case-of-metropolis-hastings\",\n    \"aria-label\": \"41 conditional sampling as a special case of metropolis hastings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.1. conditional sampling as a special case of metropolis-hastings\"), \"\\n\", React.createElement(_components.p, null, \"Gibbs sampling is an important MCMC technique often used in hierarchical Bayesian models, latent variable models, and other high-dimensional problems. It can be viewed as a special case of Metropolis-Hastings where the proposal distribution is taken from the full conditional distributions of each variable. More concretely, suppose we have parameters \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta = (\\\\theta_1, \\\\theta_2, \\\\ldots, \\\\theta_d)\\\\)\"\n  }), \". In a Gibbs sampler, we cycle through each coordinate, sampling:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\theta_1^{(t+1)} \\\\sim p(\\\\theta_1 \\\\mid \\\\theta_2^{(t)}, \\\\theta_3^{(t)}, \\\\ldots, \\\\theta_d^{(t)}),\\n\\\\]\"\n  }), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\theta_2^{(t+1)} \\\\sim p(\\\\theta_2 \\\\mid \\\\theta_1^{(t+1)}, \\\\theta_3^{(t)}, \\\\ldots, \\\\theta_d^{(t)}),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"and so on. Because we are sampling from the exact conditional distribution, the acceptance probability is always 1. This eliminates the Metropolis-Hastings acceptance-rejection step and can be simpler to implement if the conditional distributions are easy to sample from.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"42-blocked-gibbs-sampling-vs-full-conditional-updates\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#42-blocked-gibbs-sampling-vs-full-conditional-updates\",\n    \"aria-label\": \"42 blocked gibbs sampling vs full conditional updates permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.2. blocked gibbs sampling vs. full conditional updates\"), \"\\n\", React.createElement(_components.p, null, \"While the basic Gibbs algorithm updates each parameter sequentially, sometimes it is more efficient to update a subset (or \\\"block\\\") of parameters simultaneously, using their joint conditional distribution. This approach is called \", React.createElement(Highlight, null, \"blocked Gibbs sampling\"), \". The advantage is that updating a block might reduce correlations among parameters and speed up mixing, but it requires that the joint conditional distribution for that block be tractable to sample from.\"), \"\\n\", React.createElement(_components.p, null, \"In many advanced models, certain subsets of parameters have conjugate forms (e.g., a Gaussian prior leads to a Gaussian posterior). We can exploit that structure for direct sampling in large blocks.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"43-convergence-and-mixing-properties\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#43-convergence-and-mixing-properties\",\n    \"aria-label\": \"43 convergence and mixing properties permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.3. convergence and mixing properties\"), \"\\n\", React.createElement(_components.p, null, \"Gibbs sampling can converge quickly if the conditional distributions are straightforward to sample from and if the variables are not too strongly correlated. However, in high-dimensional models where variables exhibit strong dependencies, simple coordinate-wise Gibbs can mix poorly. Blocked Gibbs or specialized transformations might be needed to sample efficiently.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"44-example-gibbs-sampling-for-a-bivariate-normal\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#44-example-gibbs-sampling-for-a-bivariate-normal\",\n    \"aria-label\": \"44 example gibbs sampling for a bivariate normal permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.4. example: gibbs sampling for a bivariate normal\"), \"\\n\", React.createElement(_components.p, null, \"To illustrate the core logic, consider a two-dimensional Gaussian where the conditional distributions are also Gaussian. Let's show the code:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport numpy as np\n\ndef sample_bivariate_normal_gibbs(mu, sigma, n_samples=10000):\n    \"\"\"\n    mu: [mu1, mu2]\n    sigma: 2x2 covariance matrix\n    \"\"\"\n    # We'll store the samples in an array\n    samples = np.zeros((n_samples, 2))\n    # Start from some initial guess\n    current = np.array([0.0, 0.0])\n    \n    # Precompute components we need for conditional distributions\n    # Covariance matrix: sigma = [[sigma11, sigma12],[sigma21, sigma22]]\n    sigma11 = sigma[0, 0]\n    sigma22 = sigma[1, 1]\n    sigma12 = sigma[0, 1]\n    rho = sigma12 / (np.sqrt(sigma11 * sigma22))\n    \n    # We'll do a simple approach ignoring partial correlation details,\n    # but in practice you can find the conditional distribution formulas:\n    # X1 | X2 ~ Normal(mu1 + rho * (X2 - mu2) * (sqrt(sigma11)/sqrt(sigma22)), (1-rho^2)*sigma11)\n    # and similarly for X2 | X1.\n    \n    for i in range(n_samples):\n        # sample X1 given X2\n        x2 = current[1]\n        cond_mean_1 = mu[0] + (rho * (x2 - mu[1]) * (np.sqrt(sigma11)/np.sqrt(sigma22)))\n        cond_var_1 = (1 - rho**2) * sigma11\n        x1_new = np.random.normal(cond_mean_1, np.sqrt(cond_var_1))\n        \n        # sample X2 given X1\n        x1 = x1_new\n        cond_mean_2 = mu[1] + (rho * (x1 - mu[0]) * (np.sqrt(sigma22)/np.sqrt(sigma11)))\n        cond_var_2 = (1 - rho**2) * sigma22\n        x2_new = np.random.normal(cond_mean_2, np.sqrt(cond_var_2))\n        \n        current = np.array([x1_new, x2_new])\n        samples[i] = current\n        \n    return samples\n\n# Example usage\nmu = np.array([0, 0])\nsigma = np.array([[1, 0.8],[0.8, 1]])\nsamples = sample_bivariate_normal_gibbs(mu, sigma, 5000)\nprint(\"Sample mean:\", np.mean(samples, axis=0))\nprint(\"Sample cov:\\n\", np.cov(samples.T))\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"Conceptually, this example demonstrates how straightforward it can be to implement Gibbs sampling when conditional distributions are easy to sample. For complicated models (e.g., hierarchical Bayesian structures with multiple random effects), each \\\"Gibbs update\\\" might still require some algebra but is typically more direct than designing a good Metropolis-Hastings proposal.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"5-slice-sampling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#5-slice-sampling\",\n    \"aria-label\": \"5 slice sampling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5. slice sampling\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"51-conceptual-overview\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#51-conceptual-overview\",\n    \"aria-label\": \"51 conceptual overview permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5.1. conceptual overview\"), \"\\n\", React.createElement(_components.p, null, \"Slice sampling is an alternative Monte Carlo method that adapts proposals based on the shape of the target distribution \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\theta)\\\\)\"\n  }), \". Instead of directly proposing \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \", slice sampling introduces an auxiliary variable \", React.createElement(Latex, {\n    text: \"\\\\(u\\\\)\"\n  }), \" that defines a horizontal \\\"slice\\\" of the density function. Formally, we sample:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nu \\\\sim \\\\text{Uniform}(0, p(\\\\theta^{(t)})),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Then, we define the slice \", React.createElement(Latex, {\n    text: \"\\\\(S = \\\\{\\\\theta : p(\\\\theta) \\\\ge u\\\\}\\\\)\"\n  }), \". Our task becomes sampling a new \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \" uniformly from \", React.createElement(Latex, {\n    text: \"\\\\(S\\\\)\"\n  }), \". In one dimension, this can be done via a procedure known as stepping out and shrinkage. Intuitively, we first find an interval in which the slice \", React.createElement(Latex, {\n    text: \"\\\\(S\\\\)\"\n  }), \" is contained (stepping out), and then we repeatedly narrow down this interval until we isolate a single region containing a valid new sample (shrinkage).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"52-implementation-details-stepping-out-and-shrinkage-steps\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#52-implementation-details-stepping-out-and-shrinkage-steps\",\n    \"aria-label\": \"52 implementation details stepping out and shrinkage steps permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5.2. implementation details: stepping-out and shrinkage steps\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Stepping-out\"), \": Start from a point \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(t)}\\\\)\"\n  }), \" and randomly choose a direction left or right in small increments to find an interval \", React.createElement(Latex, {\n    text: \"\\\\([L, R]\\\\)\"\n  }), \" that covers the entire slice \", React.createElement(Latex, {\n    text: \"\\\\(\\\\{\\\\theta: p(\\\\theta) \\\\ge u\\\\}\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Shrinkage\"), \": Once we have an interval known to contain the slice, we repeatedly draw a candidate \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \" from this interval. If \", React.createElement(Latex, {\n    text: \"p(\\\\theta') \\\\ge u\"\n  }), \" (meaning \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \" is in the slice), we move on; otherwise, we shrink the interval around \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(t)}\\\\)\"\n  }), \" to exclude \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \" and keep trying until we find a valid \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta'\\\\)\"\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Because slice sampling adapts to the local shape of \", React.createElement(Latex, {\n    text: \"p(\\\\theta)\"\n  }), \", it often converges quickly and does not require manual tuning of a proposal scale (like in Metropolis). However, in higher-dimensional spaces, slice sampling can become more complex. One might apply it coordinate-wise or with clever transformations.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"53-advantages-for-certain-distributions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#53-advantages-for-certain-distributions\",\n    \"aria-label\": \"53 advantages for certain distributions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5.3. advantages for certain distributions\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Automatic tuning\"), \": Since slice sampling attempts to discover an appropriate \\\"slice\\\" automatically, it can avoid the labor of tuning proposal step sizes.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Non-symmetric distributions\"), \": It can handle distributions with skewness or heavy tails if the stepping-out procedure is done carefully.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Better local adaptation\"), \": If the density is sharply peaked, the slice method quickly narrows the candidate region.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"However, in high dimensions, the intervals become multi-dimensional regions that can be expensive to explore. Thus, slice sampling is most straightforward in univariate or moderate-dimensional contexts.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"6-the-hybrid-monte-carlo-algorithm\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#6-the-hybrid-monte-carlo-algorithm\",\n    \"aria-label\": \"6 the hybrid monte carlo algorithm permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"6. the hybrid monte carlo algorithm\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"61-combining-hamiltonian-dynamics-with-markov-chains\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#61-combining-hamiltonian-dynamics-with-markov-chains\",\n    \"aria-label\": \"61 combining hamiltonian dynamics with markov chains permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"6.1. combining hamiltonian dynamics with markov chains\"), \"\\n\", React.createElement(_components.p, null, \"Also referred to as \\\"Hamiltonian Monte Carlo\\\" (HMC) or \\\"Hybrid Monte Carlo\\\", this method uses concepts from physics — specifically Hamiltonian dynamics — to guide proposals in a high-dimensional space more efficiently than naive random walks. It was popularized in the context of Bayesian inference by Neal (1993), and is a mainstay in modern probabilistic software like Stan and PyMC.\"), \"\\n\", React.createElement(_components.p, null, \"The key insight is to introduce an auxiliary momentum variable \", React.createElement(Latex, {\n    text: \"\\\\(p\\\\)\"\n  }), \" alongside the position variables \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \". We define a Hamiltonian function:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nH(\\\\theta, p) = - \\\\log \\\\pi(\\\\theta) + \\\\frac{1}{2} p^\\\\top M^{-1} p,\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(\\\\pi(\\\\theta)\\\\)\"\n  }), \" is our target density (the negative log-likelihood plus the negative log-prior in a Bayesian context).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(p\\\\)\"\n  }), \" is typically drawn from a Gaussian \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathcal{N}(0, M)\\\\)\"\n  }), \" at the start of each trajectory, with \", React.createElement(Latex, {\n    text: \"\\\\(M\\\\)\"\n  }), \" as a mass matrix (often the identity or a diagonal approximation).\"), \"\\n\", React.createElement(_components.li, null, \"The first term \", React.createElement(Latex, {\n    text: \"\\\\(- \\\\log \\\\pi(\\\\theta)\\\\)\"\n  }), \" acts like a potential energy, and the second term \", React.createElement(Latex, {\n    text: \"\\\\(\\\\frac12 p^\\\\top M^{-1} p\\\\)\"\n  }), \" is the kinetic energy.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"62-leapfrog-integrator-and-energy-functions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#62-leapfrog-integrator-and-energy-functions\",\n    \"aria-label\": \"62 leapfrog integrator and energy functions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"6.2. leapfrog integrator and energy functions\"), \"\\n\", React.createElement(_components.p, null, \"HMC simulates the dynamics governed by Hamilton's equations for a (discrete) number of leapfrog steps, effectively moving \", React.createElement(Latex, {\n    text: \"(\\\\theta, p)\"\n  }), \" in a direction informed by gradients \", React.createElement(Latex, {\n    text: \"\\\\(\\\\nabla_\\\\theta \\\\log \\\\pi(\\\\theta)\\\\)\"\n  }), \". A single iteration often looks like this:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Sample momentum \", React.createElement(Latex, {\n    text: \"\\\\(p^{(t)} \\\\sim \\\\mathcal{N}(0, M)\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, \"Using the leapfrog integrator, simulate Hamiltonian dynamics for \", React.createElement(Latex, {\n    text: \"L\\\\)\"\n  }), \" steps with step size \", React.createElement(Latex, {\n    text: \"\\\\(\\\\epsilon\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, \"After these \", React.createElement(Latex, {\n    text: \"L\\\\)\"\n  }), \" steps, you get a proposal \", React.createElement(Latex, {\n    text: \"(\\\\theta', p')\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, \"Accept or reject \", React.createElement(Latex, {\n    text: \"(\\\\theta', p')\"\n  }), \" using a Metropolis criterion based on the change in Hamiltonian \", React.createElement(Latex, {\n    text: \"\\\\(\\\\Delta H = H(\\\\theta', p') - H(\\\\theta^{(t)}, p^{(t)})\\\\)\"\n  }), \":\"), \"\\n\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\alpha = \\\\min\\\\{1, e^{-\\\\Delta H}\\\\}.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"If accepted, \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(t+1)} = \\\\theta'\\\\)\"\n  }), \"; if not, \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(t+1)} = \\\\theta^{(t)}\\\\)\"\n  }), \". The momentum \", React.createElement(Latex, {\n    text: \"\\\\(p\\\\)\"\n  }), \" is usually discarded or resampled for the next iteration to maintain an ergodic chain.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"63-typical-usage-in-continuous-latent-variable-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#63-typical-usage-in-continuous-latent-variable-models\",\n    \"aria-label\": \"63 typical usage in continuous latent variable models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"6.3. typical usage in continuous latent variable models\"), \"\\n\", React.createElement(_components.p, null, \"HMC is especially powerful for continuous, high-dimensional distributions where gradient information can guide the sampling away from random walk behavior. This leads to larger effective step sizes, higher acceptance rates, and more rapid exploration of complicated posteriors.\"), \"\\n\", React.createElement(_components.p, null, \"However, HMC also requires gradients of the log-likelihood (or log-posterior) with respect to \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \". Hence it's well-suited for models where we can compute derivatives via automatic differentiation (like neural networks). In large-scale machine learning contexts, one might also see \", React.createElement(Highlight, null, \"Stochastic Gradient Langevin Dynamics (SGLD)\"), \" (Welling and Teh, 2011) or \", React.createElement(Highlight, null, \"Stochastic Gradient Hamiltonian Monte Carlo (SGHMC)\"), \" as variants that use minibatches of data to approximate the gradient.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"64-practical-aspects-of-hmc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#64-practical-aspects-of-hmc\",\n    \"aria-label\": \"64 practical aspects of hmc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"6.4. practical aspects of hmc\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Choosing step size \", React.createElement(Latex, {\n    text: \"\\\\(\\\\epsilon\\\\)\"\n  }), \" and leapfrog steps \", React.createElement(Latex, {\n    text: \"\\\\(L\\\\)\"\n  })), \": This can drastically affect performance. Too large a step size or too many leapfrog steps can lead to high rejection rates. Too small or too few can revert the sampler to a random-walk-like behavior. Tools like No-U-Turn Sampler (NUTS) (Hoffman and Gelman, 2014) adapt these parameters automatically.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Mass matrix\"), \": Setting \", React.createElement(Latex, {\n    text: \"\\\\(M\\\\)\"\n  }), \" to approximate the covariance of \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \" can dramatically improve sampling efficiency. Adaptive approaches estimate this during warm-up.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Computational cost\"), \": Each iteration can be more expensive than naive MH because we must compute gradients multiple times per iteration. But the improved mixing often pays off in fewer overall iterations.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"7-the-challenge-of-mixing-between-separated-modes\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#7-the-challenge-of-mixing-between-separated-modes\",\n    \"aria-label\": \"7 the challenge of mixing between separated modes permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"7. the challenge of mixing between separated modes\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"71-why-isolated-modes-cause-sampling-difficulties\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#71-why-isolated-modes-cause-sampling-difficulties\",\n    \"aria-label\": \"71 why isolated modes cause sampling difficulties permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"7.1. why isolated modes cause sampling difficulties\"), \"\\n\", React.createElement(_components.p, null, \"Many real-world distributions have multiple separated modes — think of a complicated posterior with multiple distinct parameter configurations that yield near-equivalent likelihoods. MCMC methods based on local updates (Metropolis, HMC, Gibbs, slice sampling) can get trapped in one region if there is a substantial energy barrier between modes. Once the chain settles into a local mode, it may take a very long time to move to a different peak, leading to poor mixing.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"72-possible-strategies-to-encourage-exploration\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#72-possible-strategies-to-encourage-exploration\",\n    \"aria-label\": \"72 possible strategies to encourage exploration permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"7.2. possible strategies to encourage exploration\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Parallel tempering\"), \" (also known as replica exchange MCMC): Run multiple chains at different \\\"temperatures\\\", allowing them to swap states occasionally. The higher-temperature chains can more easily traverse energy barriers, pulling the lower-temperature chains out of local traps.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Adaptive proposals\"), \": Continuously refine the proposal covariance in Metropolis-Hastings to better scale steps when in broad or narrow modes.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Mixture proposals\"), \": Propose from a mixture of local steps and broader global jumps.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Overrelaxation\"), \": In some cases, you can implement overrelaxed updates that systematically skip across modes in certain structured problems.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"73-implications-for-discrete-relaxations-and-large-scale-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#73-implications-for-discrete-relaxations-and-large-scale-models\",\n    \"aria-label\": \"73 implications for discrete relaxations and large scale models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"7.3. implications for discrete relaxations and large-scale models\"), \"\\n\", React.createElement(_components.p, null, \"Discrete spaces (like large assignment problems) can be especially challenging. One might combine methods: for example, a Gibbs step for local structure plus a parallel tempering step to jump across modes more effectively. In large-scale problems (like Bayesian neural networks), multiple modes can represent drastically different function behaviors. If you want a proper exploration of the posterior, specialized approaches or carefully chosen initializations may be necessary.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"8-advanced-topics-in-monte-carlo-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#8-advanced-topics-in-monte-carlo-methods\",\n    \"aria-label\": \"8 advanced topics in monte carlo methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8. advanced topics in monte carlo methods\"), \"\\n\", React.createElement(_components.p, null, \"In addition to the well-known algorithms above, the field of Monte Carlo sampling is replete with advanced extensions and variations designed to tackle specific bottlenecks. Below, I briefly highlight a few that expand beyond the standard mainstream approaches.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"81-no-u-turn-sampler-nuts\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#81-no-u-turn-sampler-nuts\",\n    \"aria-label\": \"81 no u turn sampler nuts permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8.1. no-u-turn sampler (nuts)\"), \"\\n\", React.createElement(_components.p, null, \"Introduced by Hoffman and Gelman (2014), NUTS is an extension of Hamiltonian Monte Carlo that eliminates the need to choose the number of leapfrog steps \", React.createElement(Latex, {\n    text: \"\\\\(L\\\\)\"\n  }), \" manually. Instead, it builds a set of candidate points in each iteration and uses a recursive criterion to decide where to stop. This approach adaptively tunes the trajectory so that the chain doesn't \\\"turn back on itself\\\", hence the name \\\"No-U-Turn\\\".\"), \"\\n\", React.createElement(_components.p, null, \"NUTS is popular in software libraries like Stan because it greatly simplifies user-tuning and often yields high-efficiency sampling with minimal user intervention.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"82-reparameterization-strategies\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#82-reparameterization-strategies\",\n    \"aria-label\": \"82 reparameterization strategies permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8.2. reparameterization strategies\"), \"\\n\", React.createElement(_components.p, null, \"In some Bayesian models, poorly scaled parameters can hamper MCMC convergence. A reparameterization that transforms parameters into a space with more favorable geometry can accelerate mixing. For example:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Non-centered parameterization\"), \" in hierarchical models, where we represent parameters as standardized values that are then scaled by hyperparameters.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Riemann manifold HMC\"), \" (Girolami and Calderhead, 2011): modifies the Hamiltonian equations to account for local curvature in the posterior, leading to more efficient exploration in highly anisotropic distributions.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"83-population-mc-and-sequential-mc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#83-population-mc-and-sequential-mc\",\n    \"aria-label\": \"83 population mc and sequential mc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8.3. population mc and sequential mc\"), \"\\n\", React.createElement(_components.p, null, \"Beyond typical MCMC, there exist population-based methods that maintain a set of samples (a population) and evolve them collectively. For instance, \", React.createElement(Highlight, null, \"sequential Monte Carlo\"), \" (SMC) can be used to systematically move from a prior distribution to a posterior by gradually introducing the likelihood term. Population-based MCMC (e.g., parallel tempering or differential evolution MCMC) uses multiple interacting chains at once. These methods can robustly handle multimodality and can provide a more global perspective on the target distribution.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"84-variational-approaches-as-alternatives-or-complements\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#84-variational-approaches-as-alternatives-or-complements\",\n    \"aria-label\": \"84 variational approaches as alternatives or complements permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8.4. variational approaches as alternatives or complements\"), \"\\n\", React.createElement(_components.p, null, \"While not strictly Monte Carlo, variational inference can serve as a complementary technique. Sometimes we might initialize MCMC from a variational approximation or use MCMC to fine-tune a variational distribution. The synergy between these two paradigms is an active research area, where hybrid methods attempt to leverage the scalability of variational approximations and the accuracy of MCMC.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"9-diagnosing-and-evaluating-mcmc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#9-diagnosing-and-evaluating-mcmc\",\n    \"aria-label\": \"9 diagnosing and evaluating mcmc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"9. diagnosing and evaluating mcmc\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"91-assessing-convergence\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#91-assessing-convergence\",\n    \"aria-label\": \"91 assessing convergence permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"9.1. assessing convergence\"), \"\\n\", React.createElement(_components.p, null, \"Even the most refined MCMC methods can get stuck or fail to converge. Typically, we run multiple chains from different initial states and check if they converge to the same distribution of samples. Common metrics and diagnostics include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"R-hat statistic\"), \" (Gelman-Rubin diagnostic): Compares within-chain and between-chain variances. Values close to 1 indicate convergence.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Effective sample size\"), \": A measure of how many \\\"independent\\\" samples the chain provides, given the autocorrelation.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Trace plots\"), \": Visual inspection of the chain's path over iterations.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"92-burn-in-and-thinning\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#92-burn-in-and-thinning\",\n    \"aria-label\": \"92 burn in and thinning permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"9.2. burn-in and thinning\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Burn-in\"), \": The initial samples before the chain has \\\"forgotten\\\" its initialization are discarded to reduce bias.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Thinning\"), \": One might store only every \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \"-th sample to reduce autocorrelation in the stored sequence. This practice is somewhat controversial, as some argue it might throw away data unnecessarily. But it can help with memory and correlation issues when dealing with large sample sizes.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"93-computing-posterior-summaries\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#93-computing-posterior-summaries\",\n    \"aria-label\": \"93 computing posterior summaries permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"9.3. computing posterior summaries\"), \"\\n\", React.createElement(_components.p, null, \"Once a chain is considered converged, we often compute posterior means, credible intervals, or other summary statistics. For instance, if we want \", React.createElement(Latex, {\n    text: \"\\\\(E[f(\\\\theta)]\\\\)\"\n  }), \", we approximate with an empirical average:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\frac{1}{N} \\\\sum_{i=1}^{N} f(\\\\theta^{(i)}),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta^{(i)}\\\\)\"\n  }), \" are samples post burn-in. Confidence intervals can be derived by looking at quantiles of the sample distribution or using more advanced methods like the highest posterior density interval.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"10-software-tools\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#10-software-tools\",\n    \"aria-label\": \"10 software tools permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"10. software tools\"), \"\\n\", React.createElement(_components.p, null, \"Modern data science frameworks offer a host of tools that can drastically simplify implementing Monte Carlo methods:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"PyMC\"), \": A Python library for Bayesian analysis that includes NUTS, Metropolis, and other samplers.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Stan\"), \": A probabilistic programming language featuring HMC/NUTS as its primary sampler.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"TensorFlow Probability\"), \": Offers MCMC modules, including HMC and Replica Exchange MCMC, with automatic differentiation.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Pyro\"), \": Built on PyTorch, providing an extensive suite of inference algorithms (both variational and MCMC-based).\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"11-code-example-using-pymc-for-hierarchical-regression\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#11-code-example-using-pymc-for-hierarchical-regression\",\n    \"aria-label\": \"11 code example using pymc for hierarchical regression permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"11. code example: using pymc for hierarchical regression\"), \"\\n\", React.createElement(_components.p, null, \"Below is a conceptual snippet (not fully tested) that demonstrates how one might do hierarchical Bayesian regression with PyMC:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport numpy as np\nimport pymc as pm\nimport arviz as az\n\n# Synthetic data\nnp.random.seed(42)\nN = 100\nx = np.random.randn(N)\ntrue_alpha = 2.0\ntrue_beta = -1.0\ntrue_sigma = 0.5\ny = true_alpha + true_beta * x + np.random.normal(0, true_sigma, size=N)\n\n# Build model\nwith pm.Model() as model:\n    alpha = pm.Normal(\"alpha\", mu=0, sigma=1)\n    beta = pm.Normal(\"beta\", mu=0, sigma=1)\n    sigma = pm.HalfNormal(\"sigma\", sigma=1)\n    \n    mu = alpha + beta * x\n    obs = pm.Normal(\"obs\", mu=mu, sigma=sigma, observed=y)\n    \n    # Sample using NUTS\n    trace = pm.sample(draws=2000, tune=1000, cores=1)\n    \naz.plot_trace(trace, var_names=[\"alpha\", \"beta\", \"sigma\"])\naz.summary(trace, var_names=[\"alpha\", \"beta\", \"sigma\"])\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"This script sets up a simple regression model where \", React.createElement(Latex, {\n    text: \"\\\\(y\\\\)\"\n  }), \" depends linearly on \", React.createElement(Latex, {\n    text: \"\\\\(x\\\\)\"\n  }), \" with a Gaussian noise term. PyMC's \", React.createElement(Latex, {\n    text: \"pm.sample\"\n  }), \" automatically runs the NUTS (an HMC variant), returning an ArviZ \", React.createElement(Latex, {\n    text: \"trace\"\n  }), \" object we can analyze or visualize. Such high-level frameworks provide an accessible way to leverage advanced MCMC techniques without implementing them from scratch.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"12-advanced-research-directions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#12-advanced-research-directions\",\n    \"aria-label\": \"12 advanced research directions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"12. advanced research directions\"), \"\\n\", React.createElement(_components.p, null, \"Monte Carlo sampling continues to be a vibrant research area. Below are some advanced threads of interest:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Stochastic Gradient MCMC\"), \": Methods that incorporate minibatch gradients to scale MCMC to very large datasets. SGLD (Welling and Teh, 2011) is an early example; more refined variants like SGHMC attempt to correct for the noise introduced by partial data.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"MCMC for discrete structures\"), \": Graphical models, combinatorial optimization, or big discrete-latent spaces remain challenging. Specialized methods that carefully design proposals or use partial enumeration are under active development.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Transdimensional MCMC\"), \": Reversible jump MCMC (Green, 1995) and related methods for model selection tasks where the dimension of the parameter space can change across samples.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Normalizing flows\"), \": A synergy of Monte Carlo with invertible transformations (flows) that can help define more flexible proposals or reparameterizations for advanced models (Papamakarios and gang, 2019).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Neural network-based proposals\"), \": Some approaches train neural networks to learn an approximate distribution that is used as a proposal in Metropolis-Hastings or importance sampling (e.g., Bayesian large-scale deep generative modeling tasks).\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"13-visual-illustrations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#13-visual-illustrations\",\n    \"aria-label\": \"13 visual illustrations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"13. visual illustrations\"), \"\\n\", React.createElement(_components.p, null, \"To clarify the geometry and transitions behind MCMC, one might visualize a bivariate distribution and the chain's path. Consider:\"), \"\\n\", React.createElement(Image, {\n    alt: \"2D distribution with MCMC path\",\n    path: \"\",\n    caption: \"A typical MCMC chain exploring a 2D Gaussian mixture. The path indicates how correlated steps might jump between modes.\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Such a figure can highlight how states cluster around modes and occasionally hop to other peaks — or fail to do so if the mixing is insufficient. Another helpful visualization is how HMC trajectories arc through the parameter space, guided by gradient-based momentum.\"), \"\\n\", React.createElement(Image, {\n    alt: \"Hamiltonian Monte Carlo trajectories\",\n    path: \"\",\n    caption: \"Illustration of HMC leapfrog updates, showing how momentum and potential energy interact to propose new states far from the current position.\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"14-conclusion-and-outlook\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#14-conclusion-and-outlook\",\n    \"aria-label\": \"14 conclusion and outlook permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"14. conclusion and outlook\"), \"\\n\", React.createElement(_components.p, null, \"Monte Carlo methods sit at the very heart of modern statistical analysis and machine learning, offering a direct, intuitive way to handle complex distributions that defy closed-form solutions. By casting the problem of \\\"computing complicated integrals\\\" into a problem of \\\"smartly generating random samples,\\\" Monte Carlo algorithms open the door to in-depth Bayesian inference, deep generative modeling, robust uncertainty quantification, and beyond.\"), \"\\n\", React.createElement(_components.p, null, \"From the foundational Metropolis-Hastings scheme, through the specialized Gibbs sampler, to advanced gradient-informed strategies like Hamiltonian Monte Carlo, we see that each approach attempts to tackle the same central challenge — exploring the intricate nooks and crannies of a probability distribution. The choice of method depends heavily on the structure of the model, the nature of the data, and practical computational constraints.\"), \"\\n\", React.createElement(_components.p, null, \"Although MCMC is well-established, its limitations in high-dimensional, multimodal spaces demand vigilance. Tuning or advanced methods (e.g., parallel tempering, adaptive proposals, or reparameterizations) can mitigate slow mixing, while bridging tools like sequential Monte Carlo or normalizing flows broaden the possibilities for sampling from extremely complicated distributions. Research is ongoing to unify deep learning with Monte Carlo inference, to exploit GPU acceleration, and to integrate approximate inference in a way that retains the theoretical rigor of sampling-based approaches.\"), \"\\n\", React.createElement(_components.p, null, \"I encourage you to experiment with multiple MCMC libraries, attempt to implement small-scale Metropolis samplers yourself, and monitor convergence carefully. With practice, you will gain an intuition for how to diagnose slow mixing or an overzealous acceptance rate. Monte Carlo methods reward patience and iteration in refining both model specification and the sampler's hyperparameters.\"), \"\\n\", React.createElement(_components.p, null, \"In the broader context of this course, you should now see how Monte Carlo sampling connects with prior discussions about Markov processes, probability theory, and advanced modeling. It also sets the stage for future topics on advanced Bayesian modeling, hierarchical approaches, and potentially bridging into more specialized or modern variants (like SGMCMC for deep neural networks). In short, Monte Carlo's role in the machine learning toolbox cannot be overstated, and I believe a strong command of MCMC theory and practice will be invaluable for tackling many real-world data science problems.\"), \"\\n\", React.createElement(_components.p, null, \"Having traversed the fundamentals and dived into specialized algorithms, you should be equipped with a powerful lens to approach uncertainty and inference in your machine learning endeavors. The next steps in the course will continue building on these ideas as we explore even deeper aspects of generative models, advanced optimization strategies, and potentially specialized sampling frameworks.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/avrtt/Repos/avrtt.github.io/src/pages/posts/research/monte_carlo_methods.mdx\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, {useState, useEffect} from 'react';\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\nimport RemoveMarkdown from 'remove-markdown';\nimport {ImageContext} from '../context/ImageContext';\nimport {MDXProvider} from '@mdx-js/react';\nimport Image from '../components/PostImage';\nimport {motion} from 'framer-motion';\nimport SEO from \"../components/seo\";\nimport PostBanner from '../components/PostBanner';\nimport PostBottom from '../components/PostBottom';\nimport {wordsPerMinuteAdventures, wordsPerMinuteResearch, wordsPerMinuteThoughts} from '../data/commonVariables';\nimport PartOfCourseNotice from \"../components/PartOfCourseNotice\";\nimport * as stylesButtonsCommon from \"../styles/buttons_common.module.scss\";\nimport * as stylesCustomPostLayouts from \"../styles/custom_post_layouts.module.scss\";\nimport * as stylesTableOfContents from \"../styles/table_of_contents.module.scss\";\nimport * as stylesTagBadges from \"../styles/tag_badges.module.scss\";\nfunction formatReadTime(minutes) {\n  if (minutes <= 10) return '~10 min';\n  if (minutes <= 20) return '~20 min';\n  if (minutes <= 30) return '~30 min';\n  if (minutes <= 40) return '~40 min';\n  if (minutes <= 50) return '~50 min';\n  if (minutes <= 60) return '~1 h';\n  const hours = Math.floor(minutes / 60);\n  const remainder = minutes % 60;\n  if (remainder <= 30) {\n    return `~${hours}${remainder > 0 ? '.5' : ''} h`;\n  }\n  return `~${hours + 1} h`;\n}\nconst TableOfContents = _ref => {\n  let {toc} = _ref;\n  if (!toc || !toc.items) return null;\n  const handleClick = (e, url) => {\n    e.preventDefault();\n    const targetId = url.replace('#', '');\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  return React.createElement(\"nav\", {\n    className: stylesTableOfContents.toc\n  }, React.createElement(\"ul\", null, toc.items.map((item, index) => React.createElement(\"li\", {\n    key: index\n  }, React.createElement(\"a\", {\n    href: item.url,\n    onClick: e => handleClick(e, item.url)\n  }, item.title), item.items && React.createElement(TableOfContents, {\n    toc: {\n      items: item.items\n    }\n  })))));\n};\nexport function PostTemplate(_ref2) {\n  let {data: {mdx, allMdx, allPostImages}, children} = _ref2;\n  const {frontmatter, body, tableOfContents} = mdx;\n  const index = frontmatter.index;\n  const slug = frontmatter.slug;\n  const section = slug.split('/')[1];\n  const posts = allMdx.nodes.filter(post => post.frontmatter.slug.includes(`/${section}/`));\n  const sortedPosts = posts.sort((a, b) => a.frontmatter.index - b.frontmatter.index);\n  const currentIndex = sortedPosts.findIndex(post => post.frontmatter.index === index);\n  const nextPost = sortedPosts[currentIndex + 1];\n  const lastPost = sortedPosts[currentIndex - 1];\n  const trimmedSlug = frontmatter.slug.replace(/\\/$/, '');\n  const keyCurrent = (/[^/]*$/).exec(trimmedSlug)[0];\n  const basePath = `posts/${section}/content/${keyCurrent}/`;\n  const {0: isWideLayout, 1: setIsWideLayout} = useState(frontmatter.flagWideLayoutByDefault);\n  const {0: isAnimating, 1: setIsAnimating} = useState(false);\n  const toggleLayout = () => {\n    setIsWideLayout(!isWideLayout);\n  };\n  useEffect(() => {\n    setIsAnimating(true);\n    const timer = setTimeout(() => setIsAnimating(false), 340);\n    return () => clearTimeout(timer);\n  }, [isWideLayout]);\n  var wordsPerMinute;\n  if (section === \"adventures\") {\n    wordsPerMinute = wordsPerMinuteAdventures;\n  } else if (section === \"research\") {\n    wordsPerMinute = wordsPerMinuteResearch;\n  } else if (section === \"thoughts\") {\n    wordsPerMinute = wordsPerMinuteThoughts;\n  }\n  const plainTextBody = RemoveMarkdown(body).replace(/import .*? from .*?;/g, '').replace(/<.*?>/g, '').replace(/\\{\\/\\*[\\s\\S]*?\\*\\/\\}/g, '').trim();\n  const wordCount = plainTextBody.split(/\\s+/).length;\n  const baseReadTimeMinutes = Math.ceil(wordCount / wordsPerMinute);\n  const extraTime = frontmatter.extraReadTimeMin || 0;\n  const totalReadTime = baseReadTimeMinutes + extraTime;\n  const readTime = formatReadTime(totalReadTime);\n  const notices = [{\n    flag: frontmatter.flagDraft,\n    component: () => import(\"../components/NotFinishedNotice\")\n  }, {\n    flag: frontmatter.flagMindfuckery,\n    component: () => import(\"../components/MindfuckeryNotice\")\n  }, {\n    flag: frontmatter.flagRewrite,\n    component: () => import(\"../components/RewriteNotice\")\n  }, {\n    flag: frontmatter.flagOffensive,\n    component: () => import(\"../components/OffensiveNotice\")\n  }, {\n    flag: frontmatter.flagProfane,\n    component: () => import(\"../components/ProfanityNotice\")\n  }, {\n    flag: frontmatter.flagMultilingual,\n    component: () => import(\"../components/MultilingualNotice\")\n  }, {\n    flag: frontmatter.flagUnreliably,\n    component: () => import(\"../components/UnreliablyNotice\")\n  }, {\n    flag: frontmatter.flagPolitical,\n    component: () => import(\"../components/PoliticsNotice\")\n  }, {\n    flag: frontmatter.flagCognitohazard,\n    component: () => import(\"../components/CognitohazardNotice\")\n  }, {\n    flag: frontmatter.flagHidden,\n    component: () => import(\"../components/HiddenNotice\")\n  }];\n  const {0: loadedNotices, 1: setLoadedNotices} = useState([]);\n  useEffect(() => {\n    notices.forEach(_ref3 => {\n      let {flag, component} = _ref3;\n      if (flag) {\n        component().then(module => {\n          setLoadedNotices(prev => [].concat(_toConsumableArray(prev), [module.default]));\n        });\n      }\n    });\n  }, []);\n  return React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.15\n    }\n  }, React.createElement(PostBanner, {\n    postNumber: frontmatter.index,\n    date: frontmatter.date,\n    updated: frontmatter.updated,\n    readTime: readTime,\n    difficulty: frontmatter.difficultyLevel,\n    title: frontmatter.title,\n    desc: frontmatter.desc,\n    banner: frontmatter.banner,\n    section: section,\n    postKey: keyCurrent,\n    isMindfuckery: frontmatter.flagMindfuckery,\n    mainTag: frontmatter.mainTag\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\",\n      maxWidth: \"75%\",\n      marginLeft: \"auto\",\n      paddingRight: \"1vw\",\n      marginTop: \"-6vh\",\n      marginBottom: \"4vh\"\n    }\n  }, frontmatter.otherTags.map((tag, index) => React.createElement(\"span\", {\n    key: index,\n    className: `noselect ${stylesTagBadges.tagPosts}`,\n    style: {\n      margin: \"0 5px 5px 0\"\n    }\n  }, tag))), React.createElement(\"div\", {\n    className: \"postBody\"\n  }, React.createElement(TableOfContents, {\n    toc: tableOfContents\n  })), React.createElement(\"br\", null), React.createElement(\"div\", {\n    style: {\n      margin: \"0 10% -2vh 30%\",\n      textAlign: \"right\"\n    }\n  }, React.createElement(motion.button, {\n    className: `noselect ${stylesCustomPostLayouts.postButton}`,\n    id: stylesCustomPostLayouts.postLayoutSwitchButton,\n    onClick: toggleLayout,\n    whileTap: {\n      scale: 0.93\n    }\n  }, React.createElement(motion.div, {\n    className: stylesButtonsCommon.buttonTextWrapper,\n    key: isWideLayout,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }, isWideLayout ? \"Switch to default layout\" : \"Switch to wide layout\"))), React.createElement(\"br\", null), React.createElement(\"div\", {\n    className: \"postBody\",\n    style: {\n      margin: isWideLayout ? \"0 -14%\" : \"\",\n      maxWidth: isWideLayout ? \"200%\" : \"\",\n      transition: \"margin 1s ease, max-width 1s ease, padding 1s ease\"\n    }\n  }, React.createElement(\"div\", {\n    className: `${stylesCustomPostLayouts.textContent} ${isAnimating ? stylesCustomPostLayouts.fadeOut : stylesCustomPostLayouts.fadeIn}`\n  }, loadedNotices.map((NoticeComponent, index) => React.createElement(NoticeComponent, {\n    key: index\n  })), frontmatter.indexCourse ? React.createElement(PartOfCourseNotice, {\n    index: frontmatter.indexCourse,\n    category: frontmatter.courseCategoryName\n  }) : \"\", React.createElement(ImageContext.Provider, {\n    value: {\n      images: allPostImages.nodes,\n      basePath: basePath.replace(/\\/$/, '') + '/'\n    }\n  }, React.createElement(MDXProvider, {\n    components: {\n      Image\n    }\n  }, children)))), React.createElement(PostBottom, {\n    nextPost: nextPost,\n    lastPost: lastPost,\n    keyCurrent: keyCurrent,\n    section: section\n  }));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head(_ref4) {\n  var _frontmatter$banner, _frontmatter$banner$c, _frontmatter$banner$c2, _frontmatter$banner$c3, _frontmatter$banner$c4;\n  let {data} = _ref4;\n  const {frontmatter} = data.mdx;\n  const title = frontmatter.titleSEO || frontmatter.title;\n  const titleOG = frontmatter.titleOG || title;\n  const titleTwitter = frontmatter.titleTwitter || title;\n  const description = frontmatter.descSEO || frontmatter.desc;\n  const descriptionOG = frontmatter.descOG || description;\n  const descriptionTwitter = frontmatter.descTwitter || description;\n  const schemaType = frontmatter.schemaType || \"BlogPosting\";\n  const keywords = frontmatter.keywordsSEO;\n  const datePublished = frontmatter.date;\n  const dateModified = frontmatter.updated || datePublished;\n  const imageOG = frontmatter.imageOG || ((_frontmatter$banner = frontmatter.banner) === null || _frontmatter$banner === void 0 ? void 0 : (_frontmatter$banner$c = _frontmatter$banner.childImageSharp) === null || _frontmatter$banner$c === void 0 ? void 0 : (_frontmatter$banner$c2 = _frontmatter$banner$c.gatsbyImageData) === null || _frontmatter$banner$c2 === void 0 ? void 0 : (_frontmatter$banner$c3 = _frontmatter$banner$c2.images) === null || _frontmatter$banner$c3 === void 0 ? void 0 : (_frontmatter$banner$c4 = _frontmatter$banner$c3.fallback) === null || _frontmatter$banner$c4 === void 0 ? void 0 : _frontmatter$banner$c4.src);\n  const imageAltOG = frontmatter.imageAltOG || descriptionOG;\n  const imageTwitter = frontmatter.imageTwitter || imageOG;\n  const imageAltTwitter = frontmatter.imageAltTwitter || descriptionTwitter;\n  const canonicalUrl = frontmatter.canonicalURL;\n  const flagHidden = frontmatter.flagHidden || false;\n  const mainTag = frontmatter.mainTag || \"Posts\";\n  const section = frontmatter.slug.split('/')[1] || \"posts\";\n  const type = \"article\";\n  const {siteUrl} = useSiteMetadata();\n  const breadcrumbJSON = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": [{\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": siteUrl\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 2,\n      \"name\": mainTag,\n      \"item\": `${siteUrl}/${frontmatter.slug.split('/')[1]}`\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 3,\n      \"name\": title,\n      \"item\": `${siteUrl}${frontmatter.slug}`\n    }]\n  };\n  return React.createElement(SEO, {\n    title: title + \" - avrtt.blog\",\n    titleOG: titleOG,\n    titleTwitter: titleTwitter,\n    description: description,\n    descriptionOG: descriptionOG,\n    descriptionTwitter: descriptionTwitter,\n    schemaType: schemaType,\n    keywords: keywords,\n    datePublished: datePublished,\n    dateModified: dateModified,\n    imageOG: imageOG,\n    imageAltOG: imageAltOG,\n    imageTwitter: imageTwitter,\n    imageAltTwitter: imageAltTwitter,\n    canonicalUrl: canonicalUrl,\n    flagHidden: flagHidden,\n    mainTag: mainTag,\n    section: section,\n    type: type\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumbJSON)));\n}\nconst query = \"2571018839\";\n","/* \n\nCopyright © 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\";\nimport Latex from 'react-latex-next';\nimport 'katex/dist/katex.min.css'; \n\ninterface LatexProps {\n  text: string;\n}\n  \nconst L = ({ text }: LatexProps) => {\n  return (\n    <Latex>{text}</Latex>\n  );\n};\nexport default L;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","span","h3","ol","li","ul","strong","_provideComponents","components","Image","id","component","Error","_missingMdxReference","React","Highlight","style","position","href","className","dangerouslySetInnerHTML","__html","Latex","text","Code","alt","path","caption","zoom","wrapper","MDXLayout","TableOfContents","_ref","toc","items","stylesTableOfContents","map","item","index","key","url","onClick","e","handleClick","preventDefault","targetId","replace","targetElement","document","getElementById","scrollIntoView","behavior","block","title","PostTemplate","_ref2","data","mdx","allMdx","allPostImages","children","frontmatter","body","tableOfContents","section","slug","split","sortedPosts","nodes","filter","post","includes","sort","b","currentIndex","findIndex","nextPost","lastPost","trimmedSlug","keyCurrent","exec","basePath","isWideLayout","setIsWideLayout","useState","flagWideLayoutByDefault","isAnimating","setIsAnimating","wordsPerMinute","useEffect","timer","setTimeout","clearTimeout","wordsPerMinuteAdventures","wordsPerMinuteResearch","wordsPerMinuteThoughts","wordCount","RemoveMarkdown","trim","length","readTime","minutes","hours","Math","floor","remainder","formatReadTime","ceil","extraReadTimeMin","notices","flag","flagDraft","flagMindfuckery","flagRewrite","flagOffensive","flagProfane","flagMultilingual","flagUnreliably","flagPolitical","flagCognitohazard","flagHidden","loadedNotices","setLoadedNotices","forEach","_ref3","then","module","prev","concat","_toConsumableArray","default","motion","div","initial","opacity","animate","exit","transition","duration","PostBanner","postNumber","date","updated","difficulty","difficultyLevel","desc","banner","postKey","isMindfuckery","mainTag","display","justifyContent","flexWrap","maxWidth","marginLeft","paddingRight","marginTop","marginBottom","otherTags","tag","stylesTagBadges","margin","textAlign","button","stylesCustomPostLayouts","toggleLayout","whileTap","scale","stylesButtonsCommon","ease","NoticeComponent","indexCourse","PartOfCourseNotice","category","courseCategoryName","ImageContext","Provider","value","images","MDXProvider","PostBottom","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref4","_frontmatter$banner","_frontmatter$banner$c","_frontmatter$banner$c2","_frontmatter$banner$c3","_frontmatter$banner$c4","titleSEO","titleOG","titleTwitter","description","descSEO","descriptionOG","descOG","descriptionTwitter","descTwitter","schemaType","keywords","keywordsSEO","datePublished","dateModified","imageOG","childImageSharp","gatsbyImageData","fallback","src","imageAltOG","imageTwitter","imageAltTwitter","canonicalUrl","canonicalURL","siteUrl","useSiteMetadata","breadcrumbJSON","SEO","type","JSON","stringify"],"sourceRoot":""}