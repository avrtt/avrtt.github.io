{"version":3,"file":"component---src-templates-post-js-content-file-path-src-pages-posts-research-logistic-regression-mdx-17715c532ea1b02fe118.js","mappings":"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","sources":["webpack://avrtt.blog/./src/pages/posts/research/logistic_regression.mdx","webpack://avrtt.blog/./src/templates/post.js","webpack://avrtt.blog/./src/components/Latex/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/**(intro: a quote, catchphrase, joke, etc.)**/\n/*\n\nДля этого поста разобрать Obsidian-заметку (см. папку \"🚧 Unfinished\").\n\n*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Highlight from \"../../../components/Highlight\";\nimport Code from \"../../../components/Code\";\nimport Latex from \"../../../components/Latex\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    br: \"br\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components), {Image} = _components;\n  if (!Image) _missingMdxReference(\"Image\", true);\n  return React.createElement(React.Fragment, null, \"\\n\", React.createElement(\"br\"), \"\\n\", \"\\n\", React.createElement(_components.p, null, \"Logistic regression is a cornerstone technique in supervised machine learning for tackling binary classification tasks. Although it is called a \\\"regression,\\\" it is used primarily for classification, making it a prime example of how linear models can be adapted to classify data. Historically, linear models have been central to both statistics and machine learning (e.g., Nelder and Wedderburn's work on generalized linear models in 1972), and logistic regression stands as one of their most widely recognized forms in predictive analytics.\"), \"\\n\", React.createElement(_components.p, null, \"In a typical classification setting, we have data points represented by feature vectors \", React.createElement(Latex, {\n    text: \"\\\\( x \\\\in \\\\mathbb{R}^d \\\\)\"\n  }), \" and an associated label \", React.createElement(Latex, {\n    text: \"\\\\( y \\\\in \\\\{0, 1\\\\} \\\\)\"\n  }), \". Our goal is to learn a function that can correctly map new, unseen \", React.createElement(Latex, {\n    text: \"\\\\( x \\\\)\"\n  }), \" to a label 0 or 1. For a linear model, one might initially think of extending linear regression by simply thresholding its output. However, such a direct approach can produce values outside the range \", React.createElement(Latex, {\n    text: \"\\\\([0,1]\\\\)\"\n  }), \" and is not ideally suited for probability estimation.\"), \"\\n\", React.createElement(_components.p, null, \"This is where logistic regression enters the scene: it transforms the output of a linear function into a probability via the logistic (sigmoid) function, ensuring that the output always lies within \", React.createElement(Latex, {\n    text: \"\\\\([0,1]\\\\)\"\n  }), \". Although the resulting decision boundary is still linear in the input space, this probability-based interpretation is extremely powerful.\"), \"\\n\", React.createElement(_components.p, null, \"Nonetheless, logistic regression does have certain limitations, especially when dealing with complex, highly non-linear decision boundaries. Newer, more flexible models (e.g., kernel-based SVMs, neural networks) can capture richer representations. Still, logistic regression remains popular due to its interpretability, low computational cost, and the natural probabilistic interpretation of its outputs.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"intuition-behind-logistic-regression\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#intuition-behind-logistic-regression\",\n    \"aria-label\": \"intuition behind logistic regression permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Intuition behind logistic regression\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"transition-from-linear-regression-to-logistic-regression\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#transition-from-linear-regression-to-logistic-regression\",\n    \"aria-label\": \"transition from linear regression to logistic regression permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Transition from linear regression to logistic regression\"), \"\\n\", React.createElement(_components.p, null, \"If we take a naive step from linear regression to classification by simply saying \\\"output class 1 if \", React.createElement(Latex, {\n    text: \"\\\\(w^T x + b\\\\)\"\n  }), \" exceeds some threshold,\\\" we run into problems of interpretability and unbounded outputs. While linear regression tries to fit:\", React.createElement(_components.br), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\hat{y} = w^T x + b \\\\)\"\n  }), \",\", React.createElement(_components.br), \"\\n\", \"this value can exceed 1 or be negative, so it is not a valid probability. Logistic regression solves this by mapping the linear output to the interval \", React.createElement(Latex, {\n    text: \"\\\\([0,1]\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"the-sigmoid-function\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#the-sigmoid-function\",\n    \"aria-label\": \"the sigmoid function permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"The sigmoid function\"), \"\\n\", React.createElement(_components.p, null, \"The heart of logistic regression is the sigmoid (a.k.a. logistic) function:\", React.createElement(_components.br), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\sigma(z) = \\\\frac{1}{1 + e^{-z}} \\\\)\"\n  }), \",\", React.createElement(_components.br), \"\\n\", \"where \", React.createElement(Latex, {\n    text: \"\\\\( z = w^T x + b \\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"For large positive \", React.createElement(Latex, {\n    text: \"\\\\(z\\\\)\"\n  }), \" (i.e., \", React.createElement(Latex, {\n    text: \"\\\\(w^T x + b \\\\gg 0\\\\)\"\n  }), \"), \", React.createElement(Latex, {\n    text: \"\\\\(\\\\sigma(z)\\\\)\"\n  }), \" approaches 1.\"), \"\\n\", React.createElement(_components.li, null, \"For large negative \", React.createElement(Latex, {\n    text: \"\\\\(z\\\\)\"\n  }), \" (i.e., \", React.createElement(Latex, {\n    text: \"\\\\(w^T x + b \\\\ll 0\\\\)\"\n  }), \"), \", React.createElement(Latex, {\n    text: \"\\\\(\\\\sigma(z)\\\\)\"\n  }), \" approaches 0.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Thus, the sigmoid neatly squeezes any real value into the \", React.createElement(Latex, {\n    text: \"\\\\([0,1]\\\\)\"\n  }), \" range, making it suitable as an estimated probability \", React.createElement(Latex, {\n    text: \"\\\\( \\\\hat{p} = \\\\sigma(w^T x + b) \\\\)\"\n  }), \".\"), \"\\n\", React.createElement(Image, {\n    alt: \"Sigmoid function plot\",\n    path: \"\",\n    caption: \"The sigmoid function <Latex text='S(z) = 1/(1 + e^{-z})'/> always outputs a value in [0,1].\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"log-odds-interpretation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#log-odds-interpretation\",\n    \"aria-label\": \"log odds interpretation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Log-odds interpretation\"), \"\\n\", React.createElement(_components.p, null, \"One of logistic regression's most appealing characteristics is its direct log-odds interpretation. Specifically:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\log \\\\left(\\\\frac{p}{1-p}\\\\right) = w^T x + b,\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(p\\\\)\"\n  }), \" is the predicted probability that \", React.createElement(Latex, {\n    text: \"\\\\(y=1\\\\)\"\n  }), \". The left-hand side \", React.createElement(Latex, {\n    text: \"\\\\( \\\\log \\\\big(\\\\frac{p}{1 - p}\\\\big) \\\\)\"\n  }), \" is called the \\\"log-odds\\\" or \\\"logit.\\\" This means a one-unit change in a particular feature \", React.createElement(Latex, {\n    text: \"\\\\(x_j\\\\)\"\n  }), \" corresponds to an additive shift in the log-odds by \", React.createElement(Latex, {\n    text: \"\\\\(w_j\\\\)\"\n  }), \", making the model coefficients directly interpretable in terms of odds ratios.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"comparison-to-other-classification-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#comparison-to-other-classification-methods\",\n    \"aria-label\": \"comparison to other classification methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Comparison to other classification methods\"), \"\\n\", React.createElement(_components.p, null, \"While advanced classifiers — such as random forests, gradient boosting, or neural networks — often outperform logistic regression in highly complex tasks, logistic regression's simplicity and interpretability remain key advantages. In regulated industries like healthcare or finance, understanding why a model makes a certain decision is sometimes paramount, and logistic regression is often more transparent than black-box models.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"cost-function-and-log-loss\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cost-function-and-log-loss\",\n    \"aria-label\": \"cost function and log loss permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Cost function and log loss\"), \"\\n\", React.createElement(_components.p, null, \"Because logistic regression outputs probabilities, a suitable loss function should heavily penalize wrong predictions made with high confidence. The most common choice is the cross-entropy loss, also known as log loss in the binary setting:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nJ(w, b) = - \\\\frac{1}{m} \\\\sum_{i=1}^{m} \\\\Big[y^{(i)} \\\\log(\\\\hat{p}^{(i)}) + (1 - y^{(i)}) \\\\log(1 - \\\\hat{p}^{(i)})\\\\Big],\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\( m \\\\)\"\n  }), \" is the number of training samples, \", React.createElement(Latex, {\n    text: \"\\\\( \\\\hat{p}^{(i)} \\\\)\"\n  }), \" is the predicted probability \", React.createElement(Latex, {\n    text: \"\\\\( \\\\sigma(w^T x^{(i)} + b) \\\\)\"\n  }), \", and \", React.createElement(Latex, {\n    text: \"\\\\( y^{(i)} \\\\)\"\n  }), \" is the true label in \", React.createElement(Latex, {\n    text: \"\\\\{0,1\\\\}\"\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Interpretation of terms:\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(y^{(i)} \\\\log(\\\\hat{p}^{(i)})\\\\)\"\n  }), \": If the true label is 1, we want \", React.createElement(Latex, {\n    text: \"\\\\(\\\\hat{p}^{(i)}\\\\)\"\n  }), \" to be close to 1 to avoid a large penalty.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\((1 - y^{(i)}) \\\\log(1 - \\\\hat{p}^{(i)})\\\\)\"\n  }), \": If the true label is 0, we want \", React.createElement(Latex, {\n    text: \"\\\\(\\\\hat{p}^{(i)}\\\\)\"\n  }), \" to be near 0.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Because the logarithm grows large in magnitude (negatively) as \", React.createElement(Latex, {\n    text: \"\\\\(\\\\hat{p}\\\\)\"\n  }), \" approaches 0, the model is heavily penalized for confident but incorrect predictions. Log loss is convex in terms of \", React.createElement(Latex, {\n    text: \"\\\\(w\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(b\\\\)\"\n  }), \", making it more tractable to optimize than many other losses.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"parameter-estimation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#parameter-estimation\",\n    \"aria-label\": \"parameter estimation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Parameter estimation\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"gradient-descent-approach\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#gradient-descent-approach\",\n    \"aria-label\": \"gradient descent approach permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Gradient descent approach\"), \"\\n\", React.createElement(_components.p, null, \"A widely used method to find optimal parameters \", React.createElement(Latex, {\n    text: \"\\\\( (w, b) \\\\)\"\n  }), \" that minimize the log loss is gradient descent. We iterate:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nw := w - \\\\alpha \\\\frac{\\\\partial J}{\\\\partial w}, \\\\quad b := b - \\\\alpha \\\\frac{\\\\partial J}{\\\\partial b},\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\( \\\\alpha \\\\)\"\n  }), \" is the learning rate, and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\partial J / \\\\partial w\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\partial J / \\\\partial b\\\\)\"\n  }), \" are computed based on the cross-entropy loss. For each sample \", React.createElement(Latex, {\n    text: \"\\\\( (x^{(i)}, y^{(i)}) \\\\)\"\n  }), \", we have:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Latex, {\n    text: \"\\\\( \\\\hat{p}^{(i)} = \\\\sigma\\\\big(w^T x^{(i)} + b\\\\big)\\\\)\"\n  }), \",\"), \"\\n\", React.createElement(_components.p, null, \"and\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\frac{\\\\partial J}{\\\\partial w} = \\\\frac{1}{m} \\\\sum_{i=1}^m \\\\Big(\\\\hat{p}^{(i)} - y^{(i)}\\\\Big) x^{(i)}.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Each update step moves \", React.createElement(Latex, {\n    text: \"\\\\(w\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(b\\\\)\"\n  }), \" in the direction that locally decreases the loss.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"newtons-method-and-other-optimization-techniques\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#newtons-method-and-other-optimization-techniques\",\n    \"aria-label\": \"newtons method and other optimization techniques permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Newton's method and other optimization techniques\"), \"\\n\", React.createElement(_components.p, null, \"For logistic regression, the cross-entropy loss has a nice structure that can also be tackled by second-order optimization methods, such as Newton's method. Newton's method uses curvature information (the Hessian matrix) to converge in fewer steps, though each step can be more computationally expensive. Libraries like statsmodels (in Python) often implement this approach, giving very precise parameter estimates.\"), \"\\n\", React.createElement(_components.p, null, \"Other methods include quasi-Newton approaches (e.g., L-BFGS) or coordinate descent (especially when regularization is involved). In practice, both first-order (gradient descent variants) and second-order methods can be effective depending on dataset size and constraints.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"convergence-and-computational-considerations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#convergence-and-computational-considerations\",\n    \"aria-label\": \"convergence and computational considerations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Convergence and computational considerations\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Learning rate\"), \" (\", React.createElement(Latex, {\n    text: \"\\\\( \\\\alpha \\\\)\"\n  }), \"): Too large can cause divergence; too small can slow convergence.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Number of features\"), \" (\", React.createElement(Latex, {\n    text: \"\\\\( d \\\\)\"\n  }), \"): When \", React.createElement(Latex, {\n    text: \"\\\\( d \\\\)\"\n  }), \" is massive, specialized optimizers or mini-batch gradient methods can improve performance.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Batch vs. stochastic updates\"), \": In large-scale problems, we often use stochastic gradient descent (SGD) or mini-batch SGD for efficiency and faster iteration cycles.\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"properties-of-logistic-regression\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#properties-of-logistic-regression\",\n    \"aria-label\": \"properties of logistic regression permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Properties of logistic regression\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"probabilistic-interpretation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#probabilistic-interpretation\",\n    \"aria-label\": \"probabilistic interpretation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Probabilistic interpretation\"), \"\\n\", React.createElement(_components.p, null, \"A prominent appeal of logistic regression is its ability to produce probabilities. Rather than merely classifying samples as 0 or 1, the model outputs \", React.createElement(Latex, {\n    text: \"\\\\( \\\\hat{p} \\\\)\"\n  }), \" — the probability of belonging to the positive class — enabling well-calibrated decision rules. This is useful in domains (e.g., medical diagnosis) where you might need to act on a predicted probability instead of a hard label.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"decision-boundaries-and-interpretability\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#decision-boundaries-and-interpretability\",\n    \"aria-label\": \"decision boundaries and interpretability permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Decision boundaries and interpretability\"), \"\\n\", React.createElement(_components.p, null, \"Despite producing probability estimates, the final classification boundary in logistic regression is still linear: it is the set of \", React.createElement(Latex, {\n    text: \"\\\\( x \\\\)\"\n  }), \" such that \", React.createElement(Latex, {\n    text: \"\\\\( w^T x + b = 0 \\\\)\"\n  }), \". Points on one side of the hyperplane yield probabilities above 0.5, and on the other side, below 0.5.\"), \"\\n\", React.createElement(_components.p, null, \"Logistic regression remains one of the most interpretable classifiers:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Coefficients \", React.createElement(Latex, {\n    text: \"\\\\( w \\\\)\"\n  })), \": Show how each feature contributes to the log-odds of the outcome.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Intercept \", React.createElement(Latex, {\n    text: \"\\\\( b \\\\)\"\n  })), \": Shifts the decision boundary globally.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"overfitting-and-the-role-of-regularization-l1-l2\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#overfitting-and-the-role-of-regularization-l1-l2\",\n    \"aria-label\": \"overfitting and the role of regularization l1 l2 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Overfitting and the role of regularization (L1, L2)\"), \"\\n\", React.createElement(_components.p, null, \"When the number of features is large compared to the number of samples, logistic regression can overfit. Regularization combats this by penalizing large parameter values:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"L2 regularization\"), \" (\", React.createElement(Latex, {\n    text: \"\\\\( \\\\|\\\\!w\\\\|\\\\!_2^2 \\\\)\"\n  }), \" penalty) tends to shrink coefficients smoothly, often used in practice (a.k.a. \\\"Ridge\\\" regularization).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"L1 regularization\"), \" (\", React.createElement(Latex, {\n    text: \"\\\\( \\\\|\\\\!w\\\\|\\\\!_1 \\\\)\"\n  }), \" penalty) promotes sparsity, driving some coefficients exactly to zero (\\\"Lasso\\\" style).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Regularization affects both interpretability (L1 can yield sparse models that are easier to interpret) and the shape of the decision boundary.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"feature-scaling-and-its-impact\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#feature-scaling-and-its-impact\",\n    \"aria-label\": \"feature scaling and its impact permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Feature scaling and its impact\"), \"\\n\", React.createElement(_components.p, null, \"Because logistic regression is sensitive to the relative scale of features, applying standardization or normalization typically accelerates convergence. This is especially relevant if gradient-based methods are used. Feature scaling ensures all features contribute comparably to the loss gradient, preventing large-scale features from dominating the learning process.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"multiclass-logistic-regression\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#multiclass-logistic-regression\",\n    \"aria-label\": \"multiclass logistic regression permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Multiclass logistic regression\"), \"\\n\", React.createElement(_components.p, null, \"Although logistic regression was originally formulated for binary classification, there are straightforward methods to extend it to multi-class problems.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"one-vs-all-ova-strategy\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#one-vs-all-ova-strategy\",\n    \"aria-label\": \"one vs all ova strategy permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"One-vs-all (OvA) strategy\"), \"\\n\", React.createElement(_components.p, null, \"Sometimes called \\\"one-vs-rest,\\\" the OvA strategy trains a separate binary logistic classifier for each class \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \" by labeling all samples in class \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \" as 1 and all others as 0. For an \", React.createElement(Latex, {\n    text: \"\\\\(N\\\\)\"\n  }), \"-class problem, you end up with \", React.createElement(Latex, {\n    text: \"\\\\(N\\\\)\"\n  }), \" classifiers. A new sample is assigned to the class whose corresponding classifier outputs the highest probability.\"), \"\\n\", React.createElement(Image, {\n    alt: \"One-vs-all classification\",\n    path: \"\",\n    caption: \"Each class receives its own binary classifier distinguishing that class from the rest.\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"one-vs-one-ovo-strategy\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#one-vs-one-ovo-strategy\",\n    \"aria-label\": \"one vs one ovo strategy permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"One-vs-one (OvO) strategy\"), \"\\n\", React.createElement(_components.p, null, \"In one-vs-one, a separate classifier is trained for every pair of classes. For \", React.createElement(Latex, {\n    text: \"\\\\(N\\\\)\"\n  }), \" classes, this leads to \", React.createElement(Latex, {\n    text: \"\\\\(N(N-1)/2\\\\)\"\n  }), \" classifiers. When predicting, each pairwise classifier \\\"votes\\\" for one of the two classes it distinguishes, and the final class is the one with the most votes. This approach can be more efficient if your data is balanced among classes, but it can become cumbersome when \", React.createElement(Latex, {\n    text: \"\\\\(N\\\\)\"\n  }), \" is large.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"softmax-multinomial-logistic-regression-approach\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#softmax-multinomial-logistic-regression-approach\",\n    \"aria-label\": \"softmax multinomial logistic regression approach permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Softmax (multinomial logistic regression) approach\"), \"\\n\", React.createElement(_components.p, null, \"Alternatively, the multinomial logistic regression (also called \\\"softmax regression\\\") generalizes the sigmoid to multiple classes by computing an exponentiated linear score for each class:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(y = k \\\\mid x) = \\\\frac{\\\\exp\\\\big(w_k^T x + b_k\\\\big)}{\\\\sum_{j=1}^N \\\\exp\\\\big(w_j^T x + b_j\\\\big)}.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"This approach uses a cross-entropy loss over all classes simultaneously. It is elegantly handled by many machine learning libraries (e.g., scikit-learn's \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">LogisticRegression</code>\"\n    }\n  }), \" with \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">multi_class='multinomial'</code>\"\n    }\n  }), \").\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"applications-and-practical-tips\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#applications-and-practical-tips\",\n    \"aria-label\": \"applications and practical tips permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Applications and practical tips\"), \"\\n\", React.createElement(_components.p, null, \"Logistic regression is ubiquitous across industries due to its reliability, interpretability, and relative ease of training. Common examples include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Customer churn prediction\"), \": Estimating the probability that a customer will stop using a service.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Medical diagnosis\"), \": Predicting the probability of having a certain disease based on biomarkers and patient history.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Credit scoring\"), \": Assessing the likelihood of default.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"When working with logistic regression in practice, keep these tips in mind:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Data preprocessing\"), \": Clean your data and scale numeric features. Deal with missing values appropriately.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Regularization\"), \": Use \", React.createElement(Latex, {\n    text: \"\\\\( \\\\ell_2 \\\\)\"\n  }), \" or \", React.createElement(Latex, {\n    text: \"\\\\( \\\\ell_1 \\\\)\"\n  }), \" to avoid overfitting, especially with many features.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Imbalanced datasets\"), \": If your positive class is rare, consider oversampling, undersampling, or using class-weight adjustments.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Interpretability\"), \": Logistic regression coefficients are straightforward to interpret, but consider advanced explainability methods (e.g., SHAP, LIME) if needed for more complex use cases.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"simple-python-implementation-example\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#simple-python-implementation-example\",\n    \"aria-label\": \"simple python implementation example permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Simple Python implementation example\"), \"\\n\", React.createElement(_components.p, null, \"Below is a very basic illustration of how one might implement logistic regression \\\"from scratch\\\" in Python using batch gradient descent. In practice, libraries such as scikit-learn, statsmodels, or PyTorch/TensorFlow are preferred for efficient and robust implementations.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&lt;Code text={`\\nimport numpy as np\\n\\ndef sigmoid(z):\\n    return 1 / (1 + np.exp(-z))\\n\\ndef compute_loss_and_gradients(X, y, w, b):\\n    m = X.shape[0]\\n    # Predicted probabilities\\n    z = X.dot(w) + b\\n    p = sigmoid(z)\\n    \\n    # Cross-entropy loss\\n    loss = -np.mean(y * np.log(p) + (1 - y) * np.log(1 - p))\\n    \\n    # Gradients\\n    dw = (1/m) * X.T.dot(p - y)\\n    db = np.mean(p - y)\\n    \\n    return loss, dw, db\\n\\ndef train_logistic_regression(X, y, lr=0.01, num_iters=1000):\\n    np.random.seed(42)\\n    w = np.random.randn(X.shape[1]) * 0.01\\n    b = 0.0\\n    \\n    for i in range(num_iters):\\n        loss, dw, db = compute_loss_and_gradients(X, y, w, b)\\n        w -= lr * dw\\n        b -= lr * db\\n        \\n        if i % 100 == 0:\\n            print(f\\\"Iteration {i}, Loss: {loss:.4f}\\\")\\n    \\n    return w, b\\n\\n# Example usage:\\n# X_train, y_train = ... # Load or generate data\\n# w, b = train_logistic_regression(X_train, y_train, lr=0.1, num_iters=1000)\\n# print(\\\"Trained weights:\\\", w)\\n# print(\\\"Trained bias:\\\", b)\\n`}/></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"In this small script:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"sigmoid\"), \" implements \", React.createElement(Latex, {\n    text: \"\\\\( \\\\sigma(z) \\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, \"The function \", React.createElement(Highlight, null, \"compute_loss_and_gradients\"), \" calculates the cross-entropy loss and its gradients.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Highlight, null, \"train_logistic_regression\"), \" iteratively updates parameters \", React.createElement(Latex, {\n    text: \"\\\\( w \\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\( b \\\\)\"\n  }), \" using gradient descent.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Logistic regression's simplicity keeps such implementations concise and readable.\"), \"\\n\", React.createElement(_components.p, null, \"You now have a deeper, more theoretical understanding of logistic regression: from its origins as a linear classifier with a probabilistic twist, through the details of the cost function, up to its optimization, properties, and multi-class extensions. Logistic regression remains a mainstay in modern data science and machine learning pipelines — especially for interpretable, moderate-scale problems where a straightforward, well-grounded model is invaluable.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/avrtt/Repos/avrtt.github.io/src/pages/posts/research/logistic_regression.mdx\";\nimport React, {useState, useEffect} from 'react';\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\nimport RemoveMarkdown from 'remove-markdown';\nimport {ImageContext} from '../context/ImageContext';\nimport {MDXProvider} from '@mdx-js/react';\nimport Image from '../components/PostImage';\nimport {motion} from 'framer-motion';\nimport SEO from \"../components/seo\";\nimport PostBanner from '../components/PostBanner';\nimport PostBottom from '../components/PostBottom';\nimport {wordsPerMinuteAdventures, wordsPerMinuteResearch, wordsPerMinuteThoughts} from '../data/commonVariables';\nimport {graphql} from 'gatsby';\nimport PartOfCourseNotice from \"../components/PartOfCourseNotice\";\nimport * as stylesButtonsCommon from \"../styles/buttons_common.module.scss\";\nimport * as stylesCustomPostLayouts from \"../styles/custom_post_layouts.module.scss\";\nimport * as stylesTableOfContents from \"../styles/table_of_contents.module.scss\";\nimport * as stylesTagBadges from \"../styles/tag_badges.module.scss\";\nfunction formatReadTime(minutes) {\n  if (minutes <= 10) return '~10 min';\n  if (minutes <= 20) return '~20 min';\n  if (minutes <= 30) return '~30 min';\n  if (minutes <= 40) return '~40 min';\n  if (minutes <= 50) return '~50 min';\n  if (minutes <= 60) return '~1 h';\n  const hours = Math.floor(minutes / 60);\n  const remainder = minutes % 60;\n  if (remainder <= 30) {\n    return `~${hours}${remainder > 0 ? '.5' : ''} h`;\n  }\n  return `~${hours + 1} h`;\n}\nconst TableOfContents = ({toc}) => {\n  if (!toc || !toc.items) return null;\n  const handleClick = (e, url) => {\n    e.preventDefault();\n    const targetId = url.replace('#', '');\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  return React.createElement(\"nav\", {\n    className: stylesTableOfContents.toc\n  }, React.createElement(\"ul\", null, toc.items.map((item, index) => React.createElement(\"li\", {\n    key: index\n  }, React.createElement(\"a\", {\n    href: item.url,\n    onClick: e => handleClick(e, item.url)\n  }, item.title), item.items && React.createElement(TableOfContents, {\n    toc: {\n      items: item.items\n    }\n  })))));\n};\nexport function PostTemplate({data: {mdx, allMdx, allPostImages}, children}) {\n  const {frontmatter, body, tableOfContents} = mdx;\n  const index = frontmatter.index;\n  const slug = frontmatter.slug;\n  const section = slug.split('/')[1];\n  const posts = allMdx.nodes.filter(post => post.frontmatter.slug.includes(`/${section}/`));\n  const sortedPosts = posts.sort((a, b) => a.frontmatter.index - b.frontmatter.index);\n  const currentIndex = sortedPosts.findIndex(post => post.frontmatter.index === index);\n  const nextPost = sortedPosts[currentIndex + 1];\n  const lastPost = sortedPosts[currentIndex - 1];\n  const trimmedSlug = frontmatter.slug.replace(/\\/$/, '');\n  const keyCurrent = (/[^/]*$/).exec(trimmedSlug)[0];\n  const basePath = `posts/${section}/content/${keyCurrent}/`;\n  const [isWideLayout, setIsWideLayout] = useState(frontmatter.flagWideLayoutByDefault);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const toggleLayout = () => {\n    setIsWideLayout(!isWideLayout);\n  };\n  useEffect(() => {\n    setIsAnimating(true);\n    const timer = setTimeout(() => setIsAnimating(false), 340);\n    return () => clearTimeout(timer);\n  }, [isWideLayout]);\n  var wordsPerMinute;\n  if (section === \"adventures\") {\n    wordsPerMinute = wordsPerMinuteAdventures;\n  } else if (section === \"research\") {\n    wordsPerMinute = wordsPerMinuteResearch;\n  } else if (section === \"thoughts\") {\n    wordsPerMinute = wordsPerMinuteThoughts;\n  }\n  const plainTextBody = RemoveMarkdown(body).replace(/import .*? from .*?;/g, '').replace(/<.*?>/g, '').replace(/\\{\\/\\*[\\s\\S]*?\\*\\/\\}/g, '').trim();\n  const wordCount = plainTextBody.split(/\\s+/).length;\n  const baseReadTimeMinutes = Math.ceil(wordCount / wordsPerMinute);\n  const extraTime = frontmatter.extraReadTimeMin || 0;\n  const totalReadTime = baseReadTimeMinutes + extraTime;\n  const readTime = formatReadTime(totalReadTime);\n  const notices = [{\n    flag: frontmatter.flagDraft,\n    component: () => import(\"../components/NotFinishedNotice\")\n  }, {\n    flag: frontmatter.flagMindfuckery,\n    component: () => import(\"../components/MindfuckeryNotice\")\n  }, {\n    flag: frontmatter.flagRewrite,\n    component: () => import(\"../components/RewriteNotice\")\n  }, {\n    flag: frontmatter.flagOffensive,\n    component: () => import(\"../components/OffensiveNotice\")\n  }, {\n    flag: frontmatter.flagProfane,\n    component: () => import(\"../components/ProfanityNotice\")\n  }, {\n    flag: frontmatter.flagMultilingual,\n    component: () => import(\"../components/MultilingualNotice\")\n  }, {\n    flag: frontmatter.flagUnreliably,\n    component: () => import(\"../components/UnreliablyNotice\")\n  }, {\n    flag: frontmatter.flagPolitical,\n    component: () => import(\"../components/PoliticsNotice\")\n  }, {\n    flag: frontmatter.flagCognitohazard,\n    component: () => import(\"../components/CognitohazardNotice\")\n  }, {\n    flag: frontmatter.flagHidden,\n    component: () => import(\"../components/HiddenNotice\")\n  }];\n  const [loadedNotices, setLoadedNotices] = useState([]);\n  useEffect(() => {\n    notices.forEach(({flag, component}) => {\n      if (flag) {\n        component().then(module => {\n          setLoadedNotices(prev => [...prev, module.default]);\n        });\n      }\n    });\n  }, []);\n  return React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.15\n    }\n  }, React.createElement(PostBanner, {\n    postNumber: frontmatter.index,\n    date: frontmatter.date,\n    updated: frontmatter.updated,\n    readTime: readTime,\n    difficulty: frontmatter.difficultyLevel,\n    title: frontmatter.title,\n    desc: frontmatter.desc,\n    banner: frontmatter.banner,\n    section: section,\n    postKey: keyCurrent,\n    isMindfuckery: frontmatter.flagMindfuckery,\n    mainTag: frontmatter.mainTag\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\",\n      maxWidth: \"75%\",\n      marginLeft: \"auto\",\n      paddingRight: \"1vw\",\n      marginTop: \"-6vh\",\n      marginBottom: \"4vh\"\n    }\n  }, frontmatter.otherTags.map((tag, index) => React.createElement(\"span\", {\n    key: index,\n    className: `noselect ${stylesTagBadges.tagPosts}`,\n    style: {\n      margin: \"0 5px 5px 0\"\n    }\n  }, tag))), React.createElement(\"div\", {\n    class: \"postBody\"\n  }, React.createElement(TableOfContents, {\n    toc: tableOfContents\n  })), React.createElement(\"br\"), React.createElement(\"div\", {\n    style: {\n      margin: \"0 10% -2vh 30%\",\n      textAlign: \"right\"\n    }\n  }, React.createElement(motion.button, {\n    class: \"noselect\",\n    className: stylesCustomPostLayouts.postButton,\n    id: stylesCustomPostLayouts.postLayoutSwitchButton,\n    onClick: toggleLayout,\n    whileTap: {\n      scale: 0.93\n    }\n  }, React.createElement(motion.div, {\n    className: stylesButtonsCommon.buttonTextWrapper,\n    key: isWideLayout,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }, isWideLayout ? \"Switch to default layout\" : \"Switch to wide layout\"))), React.createElement(\"br\"), React.createElement(\"div\", {\n    class: \"postBody\",\n    style: {\n      margin: isWideLayout ? \"0 -14%\" : \"\",\n      maxWidth: isWideLayout ? \"200%\" : \"\",\n      transition: \"margin 1s ease, max-width 1s ease, padding 1s ease\"\n    }\n  }, React.createElement(\"div\", {\n    className: `${stylesCustomPostLayouts.textContent} ${isAnimating ? stylesCustomPostLayouts.fadeOut : stylesCustomPostLayouts.fadeIn}`\n  }, loadedNotices.map((NoticeComponent, index) => React.createElement(NoticeComponent, {\n    key: index\n  })), frontmatter.indexCourse ? React.createElement(PartOfCourseNotice, {\n    index: frontmatter.indexCourse,\n    category: frontmatter.courseCategoryName\n  }) : \"\", React.createElement(ImageContext.Provider, {\n    value: {\n      images: allPostImages.nodes,\n      basePath: basePath.replace(/\\/$/, '') + '/'\n    }\n  }, React.createElement(MDXProvider, {\n    components: {\n      Image\n    }\n  }, children)))), React.createElement(PostBottom, {\n    nextPost: nextPost,\n    lastPost: lastPost,\n    keyCurrent: keyCurrent,\n    section: section\n  }));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head({data}) {\n  const {frontmatter} = data.mdx;\n  const title = frontmatter.titleSEO || frontmatter.title;\n  const titleOG = frontmatter.titleOG || title;\n  const titleTwitter = frontmatter.titleTwitter || title;\n  const description = frontmatter.descSEO || frontmatter.desc;\n  const descriptionOG = frontmatter.descOG || description;\n  const descriptionTwitter = frontmatter.descTwitter || description;\n  const schemaType = frontmatter.schemaType || \"BlogPosting\";\n  const keywords = frontmatter.keywordsSEO;\n  const datePublished = frontmatter.date;\n  const dateModified = frontmatter.updated || datePublished;\n  const imageOG = frontmatter.imageOG || frontmatter.banner?.childImageSharp?.gatsbyImageData?.images?.fallback?.src;\n  const imageAltOG = frontmatter.imageAltOG || descriptionOG;\n  const imageTwitter = frontmatter.imageTwitter || imageOG;\n  const imageAltTwitter = frontmatter.imageAltTwitter || descriptionTwitter;\n  const canonicalUrl = frontmatter.canonicalURL;\n  const flagHidden = frontmatter.flagHidden || false;\n  const mainTag = frontmatter.mainTag || \"Posts\";\n  const section = frontmatter.slug.split('/')[1] || \"posts\";\n  const type = \"article\";\n  const {siteUrl} = useSiteMetadata();\n  const breadcrumbJSON = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": [{\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": siteUrl\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 2,\n      \"name\": mainTag,\n      \"item\": `${siteUrl}/${frontmatter.slug.split('/')[1]}`\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 3,\n      \"name\": title,\n      \"item\": `${siteUrl}${frontmatter.slug}`\n    }]\n  };\n  return React.createElement(SEO, {\n    title: title + \" - avrtt.blog\",\n    titleOG: titleOG,\n    titleTwitter: titleTwitter,\n    description: description,\n    descriptionOG: descriptionOG,\n    descriptionTwitter: descriptionTwitter,\n    schemaType: schemaType,\n    keywords: keywords,\n    datePublished: datePublished,\n    dateModified: dateModified,\n    imageOG: imageOG,\n    imageAltOG: imageAltOG,\n    imageTwitter: imageTwitter,\n    imageAltTwitter: imageAltTwitter,\n    canonicalUrl: canonicalUrl,\n    flagHidden: flagHidden,\n    mainTag: mainTag,\n    section: section,\n    type: type\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumbJSON)));\n}\nexport const query = graphql`\n  query($id: String!, $postsFilterRegex: String!, $imagePathRegex: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        index\n        indexCourse\n        title\n        titleSEO\n        titleOG\n        titleTwitter\n        courseCategoryName\n        desc\n        descSEO\n        descOG\n        descTwitter\n        date\n        updated\n        extraReadTimeMin\n        difficultyLevel\n        flagDraft\n        flagMindfuckery\n        flagRewrite\n        flagOffensive\n        flagProfane\n        flagMultilingual\n        flagUnreliably\n        flagPolitical\n        flagCognitohazard\n        flagHidden\n        flagWideLayoutByDefault\n        schemaType\n        mainTag\n        otherTags\n        keywordsSEO\n        banner {\n          childImageSharp {\n            gatsbyImageData(\n\t\t\t\t\t\t\tformats: [JPG, WEBP], \n\t\t\t\t\t\t\tplaceholder: BLURRED, \n\t\t\t\t\t\t\tquality: 100\n\t\t\t\t\t\t)\n          }\n        }\n        imageOG\n        imageAltOG\n        imageTwitter\n        imageAltTwitter\n        canonicalURL\n        slug\n      }\n      body\n      tableOfContents(maxDepth: 3)\n    }\n    allMdx(filter: {frontmatter: {slug: {regex: $postsFilterRegex}}}) {\n      nodes {\n        frontmatter {\n          index\n          slug\n          banner {\n            childImageSharp {\n              gatsbyImageData(\n                formats: [JPG, WEBP],\n                placeholder: BLURRED,\n                quality: 100\n              )\n            }\n          }\n        }\n      }\n    }\n    allPostImages: allFile(\n      filter: { \n        sourceInstanceName: { eq: \"images\" },\n        relativePath: { regex: $imagePathRegex }\n      }\n    ) {\n      nodes {\n        relativePath\n        childImageSharp {\n          gatsbyImageData(\n            layout: CONSTRAINED\n            placeholder: DOMINANT_COLOR\n            quality: 100\n          )\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Latex from 'react-latex-next';\nimport 'katex/dist/katex.min.css'; \n  \nconst L = ({ text }) => {\n  return (\n    <Latex>{text}</Latex>\n  );\n};\nexport default L;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","hr","h2","a","span","h3","br","ul","li","strong","ol","_provideComponents","components","Image","id","component","Error","_missingMdxReference","React","Latex","text","style","position","href","className","dangerouslySetInnerHTML","__html","alt","path","caption","zoom","Highlight","wrapper","MDXLayout","TableOfContents","_ref","toc","items","stylesTableOfContents","map","item","index","key","url","onClick","e","handleClick","preventDefault","targetId","replace","targetElement","document","getElementById","scrollIntoView","behavior","block","title","PostTemplate","_ref2","data","mdx","allMdx","allPostImages","children","frontmatter","body","tableOfContents","section","slug","split","sortedPosts","nodes","filter","post","includes","sort","b","currentIndex","findIndex","nextPost","lastPost","trimmedSlug","keyCurrent","exec","basePath","isWideLayout","setIsWideLayout","useState","flagWideLayoutByDefault","isAnimating","setIsAnimating","wordsPerMinute","useEffect","timer","setTimeout","clearTimeout","wordsPerMinuteAdventures","wordsPerMinuteResearch","wordsPerMinuteThoughts","wordCount","RemoveMarkdown","trim","length","readTime","minutes","hours","Math","floor","remainder","formatReadTime","ceil","extraReadTimeMin","notices","flag","flagDraft","flagMindfuckery","flagRewrite","flagOffensive","flagProfane","flagMultilingual","flagUnreliably","flagPolitical","flagCognitohazard","flagHidden","loadedNotices","setLoadedNotices","forEach","_ref3","then","module","prev","concat","_toConsumableArray","default","motion","div","initial","opacity","animate","exit","transition","duration","PostBanner","postNumber","date","updated","difficulty","difficultyLevel","desc","banner","postKey","isMindfuckery","mainTag","display","justifyContent","flexWrap","maxWidth","marginLeft","paddingRight","marginTop","marginBottom","otherTags","tag","stylesTagBadges","margin","class","textAlign","button","stylesCustomPostLayouts","toggleLayout","whileTap","scale","stylesButtonsCommon","ease","NoticeComponent","indexCourse","PartOfCourseNotice","category","courseCategoryName","ImageContext","Provider","value","images","MDXProvider","PostBottom","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref4","_frontmatter$banner","_frontmatter$banner$c","_frontmatter$banner$c2","_frontmatter$banner$c3","_frontmatter$banner$c4","titleSEO","titleOG","titleTwitter","description","descSEO","descriptionOG","descOG","descriptionTwitter","descTwitter","schemaType","keywords","keywordsSEO","datePublished","dateModified","imageOG","childImageSharp","gatsbyImageData","fallback","src","imageAltOG","imageTwitter","imageAltTwitter","canonicalUrl","canonicalURL","siteUrl","useSiteMetadata","breadcrumbJSON","SEO","type","JSON","stringify"],"sourceRoot":""}