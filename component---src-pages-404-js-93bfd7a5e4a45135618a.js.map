{"version":3,"file":"component---src-pages-404-js-93bfd7a5e4a45135618a.js","mappings":"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","sources":["webpack://avrtt.blog/./src/images/about/photoAbout.jpg","webpack://avrtt.blog/./src/pages/404.js","webpack://avrtt.blog/./src/hooks/useSiteMetadata.js","webpack://avrtt.blog/./src/components/NotFound/index.js","webpack://avrtt.blog/./src/images/icon.png","webpack://avrtt.blog/./src/components/seo.jsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/photoAbout-59cd1848d1acc7ce5078c52886c751d1.jpg\";","import React, { useEffect } from \"react\";\n//import { navigate } from 'gatsby'\nimport NotFound from '../components/NotFound'\nimport SEO from '../components/seo'\n\nconst NotFoundRedirect = () => {\n  /*useEffect(() => {\n    navigate('/frog')\n  }, [])*/\n  //return null\n  return (\n    <main>\n      <NotFound/>\n    </main>\n  )\n}\n\nexport default NotFoundRedirect\n\nexport const Head = () => (\n  <SEO \n    title=\"404 - avrtt.blog\"\n    flagHidden={true}\n  />\n)\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            image\n            siteUrl\n            siteName\n            author\n            twitterUsername\n            facebookUsername\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}","import React, { useEffect } from \"react\";\nimport { navigate } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image';\nimport SEO from '../../components/seo'\n\nconst notFoundStyle = {\n  'display': 'block',\n  'margin-left': 'auto',\n  'margin-right': 'auto', \n  'width': '50%', \n  'margin-top': '100px', \n  'text-align': 'center'\n}\n\nconst NotFound = () => {\n  useEffect(() => {\n    setTimeout(() => {\n      navigate('/')\n    }, 1800)\n  }, [])\n  return (\n    <div style={notFoundStyle}>\n\t    <a href=\"https://www.youtube.com/watch?v=KLn43uJl6o4\">\n        <StaticImage\n          src=\"./mysterious_frog.png\"\n          alt=\"mysterious_frog\"\n          loading=\"eager\"\n          backgroundColor=\"transparent\"\n          placeholder= 'none'\n        />\n      </a>\n\t    <p>Error 404: the frog was found</p>\n\t  </div>\n  );\n};\n\nexport default NotFound;\n\nexport const Head = () => (\n  <SEO \n    title=\"404 - avrtt.blog\"\n    flagHidden={true}\n  />\n)","export default __webpack_public_path__ + \"static/icon-6e7479889441613ea062cf3d71374ab6.png\";","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\"\nimport icon from \"../images/icon.png\"\nimport photoAbout from \"../images/about/photoAbout.jpg\";\n\nfunction convertToISO(dateString) {\n  const [day, month, year] = dateString.split('.').map(Number);\n  const date = new Date(year, month - 1, day);\n  return date.toISOString();\n}\n\nconst generateSchema = ({\n  schemaType, // \"Article\" for Research, \"BlogPosting\" for Adventures & Thoughts, \"WebPage\" for anything else\n  title,\n  description,\n  author,\n  photo,\n  datePublished,\n  dateModified,\n  url,\n  image,\n  siteName,\n  siteUrl,\n  siteLogo,\n  keywords,\n  section,\n}) => {\n\n  const baseSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": schemaType,\n    url,\n    description,\n  }\n\n  if (schemaType === \"Article\" || schemaType === \"BlogPosting\") {\n    return {\n      ...baseSchema,\n      headline: title,\n      image: image ? [image] : undefined,\n      datePublished: datePublished || undefined,\n      dateModified: dateModified || datePublished || undefined,\n      articleSection: section,\n      author: {\n        \"@type\": \"Person\",\n        name: author,\n        image: photo,\n        description: \"Traveler, content creator, data scientist, AI researcher, developer, musician.\",\n        url: `${siteUrl}/about`,\n        sameAs: [\n          \"https://youtube.com/@vladaverett\",\n          \"https://instagram.com/avrttv\",\n          \"https://twitter.com/vladaverett\",\n          \"https://tiktok.com/@vladaverett\",\n          \"https://github.com/avrtt\",\n          \"https://facebook.com/vladaverett\",\n          \"https://youtube.com/@avheuristics\",\n          \"https://t.me/venturingforth\",\n          \"https://t.me/avheuristics\",\n          \"https://kaggle.com/lenferdetroud\",\n          \"https://couchsurfing.com/people/averett\",\n          \"https://youtube.com/@noiserett\",\n          \"https://facebook.com/averett.freelance\",\n          \"https://facebook.com/avrttblog\",\n        ],\n      },\n      publisher: {\n        \"@type\": \"Organization\",\n        name: siteName,\n        logo: {\n          \"@type\": \"ImageObject\",\n          url: siteLogo,\n        },\n      },\n      mainEntityOfPage: url,\n      keywords: Array.isArray(keywords) ? keywords.join(\", \") : keywords\n    }\n  }\n\n  return {\n    ...baseSchema,\n    name: title,\n  }\n}\n\nconst SEO = ({\n  title,\n  titleOG,\n  titleTwitter,\n  description,\n  descriptionOG,\n  descriptionTwitter,\n  schemaType = \"WebPage\",\n  keywords,\n  datePublished,\n  dateModified,\n  image,\n  siteUrl,\n  siteName,\n  author,\n  twitterUsername,\n  facebookUsername,\n  imageOG,\n  imageAltOG,\n  imageTwitter,\n  imageAltTwitter,\n  imageWidth,\n  imageHeight,\n  canonicalUrl,\n  flagHidden = false,\n  section,\n  mainTag,\n  type = \"website\", // for og\n  children,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image: defaultImage,\n    siteUrl: defaultSiteUrl,\n    siteName: defaultSiteName,\n    author: defaultAuthor,\n    twitterUsername: defaultTwitterUsername,\n    facebookUsername: defaultFacebookUsername,\n  } = useSiteMetadata()\n\n  // fallbacks\n  const seoTitle = title || defaultTitle\n  const ogTitle = titleOG || seoTitle\n  const twTitle = titleTwitter || seoTitle\n  const seoDescription = description || defaultDescription\n  const ogDescription = descriptionOG || seoDescription\n  const twDescription = descriptionTwitter || seoDescription\n  const seoImage = image\n    ? (image.startsWith(\"http\") ? image : `${defaultSiteUrl}${image}`)\n    : `${defaultSiteUrl}${defaultImage}`\n  const ogImage = imageOG || seoImage\n  const ogImageAlt = imageAltOG || ogDescription\n  const twImage = imageTwitter || seoImage\n  const twImageAlt = imageAltTwitter || twDescription\n  const seoSiteUrl = siteUrl || defaultSiteUrl\n  const seoSiteName = siteName || defaultSiteName\n  const seoCanonical = canonicalUrl || seoSiteUrl\n  const seoAuthor = author || defaultAuthor\n  const seoDatePublished = datePublished ? convertToISO(datePublished) : new Date().toISOString()\n  const seoDateModified = dateModified ? convertToISO(dateModified) : seoDatePublished\n  const seoTwitterUsername = twitterUsername || defaultTwitterUsername\n  const seoFacebookUsername = facebookUsername || defaultFacebookUsername\n  const seoKeywords = keywords || [\"\"]\n  const seoTag = mainTag || \"\"\n  const seoSection = section || \"\"\n  \n  var seoSectionClarified\n  if (section === \"adventures\" ) { seoSectionClarified = \"Travel\" } \n  else if (section === \"research\" ) { seoSectionClarified = \"Technology\" } \n  else if (section === \"thoughts\" ) { seoSectionClarified = \"Thoughts\" } \n  else { seoSectionClarified = \"\" }\n\n  const schemaJSON = generateSchema({\n    schemaType,\n    title: seoTitle,\n    description: seoDescription,\n    author: seoAuthor,\n    photo: photoAbout,\n    datePublished: seoDatePublished,\n    dateModified: seoDateModified,\n    url: seoCanonical,\n    image: seoImage,\n    siteName: seoSiteName,\n    siteUrl: seoSiteUrl,\n    siteLogo: icon,\n    keywords: seoKeywords,\n    section: seoSection,\n  })\n\n  return (\n    <>\n      <title>{seoTitle}</title>\n      <meta name=\"description\" content={seoDescription} />\n\n      {seoCanonical && <link rel=\"canonical\" href={seoCanonical} />}\n\n      {seoKeywords && (\n        <meta\n          name=\"keywords\"\n          content={Array.isArray(seoKeywords) ? seoKeywords.join(\", \") : seoKeywords}\n        />\n      )}\n\n      <meta property=\"og:title\" content={ogTitle} />\n      <meta property=\"og:description\" content={ogDescription} />\n      <meta property=\"og:updated_time\" content={seoDateModified} />\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:url\" content={seoCanonical} />\n      <meta property=\"og:site_name\" content={seoSiteName} />\n      {ogImage && <meta property=\"og:image\" content={ogImage} />}\n      {imageWidth && <meta property=\"og:image:width\" content={imageWidth} />}\n      {imageHeight && <meta property=\"og:image:height\" content={imageHeight} />}\n      <meta property=\"og:image:alt\" content={ogImageAlt} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      {seoTwitterUsername && (<meta name=\"twitter:creator\" content={seoTwitterUsername} />)}\n      {seoTwitterUsername && (<meta name=\"twitter:site\" content={seoTwitterUsername} />)}\n      <meta name=\"twitter:title\" content={twTitle} />\n      <meta name=\"twitter:description\" content={twDescription} />\n      {twImage && <meta name=\"twitter:image\" content={twImage} />}\n      <meta name=\"twitter:image:alt\" content={twImageAlt} />\n\n      {type === \"article\" && (<meta property=\"article:published_time\" content={seoDatePublished} />)}\n      {type === \"article\" && (<meta property=\"article:modified_time\" content={seoDateModified} />)}\n      {type === \"article\" && seoSectionClarified && (<meta property=\"article:section\" content={seoSectionClarified} />)}\n      {type === \"article\" && seoAuthor && (<meta property=\"article:author\" content={seoAuthor} />)}\n      {type === \"article\" && seoFacebookUsername && (<meta property=\"article:publisher\" content={\"https://www.facebook.com/\" + seoFacebookUsername} />)}\n      {type === \"article\" && seoTag && (<meta property=\"article:tag\" content={seoTag} />)}\n      {type === \"article\" && Array.isArray(seoKeywords) && \n        seoKeywords.map((keyword, i) => (\n          <meta key={i} property=\"article:tag\" content={keyword} />\n        ))\n      }\n\n      <meta name=\"robots\" content={flagHidden ? \"noindex, nofollow\" : \"index, follow\"} />\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaJSON)}\n      </script>\n\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n"],"names":["NotFoundRedirect","React","NotFound","Head","SEO","title","flagHidden","useSiteMetadata","site","useStaticQuery","siteMetadata","notFoundStyle","useEffect","setTimeout","navigate","style","href","StaticImage","src","alt","loading","backgroundColor","placeholder","__imageData","require","convertToISO","dateString","day","month","year","split","map","Number","Date","toISOString","_ref2","titleOG","titleTwitter","description","descriptionOG","descriptionTwitter","schemaType","keywords","datePublished","dateModified","image","siteUrl","siteName","author","twitterUsername","facebookUsername","imageOG","imageAltOG","imageTwitter","imageAltTwitter","imageWidth","imageHeight","canonicalUrl","section","mainTag","type","children","defaultTitle","defaultDescription","defaultImage","defaultSiteUrl","defaultSiteName","defaultAuthor","defaultTwitterUsername","defaultFacebookUsername","seoTitle","ogTitle","twTitle","seoDescription","ogDescription","twDescription","seoImage","startsWith","ogImage","ogImageAlt","twImage","twImageAlt","seoSiteUrl","seoSiteName","seoCanonical","seoAuthor","seoDatePublished","seoDateModified","seoTwitterUsername","seoFacebookUsername","seoKeywords","seoTag","seoSection","seoSectionClarified","schemaJSON","_ref","photo","url","siteLogo","baseSchema","headline","undefined","articleSection","name","sameAs","publisher","logo","mainEntityOfPage","Array","isArray","join","generateSchema","photoAbout","icon","content","rel","property","keyword","i","key","JSON","stringify"],"sourceRoot":""}