{"version":3,"file":"component---src-templates-post-js-content-file-path-src-pages-posts-research-approximate-inference-mdx-5ce62ec21ab989e11a5e.js","mappings":"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","sources":["webpack://avrtt.blog/./src/pages/posts/research/approximate_inference.mdx","webpack://avrtt.blog/./src/templates/post.js","webpack://avrtt.blog/./src/components/Latex/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/**(intro: a quote, catchphrase, joke, etc.)**/\n/*\n\nApproximate inference methods make it possible to learn realistic models from [big data](https://en.wikipedia.org/wiki/Big_data \"Big data\") by trading off computation time for accuracy, when exact learning and [inference](https://en.wikipedia.org/wiki/Inference) are [computationally intractable](https://en.wikipedia.org/wiki/Computationally_intractable).\n\nНесколько методов approximate inference мы уже затрагивали, а именно: markov chain monte carlo, markov random fields и bayesian networks.\n\n## Major methods classes\n- [Laplace's approximation](https://en.wikipedia.org/wiki/Laplace%27s_approximation \"Laplace's approximation\")\n- [Variational Bayesian methods](https://en.wikipedia.org/wiki/Variational_Bayesian_method \"Variational Bayesian method\")\n- [Markov chain Monte Carlo](https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo \"Markov chain Monte Carlo\")\n- [Expectation propagation](https://en.wikipedia.org/wiki/Expectation_propagation \"Expectation propagation\")\n- [Markov random fields](https://en.wikipedia.org/wiki/Markov_random_field \"Markov random field\")\n- [Bayesian networks](https://en.wikipedia.org/wiki/Bayesian_network \"Bayesian network\")\n- [Variational message passing](https://en.wikipedia.org/wiki/Variational_message_passing \"Variational message passing\")\n- Loopy and generalized [belief propagation](https://en.wikipedia.org/wiki/Belief_propagation \"Belief propagation\")\n\nVariational inference\n- factorized distributions\n- properties of factorized approximations\n- example: the unvariate gaussian\n- model comparison\nIllustration: variational mixture of gaussians\n- variational distribution\n- variational lower bound\n- predictive density\n- determining the number of components\n- induced factorizations\nVariational linear regression\n- variatinal distribution\n- predictive distribution\n- lower bound\nExponential family\n- variational message passing\nLocal variational methods\nVariational logistic regression\n- variational posterior distribution\n- optimizing the variational parameters\n- inference of hyperparameters\nExpectation propagation\n- example: the clutter problem\n- expectation propagation on graphs\n\nInference as optimization\nExpectation maximization\nMAP inference and sparse coding\nVariational inference and learning\nLearned approximate inference\n\nhttps://www.geeksforgeeks.org/approximate-inference-in-bayesian-networks/\n\n*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Highlight from \"../../../components/Highlight\";\nimport Code from \"../../../components/Code\";\nimport Latex from \"../../../components/Latex\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    a: \"a\",\n    span: \"span\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {Image} = _components;\n  if (!Image) _missingMdxReference(\"Image\", true);\n  return React.createElement(React.Fragment, null, \"\\n\", React.createElement(\"br\"), \"\\n\", \"\\n\", React.createElement(_components.p, null, \"Approximate inference is one of the most pivotal topics in data science and machine learning, enabling practitioners and researchers to handle complex probabilistic models in scenarios where exact computations are computationally prohibitive. In plain terms, approximate inference is the art of trading off a certain degree of accuracy for a gain in efficiency, allowing us to tackle real-world problems that would otherwise be utterly intractable. The concept arises most notably when dealing with high-dimensional data and sophisticated models that require evaluating integrals or summations over a large or infinite space. In many such instances, computing these integrals exactly has been shown to be \", React.createElement(Highlight, null, \"NP-hard\"), \" or at least extremely costly. By embracing approximate methods, advanced practitioners manage to glean meaningful insights and make robust predictions under constraints of time and computational power.\"), \"\\n\", React.createElement(_components.p, null, \"We can see direct evidence of the necessity of approximate inference when we examine how modern machine learning has progressed in tandem with the growth of datasets. As data has surged in volume and variety, the complexity of models has also escalated. Exact inference in models like fully Bayesian neural networks, Markov random fields, graphical models, or hierarchical Bayesian structures quickly becomes intractable. Researchers have therefore invented a spectrum of approaches to approximate these complex posteriors or marginal likelihoods in a manner that remains feasible and tractable at scale.\"), \"\\n\", React.createElement(_components.p, null, \"Broadly speaking, these families of methods include \", React.createElement(Highlight, null, \"Laplace's approximation\"), \", \", React.createElement(Highlight, null, \"Variational Bayesian methods\"), \", \", React.createElement(Highlight, null, \"Markov chain Monte Carlo (MCMC)\"), \", \", React.createElement(Highlight, null, \"Expectation Propagation (EP)\"), \", and methods rooted in \", React.createElement(Highlight, null, \"Bayesian networks\"), \" and \", React.createElement(Highlight, null, \"Markov random fields\"), \", among others. Each of these techniques exhibits different performance trade-offs and theoretical foundations, yet all revolve around one unifying goal: shaping a simpler approximate distribution or simplified inference mechanism that remains faithful to the actual distribution in practice, while dramatically reducing the required computational overhead.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"11-the-concept-of-approximate-inference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#11-the-concept-of-approximate-inference\",\n    \"aria-label\": \"11 the concept of approximate inference permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.1 The concept of approximate inference\"), \"\\n\", React.createElement(_components.p, null, \"The foundational idea behind approximate inference is straightforward on the surface: we want to find or represent properties of a \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\theta \\\\mid \\\\mathcal{D})\\\\)\"\n  }), \" — for instance, the posterior distribution of latent parameters \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \" given observed data \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathcal{D}\\\\)\"\n  }), \" — without computing the integrals that define \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\theta \\\\mid \\\\mathcal{D})\\\\)\"\n  }), \" in an exact manner. This typically involves some form of approximation. In a Bayesian setup, if we have a prior distribution \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\theta)\\\\)\"\n  }), \" and a likelihood \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\mathcal{D} \\\\mid \\\\theta)\\\\)\"\n  }), \", the posterior is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(\\\\theta \\\\mid \\\\mathcal{D}) = \\\\frac{p(\\\\theta)\\\\, p(\\\\mathcal{D}\\\\mid \\\\theta)}{p(\\\\mathcal{D})}.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"However, the evidence \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\mathcal{D})\\\\)\"\n  }), \" (the normalizing constant) is itself an integral (or sum, if discrete) over all possible latent configurations:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(\\\\mathcal{D}) = \\\\int p(\\\\theta)\\\\, p(\\\\mathcal{D}\\\\mid \\\\theta) \\\\, d\\\\theta.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Such integrals can be extremely high-dimensional and prohibitively expensive to compute exactly when \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \" is in a large parameter space, or when the model is nonlinearly structured.\"), \"\\n\", React.createElement(_components.p, null, \"Approximate inference addresses this by either sampling from \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\theta \\\\mid \\\\mathcal{D})\\\\)\"\n  }), \" using Monte Carlo techniques, or by positing a simpler class of distributions — such as a factorized Gaussian — and optimizing the parameters of that simpler class in order to approximate the true posterior. Another approach is to iteratively refine local approximations to each factor or node in a graphical model, as in expectation propagation or loopy belief propagation. In all cases, the overarching concept is: we can't do it exactly, so we approximate.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"12-the-need-for-approximation-in-large-scale-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#12-the-need-for-approximation-in-large-scale-models\",\n    \"aria-label\": \"12 the need for approximation in large scale models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.2 The need for approximation in large-scale models\"), \"\\n\", React.createElement(_components.p, null, \"The main driver for approximate methods is scale. When dealing with big data or extremely expressive models (e.g., deep neural networks with hierarchical Bayesian structure or very large random fields in computer vision), exact approaches to inference become infeasible. Even in moderate-scale problems, the integrals or summations required by exact inference often grow exponentially with dimension or complexity. This growth is sometimes referred to as the \\\"curse of dimensionality\\\".\"), \"\\n\", React.createElement(_components.p, null, \"Approximate inference solutions, by design, allow for different trade-offs: some approximate methods give faster but less accurate results, while others require more computation but achieve closer approximations. For example, Markov chain Monte Carlo can deliver highly accurate results if we allow enough time for the chain to mix, but it may be slower for extremely large datasets. Variational inference, on the other hand, can be faster but may introduce biases depending on how we factorize the approximate distribution. The ultimate choice depends on the problem setting, the structure of the model, the computational resources at hand, and the precision needed.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"13-organization-of-this-article\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#13-organization-of-this-article\",\n    \"aria-label\": \"13 organization of this article permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.3 Organization of this article\"), \"\\n\", React.createElement(_components.p, null, \"In this expansive piece, I will guide you through the main theoretical setups and computational strategies used in approximate inference. We'll start by reviewing the computational burden that motivates approximate inference. Then, we'll dive into the principal families of approximate inference approaches, including Laplace's approximation, Markov chain Monte Carlo, variational methods, and expectation propagation. Next, we'll take a deeper look at variational inference — a particularly popular and general-purpose technique — and see its specialization to logistic regression, linear regression, and mixture models. We'll also devote space to expectation propagation and discuss how inference can be viewed as a form of optimization. We'll close with an overview of learned approximate inference techniques and some advanced references. Throughout, I'll highlight the interplay between these methods and mention relevant advanced frameworks, from Hamiltonian Monte Carlo to black-box variational inference.\"), \"\\n\", React.createElement(_components.p, null, \"As we progress, I encourage you to keep in mind that the choice between these different approximate inference methods usually involves a delicate balance between computational efficiency, ease of implementation, theoretical guarantees, and empirical performance. Each method has strengths and shortcomings; the path forward often lies in your specific domain constraints and objectives.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"2-the-computational-challenge\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-the-computational-challenge\",\n    \"aria-label\": \"2 the computational challenge permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. The computational challenge\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"21-np-hardness-in-inference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#21-np-hardness-in-inference\",\n    \"aria-label\": \"21 np hardness in inference permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1 NP-hardness in inference\"), \"\\n\", React.createElement(_components.p, null, \"Many exact inference problems in graphical models, random fields, and Bayesian networks have been proven to be NP-hard. This is pivotal to understanding the necessity for approximations: if, for instance, you have a complex Markov random field with a large number of interdependent nodes, the partition function \", React.createElement(Latex, {\n    text: \"\\\\(Z\\\\)\"\n  }), \" of that field can be extremely challenging to compute:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nZ = \\\\sum_{\\\\mathbf{x}} \\\\exp\\\\bigl(-E(\\\\mathbf{x})\\\\bigr),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(E(\\\\mathbf{x})\\\\)\"\n  }), \" is an energy function. In continuous analogs, we have integrals in place of sums. The sheer number of terms or the complexity of the integrand can become unmanageable quickly. In fact, studies in the late 20th century (e.g., Cooper, 1990) established that exact inference in general Bayesian networks is NP-hard, and follow-up research (e.g., Dagum & Luby) has added to this notion. Even small increases in model dimension can lead to an exponential blow-up in computational costs.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"22-the-curse-of-dimensionality\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#22-the-curse-of-dimensionality\",\n    \"aria-label\": \"22 the curse of dimensionality permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2 The curse of dimensionality\"), \"\\n\", React.createElement(_components.p, null, \"The curse of dimensionality references how the volume of space grows so quickly with dimension that data become \\\"sparse\\\" relative to the space. For probabilistic inference, it implies that integrals over high-dimensional parameter spaces or latent variable spaces become more difficult to evaluate. Monte Carlo methods can help by exploring this space stochastically, but they can also suffer from slow mixing times if the posterior distribution is very complicated. Variational methods attempt to circumvent the curse of dimensionality by employing factorized approximations that reduce computational demands — though at the cost of possibly introducing systematic errors.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"3-main-families-of-approximate-inference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-main-families-of-approximate-inference\",\n    \"aria-label\": \"3 main families of approximate inference permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3. Main families of approximate inference\"), \"\\n\", React.createElement(_components.p, null, \"In broad terms, we can classify approximate inference approaches into a few major families. While these groups undoubtedly overlap, they serve as useful conceptual signposts.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"31-laplaces-approximation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#31-laplaces-approximation\",\n    \"aria-label\": \"31 laplaces approximation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.1 Laplace's approximation\"), \"\\n\", React.createElement(_components.p, null, \"Laplace's approximation is one of the earliest approaches to approximate integrals of the form:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\int f(\\\\theta)\\\\exp\\\\bigl( -E(\\\\theta)\\\\bigr)\\\\, d\\\\theta.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Intuitively, Laplace's approximation finds the mode (i.e., maximum a posteriori, or a maximum of \", React.createElement(Latex, {\n    text: \"\\\\(-E(\\\\theta)\\\\)\"\n  }), \") and locally approximates the posterior as Gaussian around that mode. Significantly, the performance of Laplace's approximation depends on how well a local Gaussian can capture your posterior distribution. If the posterior is unimodal and somewhat \\\"peaked\\\" around a single maximum, Laplace's approximation can be quite a powerful method. However, for distributions with multiple modes, heavy tails, or non-Gaussian shapes, it might fail to capture critical aspects of the distribution. This method often appears in simpler Bayesian logistic regression or neural network classifiers, though nowadays it is overshadowed in many large-scale contexts by more flexible approaches like variational methods or MCMC.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"32-markov-chain-monte-carlo-mcmc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#32-markov-chain-monte-carlo-mcmc\",\n    \"aria-label\": \"32 markov chain monte carlo mcmc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.2 Markov chain Monte Carlo (MCMC)\"), \"\\n\", React.createElement(_components.p, null, \"MCMC-based techniques like Metropolis-Hastings and Gibbs sampling have been a mainstay of approximate inference for decades (Gelfand & Smith, 1990). The core idea is to construct a Markov chain that asymptotically converges to the distribution of interest. We generate samples from this chain, and those samples approximate either the posterior distribution or other quantities of interest (e.g., marginal likelihoods). MCMC can be very accurate given sufficient time (burn-in and adequate sampling steps), but it can be slow if the state space is large, complex, or if the chain suffers from poor mixing. Specializations and enhancements like Hamiltonian Monte Carlo (Neal, 2011; Betancourt, 2017) and slice sampling can improve performance by using gradient information or adaptive sampling strategies.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"33-variational-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#33-variational-methods\",\n    \"aria-label\": \"33 variational methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.3 Variational methods\"), \"\\n\", React.createElement(_components.p, null, \"Variational inference recasts inference as an optimization problem: we propose a restricted family of distributions \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta)\\\\)\"\n  }), \" and find the member of that family that minimizes the Kullback-Leibler divergence \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathrm{KL}[q(\\\\theta)\\\\,\\\\|\\\\, p(\\\\theta \\\\mid \\\\mathcal{D})]\\\\)\"\n  }), \" or equivalently maximizes the evidence lower bound (\", React.createElement(Highlight, null, \"ELBO\"), \"). The approach can be much faster than MCMC for large datasets and also lends itself well to modern automatic differentiation frameworks. Its main drawback is that the factorization assumptions or chosen family might be too restrictive, introducing a bias. Over the years, more flexible forms of variational distributions (normalizing flows, mixture distributions, etc.) and advanced parameterization techniques have improved the expressiveness of variational methods (Rezende & Mohamed, 2015).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"34-expectation-propagation-ep\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#34-expectation-propagation-ep\",\n    \"aria-label\": \"34 expectation propagation ep permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.4 Expectation propagation (EP)\"), \"\\n\", React.createElement(_components.p, null, \"EP, proposed by Minka (2001), is another iterative approach that refines local approximate factors while aiming to match exact moments in a global sense. EP can be more accurate than simpler variational mean-field methods in cases where the posterior has complicated correlations, but it can also be more delicate to implement. EP is particularly appealing for certain classes of graphical models or integrated likelihood problems.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"35-markov-random-fields-and-bayesian-networks\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#35-markov-random-fields-and-bayesian-networks\",\n    \"aria-label\": \"35 markov random fields and bayesian networks permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.5 Markov random fields and Bayesian networks\"), \"\\n\", React.createElement(_components.p, null, \"Markov random fields (MRFs) and Bayesian networks often require approximate inference in practice. Both rely on the factorization properties of probability distributions to simplify computation, but once the graphs become large or contain loops, exact inference is typically unworkable for real-world problems. Methods like belief propagation (and its variant, loopy belief propagation) are widely used, but they frequently require approximations to handle loops or high-dimensional node states. MRFs are common in computer vision, natural language processing, and other domains where local interactions create a high number of dependencies.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"36-belief-propagation-loopy-and-generalized\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#36-belief-propagation-loopy-and-generalized\",\n    \"aria-label\": \"36 belief propagation loopy and generalized permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.6 Belief propagation (loopy and generalized)\"), \"\\n\", React.createElement(_components.p, null, \"Belief propagation is an algorithm that passes \\\"messages\\\" along the edges of a graphical model to iteratively update local beliefs about each node. The algorithm is exact on certain acyclic structures (like trees), but in graphs with loops (e.g., grids in image processing), it becomes approximate and is then called \\\"loopy belief propagation\\\". Generalized belief propagation extends the approach further, partitioning the graph into regions, each of which can have more complex interactions. While not guaranteed to converge in every instance, it often provides surprisingly good approximations in practice.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"37-factor-graphs-perspective\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#37-factor-graphs-perspective\",\n    \"aria-label\": \"37 factor graphs perspective permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.7 Factor graphs perspective\"), \"\\n\", React.createElement(_components.p, null, \"A factor graph is yet another way of representing how a global function factors into smaller parts. For an inference problem with a joint distribution \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\mathbf{x})\\\\)\"\n  }), \" factored into multiple components, each factor is associated with a set of variables. Message passing on a factor graph unifies many of the ideas behind belief propagation. Various approximate inference algorithms are readily interpretable in this factor graph setting, including expectation propagation (EP) and variational message passing (VMP).\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"4-variational-inference-fundamentals\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#4-variational-inference-fundamentals\",\n    \"aria-label\": \"4 variational inference fundamentals permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4. Variational inference fundamentals\"), \"\\n\", React.createElement(_components.p, null, \"Variational inference is a cornerstone method in modern approximate inference, used extensively when dealing with high-dimensional data or large hierarchical models. The approach rests on the principle of turning an integral or summation-based inference problem into an optimization problem, typically leveraging gradient-based methods. One can see this approach widely employed in large-scale Bayesian neural network training, topic modeling, and even in certain reinforcement learning contexts.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"41-factorized-distributions-and-mean-field-approximation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#41-factorized-distributions-and-mean-field-approximation\",\n    \"aria-label\": \"41 factorized distributions and mean field approximation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.1 Factorized distributions and mean-field approximation\"), \"\\n\", React.createElement(_components.p, null, \"A defining assumption in many variational inference methods is known as the \", React.createElement(Highlight, null, \"mean-field approximation\"), \". The idea is to assume the posterior factorizes over latent variables, for instance:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nq(\\\\theta_1, \\\\ldots, \\\\theta_K) = \\\\prod_{k=1}^K q(\\\\theta_k),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where each \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta_k)\\\\)\"\n  }), \" is (in the simplest version) an independent factor. Although this drastically simplifies the problem, it often introduces significant bias if the true posterior has strong correlations among these parameters. Nonetheless, the mean-field approach allows us to derive closed-form update rules in certain exponential family models, leading to the classic coordinate ascent variational inference algorithm.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"42-variational-lower-bound-and-objective\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#42-variational-lower-bound-and-objective\",\n    \"aria-label\": \"42 variational lower bound and objective permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.2 Variational lower bound and objective\"), \"\\n\", React.createElement(_components.p, null, \"The fundamental objective in variational inference is the \", React.createElement(Highlight, null, \"Evidence Lower BOund (ELBO)\"), \", defined as:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\mathcal{L}(q) = \\\\mathbb{E}_{q(\\\\theta)}[\\\\log p(\\\\mathcal{D}\\\\mid \\\\theta)] - \\\\mathrm{KL}[\\\\,q(\\\\theta)\\\\,\\\\|\\\\,p(\\\\theta)\\\\,].\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"This is called a lower bound because it bounds the log-evidence \", React.createElement(Latex, {\n    text: \"\\\\(\\\\log p(\\\\mathcal{D})\\\\)\"\n  }), \", meaning:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\log p(\\\\mathcal{D}) \\\\ge \\\\mathcal{L}(q).\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Optimizing \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathcal{L}(q)\\\\)\"\n  }), \" with respect to the parameters of \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta)\\\\)\"\n  }), \" will produce a \", React.createElement(Latex, {\n    text: \"\\\\(q\\\\)\"\n  }), \" that approximates the true posterior. The \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathrm{KL}\\\\)\"\n  }), \" term penalizes deviation from the prior, while the expected log likelihood term tries to fit the observed data.\"), \"\\n\", React.createElement(_components.p, null, \"In many typical scenarios, we break down \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta)\\\\)\"\n  }), \" or assume certain parametric forms that facilitate differentiation or closed-form updates. This approach is now widely used in combination with stochastic gradient optimization, known as \", React.createElement(Highlight, null, \"Stochastic Variational Inference (SVI)\"), \" (Hoffman and gang, 2013), which partitions the dataset into mini-batches.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"43-example-univariate-gaussian\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#43-example-univariate-gaussian\",\n    \"aria-label\": \"43 example univariate gaussian permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.3 Example: univariate Gaussian\"), \"\\n\", React.createElement(_components.p, null, \"Let's consider a simple scenario to build intuition, where our posterior in a univariate Gaussian setting might be something of the form:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(\\\\mu \\\\mid X) \\\\propto \\\\mathcal{N}(\\\\mu \\\\mid \\\\mu_0, \\\\sigma_0^2) \\\\prod_{i=1}^N \\\\mathcal{N}(x_i \\\\mid \\\\mu, \\\\sigma^2).\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"We might pick \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\mu) = \\\\mathcal{N}(\\\\mu \\\\mid m, s^2)\\\\)\"\n  }), \" as our approximate distribution. We want to find \", React.createElement(Latex, {\n    text: \"\\\\(m\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(s^2\\\\)\"\n  }), \" that maximize the ELBO. In many simpler cases, we can derive closed-form solutions for these variational parameters. However, in more complicated models, we resort to gradient-based optimization.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"44-variational-mixture-of-gaussians\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#44-variational-mixture-of-gaussians\",\n    \"aria-label\": \"44 variational mixture of gaussians permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.4 Variational mixture of Gaussians\"), \"\\n\", React.createElement(_components.p, null, \"Another illustrative case is a mixture of Gaussians. Suppose we have a mixture model with \", React.createElement(Latex, {\n    text: \"\\\\(K\\\\)\"\n  }), \" components, each with unknown mean and variance (and unknown mixture weights). Variational inference will place a \", React.createElement(Latex, {\n    text: \"\\\\(q\\\\)\"\n  }), \" distribution on each latent component assignment as well as on the continuous parameters. In effect, the entire distribution is factorized, for instance:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nq(\\\\mathbf{Z}, \\\\boldsymbol{\\\\theta}) = \\\\Bigl(\\\\prod_{n} q(z_n)\\\\Bigr)\\\\, \\\\Bigl(\\\\prod_{k} q(\\\\theta_k)\\\\Bigr),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(z_n\\\\)\"\n  }), \" is the latent cluster assignment for data point \", React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \", and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta_k\\\\)\"\n  }), \" includes the parameters of cluster \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \". We can then derive update equations for \", React.createElement(Latex, {\n    text: \"\\\\(z_n\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta_k\\\\)\"\n  }), \" in alternation. This is reminiscent of the \", React.createElement(Highlight, null, \"Expectation-Maximization (EM)\"), \" algorithm, though from a variational perspective, each step is a coordinate ascent in the space of distributions, rather than maximizing with respect to single point estimates.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"45-predictive-density\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#45-predictive-density\",\n    \"aria-label\": \"45 predictive density permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.5 Predictive density\"), \"\\n\", React.createElement(_components.p, null, \"In a variational setting, once we have \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta)\\\\)\"\n  }), \", we can compute the predictive distribution for a new observation \", React.createElement(Latex, {\n    text: \"\\\\(x_{new}\\\\)\"\n  }), \" as:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(x_{new}\\\\mid \\\\mathcal{D}) \\\\approx \\\\int p(x_{new}\\\\mid \\\\theta) \\\\, q(\\\\theta) \\\\, d\\\\theta.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"This integral might be simpler to approximate than the original exact version, especially if \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta)\\\\)\"\n  }), \" has a tractable form. The predictive distribution helps us evaluate the performance and generalization ability of our approximate inference approach.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"46-determining-the-number-of-components\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#46-determining-the-number-of-components\",\n    \"aria-label\": \"46 determining the number of components permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.6 Determining the number of components\"), \"\\n\", React.createElement(_components.p, null, \"In mixture models, the question of how many mixture components \", React.createElement(Latex, {\n    text: \"\\\\(K\\\\)\"\n  }), \" to use arises frequently. A fully Bayesian approach might introduce a prior over \", React.createElement(Latex, {\n    text: \"\\\\(K\\\\)\"\n  }), \" (like a Dirichlet Process prior). Within a variational framework, we can also incorporate model comparison or monitor the ELBO for varying \", React.createElement(Latex, {\n    text: \"\\\\(K\\\\)\"\n  }), \". Typically, a higher \", React.createElement(Latex, {\n    text: \"\\\\(K\\\\)\"\n  }), \" might lead to a better fit (higher ELBO), but at the cost of complexity and potential overfitting if we are not using a nonparametric prior.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"47-induced-factorizations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#47-induced-factorizations\",\n    \"aria-label\": \"47 induced factorizations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.7 Induced factorizations\"), \"\\n\", React.createElement(_components.p, null, \"When we assume or impose factorizations in \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta)\\\\)\"\n  }), \", those assumptions can propagate constraints throughout the model. The factorized nature might, for example, ignore correlated structure in the true posterior. This trade-off is one of the reasons that more advanced forms of variational inference have been explored, such as structured variational approximations, hierarchical factorization schemes, or normalizing flows. Each approach tries to break away from the naive independence assumptions that hamper standard mean-field approaches.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"5-variational-linear-regression\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#5-variational-linear-regression\",\n    \"aria-label\": \"5 variational linear regression permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5. Variational linear regression\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"51-setting-up-the-linear-model\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#51-setting-up-the-linear-model\",\n    \"aria-label\": \"51 setting up the linear model permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5.1 Setting up the linear model\"), \"\\n\", React.createElement(_components.p, null, \"In variational linear regression, we assume a likelihood of the form:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(\\\\mathbf{y} \\\\mid \\\\mathbf{X}, \\\\beta, \\\\sigma^2) = \\\\prod_{n=1}^N \\\\mathcal{N}(y_n \\\\mid \\\\mathbf{x}_n^\\\\top \\\\beta, \\\\sigma^2),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{x}_n\\\\)\"\n  }), \" is the \", React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \"th row of the design matrix \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{X}\\\\)\"\n  }), \", \", React.createElement(Latex, {\n    text: \"\\\\(\\\\beta\\\\)\"\n  }), \" is the vector of regression coefficients, and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\sigma^2\\\\)\"\n  }), \" is the noise variance. A Bayesian treatment places priors on \", React.createElement(Latex, {\n    text: \"\\\\(\\\\beta\\\\)\"\n  }), \" (e.g., a Gaussian with mean 0 and covariance \", React.createElement(Latex, {\n    text: \"\\\\(\\\\alpha^{-1}\\\\mathbf{I}\\\\)\"\n  }), \") and possibly on \", React.createElement(Latex, {\n    text: \"\\\\(\\\\sigma^2\\\\)\"\n  }), \" (like an inverse-Gamma prior).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"52-variational-distribution\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#52-variational-distribution\",\n    \"aria-label\": \"52 variational distribution permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5.2 Variational distribution\"), \"\\n\", React.createElement(_components.p, null, \"We can propose a variational distribution such as:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nq(\\\\beta, \\\\alpha, \\\\sigma^2) = q(\\\\beta \\\\mid \\\\alpha, \\\\sigma^2)\\\\, q(\\\\alpha)\\\\, q(\\\\sigma^2),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"or potentially a simpler factorization. We then write down the ELBO for the linear model, deriving update equations for \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\beta \\\\mid \\\\alpha, \\\\sigma^2)\\\\)\"\n  }), \" or whichever factor we are optimizing at each step.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"53-predictive-distribution\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#53-predictive-distribution\",\n    \"aria-label\": \"53 predictive distribution permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5.3 Predictive distribution\"), \"\\n\", React.createElement(_components.p, null, \"The predictive distribution for a new data point \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{x}_{\\\\text{new}}\\\\)\"\n  }), \" is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(y_{\\\\text{new}} \\\\mid \\\\mathbf{x}_{\\\\text{new}}, \\\\mathbf{X}, \\\\mathbf{y}) \\\\approx \\\\int p(y_{\\\\text{new}} \\\\mid \\\\mathbf{x}_{\\\\text{new}}, \\\\beta, \\\\sigma^2)\\\\, q(\\\\beta, \\\\sigma^2)\\\\, d\\\\beta\\\\, d\\\\sigma^2.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"If \", React.createElement(Latex, {\n    text: \"\\\\(q\\\\)\"\n  }), \" is factorized Gaussian, this integral can often be performed analytically, though in some cases we rely on numerical approximations or further assumptions. This yields a sense of uncertainty in predictions that purely frequentist linear regression does not directly provide.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"54-lower-bound-interpretation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#54-lower-bound-interpretation\",\n    \"aria-label\": \"54 lower bound interpretation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"5.4 Lower bound interpretation\"), \"\\n\", React.createElement(_components.p, null, \"The variational lower bound in linear regression captures how well the approximate posterior of \", React.createElement(Latex, {\n    text: \"\\\\(\\\\beta\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(\\\\sigma^2\\\\)\"\n  }), \" explains the observed data, minus the KL divergence to the prior distributions. Interpreting the \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathrm{KL}\\\\)\"\n  }), \" term as a complexity penalty helps connect these Bayesian methods to regularization ideas from classical statistics.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"6-the-exponential-family-and-local-variational-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#6-the-exponential-family-and-local-variational-methods\",\n    \"aria-label\": \"6 the exponential family and local variational methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"6. The exponential family and local variational methods\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"61-recap-of-the-exponential-family\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#61-recap-of-the-exponential-family\",\n    \"aria-label\": \"61 recap of the exponential family permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"6.1 Recap of the exponential family\"), \"\\n\", React.createElement(_components.p, null, \"Many common distributions belong to the exponential family, e.g., the Gaussian, Bernoulli, Beta, Gamma, Poisson, and so on. A distribution in the exponential family can be written as:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(x \\\\mid \\\\eta) = h(x)\\\\exp\\\\bigl(\\\\eta^\\\\top T(x) - A(\\\\eta)\\\\bigr),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(\\\\eta\\\\)\"\n  }), \" is the natural parameter, \", React.createElement(Latex, {\n    text: \"\\\\(T(x)\\\\)\"\n  }), \" is the sufficient statistic, \", React.createElement(Latex, {\n    text: \"\\\\(A(\\\\eta)\\\\)\"\n  }), \" is the log-partition function, and \", React.createElement(Latex, {\n    text: \"\\\\(h(x)\\\\)\"\n  }), \" is the base measure. The factorization properties of the exponential family greatly simplify learning and inference in many Bayesian models, especially if the prior is conjugate to the likelihood.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"62-variational-message-passing\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#62-variational-message-passing\",\n    \"aria-label\": \"62 variational message passing permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"6.2 Variational message passing\"), \"\\n\", React.createElement(_components.p, null, \"Variational message passing (VMP) is a technique that generalizes the mean-field updates in factorized approximations by systematically passing messages in a graphical model. Each factor in the model is updated based on local computations that rely on the current estimates of the other factors, typically using the exponential family conjugacy to keep updates in closed form. Some advanced frameworks (e.g., Infer.NET from Microsoft Research) implement VMP as a general-purpose engine for approximate inference in factor graphs. VMP can be seen as a specialized instance of the larger concept of message passing in approximate inference, with a particular emphasis on factorization and conjugacy.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"7-variational-logistic-regression\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#7-variational-logistic-regression\",\n    \"aria-label\": \"7 variational logistic regression permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"7. Variational logistic regression\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"71-variational-posterior-distribution\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#71-variational-posterior-distribution\",\n    \"aria-label\": \"71 variational posterior distribution permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"7.1 Variational posterior distribution\"), \"\\n\", React.createElement(_components.p, null, \"In logistic regression, the likelihood for a binary target \", React.createElement(Latex, {\n    text: \"\\\\(y_i \\\\in \\\\{0,1\\\\}\\\\)\"\n  }), \" given covariates \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathbf{x}_i\\\\)\"\n  }), \" is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\np(y_i = 1 \\\\mid \\\\mathbf{x}_i, \\\\beta) = \\\\sigma(\\\\mathbf{x}_i^\\\\top \\\\beta),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(\\\\sigma(\\\\cdot)\\\\)\"\n  }), \" is the logistic sigmoid function. A Bayesian approach places a prior on \", React.createElement(Latex, {\n    text: \"\\\\(\\\\beta\\\\)\"\n  }), \", typically a Gaussian. Because the logistic function is non-conjugate to the Gaussian prior, the posterior distribution \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\beta \\\\mid \\\\mathbf{X}, \\\\mathbf{y})\\\\)\"\n  }), \" is not available in closed form. Variational methods remedy this by introducing a simpler \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\beta)\\\\)\"\n  }), \" distribution, often Gaussian with a diagonal covariance (in the simplest mean-field approach).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"72-optimizing-the-variational-parameters\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#72-optimizing-the-variational-parameters\",\n    \"aria-label\": \"72 optimizing the variational parameters permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"7.2 Optimizing the variational parameters\"), \"\\n\", React.createElement(_components.p, null, \"We define the ELBO for logistic regression similarly, involving the expected log-likelihood under our \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\beta)\\\\)\"\n  }), \" and the KL divergence from the prior. We then apply gradient-based optimization to refine the variational parameters (the mean and variance of \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\beta)\\\\)\"\n  }), \", for instance). Modern libraries facilitate this procedure by automatically computing gradients via backpropagation. However, the logistic function's presence typically means we resort to either numerical approximations or analytically tractable bounds to handle the logistic link within the ELBO.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"73-inference-of-hyperparameters\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#73-inference-of-hyperparameters\",\n    \"aria-label\": \"73 inference of hyperparameters permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"7.3 Inference of hyperparameters\"), \"\\n\", React.createElement(_components.p, null, \"In some cases, we may not only treat \", React.createElement(Latex, {\n    text: \"\\\\(\\\\beta\\\\)\"\n  }), \" as unknown but also treat the noise variance or regularization hyperparameters as latent variables. The complexity rises if we place hierarchical priors on those hyperparameters. Variational inference extends naturally to these hierarchical setups by augmenting \", React.createElement(Latex, {\n    text: \"\\\\(q\\\\)\"\n  }), \" to also approximate the distribution over that additional set of hyperparameters, albeit with further assumptions to keep computations manageable.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"8-expectation-propagation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#8-expectation-propagation\",\n    \"aria-label\": \"8 expectation propagation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8. Expectation propagation\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"81-intro-to-ep\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#81-intro-to-ep\",\n    \"aria-label\": \"81 intro to ep permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8.1 Intro to EP\"), \"\\n\", React.createElement(_components.p, null, \"Expectation propagation (EP), introduced by Minka (2001), is another message-passing algorithm for approximate inference. It retains site approximations of each factor of the posterior, then iteratively refines these local approximations to match moments (usually means and variances) of certain cavity distributions. Unlike the typical mean-field approach, which can systematically underestimate variances, EP can sometimes better preserve correlations among parameters.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"82-example-the-clutter-problem\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#82-example-the-clutter-problem\",\n    \"aria-label\": \"82 example the clutter problem permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8.2 Example: The clutter problem\"), \"\\n\", React.createElement(_components.p, null, \"One commonly-cited example is the \\\"clutter problem,\\\" in which we have data that might correspond to a real signal plus many noise outliers, requiring a robust inference method. EP can handle these outliers by refining approximate factors that capture heavier tails or certain robust likelihood properties. EP iterates through each data point or factor, removing its approximate contribution from the global posterior (resulting in a cavity distribution), recomputing the refined factor, and then \\\"inserting\\\" it back into the approximate posterior. This cyclical scheme continues until convergence.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"83-ep-in-graphs-local-updates\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#83-ep-in-graphs-local-updates\",\n    \"aria-label\": \"83 ep in graphs local updates permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"8.3 EP in graphs, local updates\"), \"\\n\", React.createElement(_components.p, null, \"For graphical models, EP generalizes well: each factor node in the graph has an approximate factor that gets updated based on the current approximation of all other factors. The local updates can be viewed as corrections to second-order moments that ensure the approximate distribution remains close to the exact posterior in a moment-matching sense. However, EP may fail to converge in some loopy graphs, and when it does converge, it doesn't always guarantee a global optimum. Nonetheless, in many applications like Bayesian neural networks or Gaussian process classification, EP demonstrates strong empirical performance.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"9-inference-as-optimization\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#9-inference-as-optimization\",\n    \"aria-label\": \"9 inference as optimization permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"9. Inference as optimization\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"91-the-link-between-inference-and-parameter-optimization\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#91-the-link-between-inference-and-parameter-optimization\",\n    \"aria-label\": \"91 the link between inference and parameter optimization permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"9.1 The link between inference and parameter optimization\"), \"\\n\", React.createElement(_components.p, null, \"Variational methods illustrate a profound link: we can interpret inference as an optimization problem over distributions, quite akin to parameter estimation in classical machine learning. This viewpoint has been expanded by advanced frameworks that treat the posterior distribution's parameters as hyperparameters in a neural network used to approximate the posterior. More concretely, one might define a neural network that outputs the mean and variance for a factor \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta)\\\\)\"\n  }), \" given certain conditions, in which case training that neural network is effectively approximate Bayesian inference.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"92-stochastic-optimization-in-inference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#92-stochastic-optimization-in-inference\",\n    \"aria-label\": \"92 stochastic optimization in inference permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"9.2 Stochastic optimization in inference\"), \"\\n\", React.createElement(_components.p, null, \"Stochastic optimization, widespread in deep learning, is readily applied to approximate inference. For instance, \", React.createElement(Highlight, null, \"stochastic gradient variational Bayes\"), \" breaks the data into mini-batches, computes unbiased gradient estimates of the ELBO, and increments the variational parameters. Similarly, advanced MCMC methods can harness mini-batches to approximate likelihood gradients (so-called Stochastic Gradient MCMC). These developments make approximate inference feasible and scalable on large, streaming datasets.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"93-the-role-of-gradient-based-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#93-the-role-of-gradient-based-methods\",\n    \"aria-label\": \"93 the role of gradient based methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"9.3 The role of gradient-based methods\"), \"\\n\", React.createElement(_components.p, null, \"One of the biggest leaps in approximate inference in the past decade has been the synergy with gradient-based deep learning libraries. Tools like PyTorch, TensorFlow, and JAX allow for automatic differentiation of complex log-likelihood expressions, making it far easier to implement black-box approximate inference. The \", React.createElement(Highlight, null, \"reparameterization trick\"), \" introduced by Kingma and Welling (2014) in the context of variational autoencoders (VAEs) is precisely about enabling unbiased gradient estimators of the ELBO. The entire field of deep generative models (e.g. VAEs, normalizing flows, and certain types of diffusion models) rests heavily on the premise of approximate inference as gradient-based optimization.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"10-expectation-maximization-em\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#10-expectation-maximization-em\",\n    \"aria-label\": \"10 expectation maximization em permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"10. Expectation Maximization (EM)\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"101-revisiting-the-em-algorithm\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#101-revisiting-the-em-algorithm\",\n    \"aria-label\": \"101 revisiting the em algorithm permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"10.1 Revisiting the EM algorithm\"), \"\\n\", React.createElement(_components.p, null, \"The classic EM algorithm, widely known from mixture models, can also be viewed through the lens of approximate inference. EM alternates between the E-step (computing posterior distributions of latent variables, given parameters) and the M-step (maximizing with respect to parameters, given the distribution of latent variables). In a fully Bayesian approach, we consider the distributions over parameters as well, but EM can be reinterpreted as coordinate ascent on the joint log-likelihood. The schema is reminiscent of the coordinate ascent used in mean-field variational inference, though EM typically yields a single parameter point estimate rather than a distribution over parameters.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"102-em-in-mixture-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#102-em-in-mixture-models\",\n    \"aria-label\": \"102 em in mixture models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"10.2 EM in mixture models\"), \"\\n\", React.createElement(_components.p, null, \"An iconic example is the Gaussian mixture model. In the E-step, we compute the posterior responsibility that each mixture component has for each data point, while the M-step updates the component means, variances, and mixture weights. This is akin to a variational approach that factorizes the distribution of latent cluster assignments. Thus, EM can be seen as a limiting special case of variational inference when \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta)\\\\)\"\n  }), \" is restricted to be a delta function over parameters (i.e., no uncertainty about the parameters themselves).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"103-link-to-approximate-inference-methods\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#103-link-to-approximate-inference-methods\",\n    \"aria-label\": \"103 link to approximate inference methods permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"10.3 Link to approximate inference methods\"), \"\\n\", React.createElement(_components.p, null, \"While EM remains algorithmically simpler in certain classical setups, it does not typically provide full posterior distributions over parameters. That's the difference between a maximum-likelihood or MAP approach and a fully Bayesian method. However, variations like \", React.createElement(Highlight, null, \"variational EM\"), \" exist, bridging these ideas by updating an approximate posterior in the E-step and maximizing hyperparameters or other global parameters in the M-step.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"11-map-inference-and-sparse-coding\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#11-map-inference-and-sparse-coding\",\n    \"aria-label\": \"11 map inference and sparse coding permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"11. MAP inference and sparse coding\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"111-map-fundamentals\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#111-map-fundamentals\",\n    \"aria-label\": \"111 map fundamentals permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"11.1 MAP fundamentals\"), \"\\n\", React.createElement(_components.p, null, \"Maximum a posteriori (MAP) inference is slightly different from the broader problem of computing a full posterior distribution. Instead, MAP focuses on finding the mode of the posterior:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\hat{\\\\theta}_{\\\\text{MAP}} = \\\\arg\\\\max_\\\\theta \\\\; p(\\\\theta \\\\mid \\\\mathcal{D}).\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"When the posterior is unimodal and well-behaved, MAP can be close to the mean of the posterior, but if the posterior is skewed or multimodal, MAP can be an incomplete representation.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"112-connections-to-l1-and-l2-regularization\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#112-connections-to-l1-and-l2-regularization\",\n    \"aria-label\": \"112 connections to l1 and l2 regularization permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"11.2 Connections to L1 and L2 regularization\"), \"\\n\", React.createElement(_components.p, null, \"When we place a Gaussian prior on parameters \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \", performing MAP estimation is equivalent to adding an \", React.createElement(Latex, {\n    text: \"\\\\(L_2\\\\)\"\n  }), \" (ridge) regularization term during maximum likelihood estimation. Similarly, a Laplace prior leads to \", React.createElement(Latex, {\n    text: \"\\\\(L_1\\\\)\"\n  }), \" (lasso) regularization. Hence, these popular forms of regularization in classical machine learning can be interpreted as approximate Bayesian inference under specific prior assumptions, albeit focusing only on the mode.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"113-sparse-coding-as-approximate-inference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#113-sparse-coding-as-approximate-inference\",\n    \"aria-label\": \"113 sparse coding as approximate inference permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"11.3 Sparse coding as approximate inference\"), \"\\n\", React.createElement(_components.p, null, \"Sparse coding, used extensively in signal processing and image recognition, posits that data can be represented by a sparse combination of basis vectors. Often, this is shown mathematically through a cost function that includes an \", React.createElement(Latex, {\n    text: \"\\\\(L_1\\\\)\"\n  }), \" penalty, reflecting a Laplacian prior on the sparse codes. Minimizing that cost is effectively performing MAP inference for the latent codes. Thus, many popular techniques in compressed sensing and dictionary learning can be tied back to approximate inference ideals.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"12-learned-approximate-inference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#12-learned-approximate-inference\",\n    \"aria-label\": \"12 learned approximate inference permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"12. Learned approximate inference\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"121-neural-network-based-inference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#121-neural-network-based-inference\",\n    \"aria-label\": \"121 neural network based inference permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"12.1 Neural network-based inference\"), \"\\n\", React.createElement(_components.p, null, \"A striking development in recent years is the use of neural networks to learn an inference mechanism. Instead of deriving a closed-form or an iterative coordinate ascent scheme, we train a neural network to directly output approximate posterior parameters for every input data point. This approach is part of the broader concept of \", React.createElement(Highlight, null, \"amortized inference\"), \": the cost of learning the inference mapping is amortized over many data points or tasks (Gershman & Goodman, 2014).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"122-amortized-inference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#122-amortized-inference\",\n    \"aria-label\": \"122 amortized inference permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"12.2 Amortized inference\"), \"\\n\", React.createElement(_components.p, null, \"Amortized inference shows up in the \", React.createElement(Highlight, null, \"variational autoencoder (VAE)\"), \" architecture (Kingma & Welling, 2014). The encoder network learns to predict the distribution of latent variables \", React.createElement(Latex, {\n    text: \"\\\\(z\\\\)\"\n  }), \" given data \", React.createElement(Latex, {\n    text: \"\\\\(x\\\\)\"\n  }), \" — effectively a \", React.createElement(Latex, {\n    text: \"\\\\(q(z \\\\mid x)\\\\)\"\n  }), \". This is in contrast to classical variational inference, which might do separate iterative procedures for each data point. By training the encoder to perform this inference for all data points simultaneously, the method reuses computations and can scale extremely well.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"123-black-box-variational-inference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#123-black-box-variational-inference\",\n    \"aria-label\": \"123 black box variational inference permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"12.3 Black-box variational inference\"), \"\\n\", React.createElement(_components.p, null, \"Black-box variational inference (Ranganath, Gerrish & Blei, 2014) grew out of a desire to unify variational inference with automatic differentiation and sample-based gradient estimates. In black-box inference, we only need to specify a log-likelihood function (and sometimes its gradient), while a general-purpose algorithm performs the necessary steps to update the variational distribution. This method significantly broadens the class of models to which variational inference can be applied, including ones that do not fit neatly into conjugate-exponential family frameworks.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"13-advanced-references--expansions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#13-advanced-references--expansions\",\n    \"aria-label\": \"13 advanced references  expansions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"13. Advanced references & expansions\"), \"\\n\", React.createElement(_components.p, null, \"Approximate inference remains a highly active research area, as evidenced by recent contributions in top-tier conferences like NeurIPS, ICML, ICLR, AISTATS, and leading journals such as JMLR. Much of the cutting-edge work aims to handle non-conjugate models, large-scale streaming data, or complex, high-dimensional latent variable models.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"131-hamiltonian-monte-carlo\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#131-hamiltonian-monte-carlo\",\n    \"aria-label\": \"131 hamiltonian monte carlo permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"13.1 Hamiltonian Monte Carlo\"), \"\\n\", React.createElement(_components.p, null, \"A notable extension in the MCMC realm is \", React.createElement(Highlight, null, \"Hamiltonian Monte Carlo (HMC)\"), \", which leverages gradients of the log-posterior to \\\"simulate\\\" a physical system. HMC can traverse parameter space in larger, more efficient jumps, reducing random walk behavior. This typically leads to better mixing and fewer correlation issues between samples. Packages like Stan (Carpenter and gang, 2017) and PyMC embrace HMC as a default sampler for many models.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"132-variational-flows\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#132-variational-flows\",\n    \"aria-label\": \"132 variational flows permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"13.2 Variational flows\"), \"\\n\", React.createElement(_components.p, null, \"Normalizing flows (Rezende & Mohamed, 2015) allow flexible transformations from a simple distribution (e.g., a Gaussian) into a more complex distribution by applying a sequence of invertible transformations. By incorporating such flows into \", React.createElement(Latex, {\n    text: \"\\\\(q(\\\\theta)\\\\)\"\n  }), \", we can drastically increase the expressive power of the variational family, thereby lowering variational gap. Flow-based approximations facilitate capturing multimodality, skewness, and strong correlations — aspects typically missed by standard mean-field methods.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"133-adaptive-importance-sampling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#133-adaptive-importance-sampling\",\n    \"aria-label\": \"133 adaptive importance sampling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"13.3 Adaptive importance sampling\"), \"\\n\", React.createElement(_components.p, null, \"Importance sampling is a classical technique to approximate expected values by weighting samples from a proposal distribution. Modern twists like \", React.createElement(Highlight, null, \"adaptive importance sampling\"), \" keep adjusting the proposal distribution so as to reduce variance in the importance weights. Variations exist that incorporate normalizing flows or Gaussian mixtures as proposals, bridging the gap between classical sampling methods and advanced variational techniques.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"14-a-brief-demonstration-in-code\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#14-a-brief-demonstration-in-code\",\n    \"aria-label\": \"14 a brief demonstration in code permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"14. A brief demonstration in code\"), \"\\n\", React.createElement(_components.p, null, \"To illustrate how one might practically implement a simple approximate inference procedure in Python (using a minimal pseudocode approach), consider a Bayesian logistic regression scenario. We'll outline a straightforward variational approach using gradient-based REINFORCE or reparameterization:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\n\n# Suppose we have data: X (features), y (binary labels)\n\nclass VariationalLogisticRegression(nn.Module):\n    def __init__(self, dim):\n        super().__init__()\n        # For simplicity, let's maintain a mean and log-variance for each parameter\n        self.mean = nn.Parameter(torch.zeros(dim))\n        self.log_var = nn.Parameter(torch.zeros(dim))\n        \n    def forward(self, X):\n        # Sample parameters using the reparameterization trick\n        eps = torch.randn_like(self.mean)\n        w = self.mean + torch.exp(0.5 * self.log_var) * eps\n        \n        # Compute logits\n        logits = X.mm(w.unsqueeze(1)).squeeze()\n        return logits, w\n    \ndef elbo(logits, y, model, prior_mean=0.0, prior_log_var=0.0):\n    # Negative log-likelihood (binary cross-entropy)\n    # Here we combine the logistic loss\n    log_likelihood = -nn.functional.binary_cross_entropy_with_logits(logits, y.float(), reduction='sum')\n    \n    # KL term between q(w) and p(w) ~ N(prior_mean, prior_var), \n    # average over all parameters\n    var_q = torch.exp(model.log_var)\n    var_p = torch.exp(torch.tensor(prior_log_var))\n    \n    # KL(q||p) for factorized Gaussians\n    # = 0.5 * sum( var_q/var_p + (mean_q - mean_p)^2/var_p - len(mean_q) + log(var_p) - log(var_q) )\n    kld = 0.5 * torch.sum(var_q/var_p\n                          + (model.mean - prior_mean).pow(2)/var_p\n                          - 1.0 \n                          + prior_log_var \n                          - model.log_var)\n    \n    # We want to maximize the ELBO, so return negative\n    return log_likelihood - kld\n\n# Example usage (toy):\ndim = 5\nmodel = VariationalLogisticRegression(dim)\noptimizer = optim.Adam(model.parameters(), lr=0.01)\n\nX_torch = torch.randn(100, dim)  # dummy data\ny_torch = (torch.randn(100) > 0).float()  # random labels\n\nfor step in range(1000):\n    optimizer.zero_grad()\n    logits, w_samp = model(X_torch)\n    loss = -elbo(logits, y_torch, model)  # negative ELBO\n    loss.backward()\n    optimizer.step()\n\n# After training, we can examine model.mean, model.log_var as the approximate posterior\nprint(\"Inferred mean:\", model.mean.detach().numpy())\nprint(\"Inferred log_var:\", model.log_var.detach().numpy())\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"This snippet illustrates, in a simplified manner, how one might implement variational logistic regression in a modern machine learning framework. We keep track of the approximate posterior's mean and variance (through \", React.createElement(Highlight, null, \"log_var\"), \"), and each forward pass samples parameters from that approximate posterior. We then compute the negative ELBO and backpropagate to update the variational parameters.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"15-conclusion-like-reflections-and-further-directions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#15-conclusion-like-reflections-and-further-directions\",\n    \"aria-label\": \"15 conclusion like reflections and further directions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"15. Conclusion-like reflections and further directions\"), \"\\n\", React.createElement(_components.p, null, \"Approximate inference is essential for enabling modern data science and machine learning to manage complex models under real-world constraints. Ranging from classical approaches like Laplace's approximation and MCMC to sophisticated, gradient-based variational methods and moment-matching algorithms like expectation propagation, these techniques form the backbone of probabilistic modeling at scale. The trade-offs among these methods influence contemporary model design, from hierarchical Bayesian frameworks to deep latent variable models.\"), \"\\n\", React.createElement(_components.p, null, \"Furthermore, the synergy with neural networks has sparked a new era of \", React.createElement(Highlight, null, \"amortized inference\"), \", significantly accelerating Bayesian workflows that used to be burdensome or even infeasible. Research into normalizing flows, stochastic gradient MCMC, and advanced factorization schemes continues to refine these techniques.\"), \"\\n\", React.createElement(_components.p, null, \"We can anticipate that the ongoing proliferation of big data, streaming applications, and deep probabilistic architectures will strengthen and diversify the role of approximate inference even further. Its ability to glean meaningful structure and quantify uncertainty in otherwise \\\"impossible\\\" integrals stands as a testament to the power and elegance of this field. Whether one is working with Markov random fields in image processing, hierarchical mixture models in genetics, or massive-scale latent variable models in natural language processing, approximate inference stands ready to strike the balance between feasible computation and robust, trustworthy insight.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"references--further-reading\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#references--further-reading\",\n    \"aria-label\": \"references  further reading permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"References & further reading\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Carpenter and gang, 2017. \\\"Stan: A probabilistic programming language.\\\" Journal of Statistical Software.\"), \"\\n\", React.createElement(_components.li, null, \"Gershman & Goodman, 2014. \\\"Amortized inference in probabilistic reasoning.\\\"\"), \"\\n\", React.createElement(_components.li, null, \"Gelfand & Smith, 1990. \\\"Sampling-based approaches to calculating marginal densities.\\\" Journal of the American Statistical Association.\"), \"\\n\", React.createElement(_components.li, null, \"Hoffman, Blei, Wang, & Paisley, 2013. \\\"Stochastic variational inference.\\\" Journal of Machine Learning Research.\"), \"\\n\", React.createElement(_components.li, null, \"Kingma & Welling, 2014. \\\"Auto-encoding variational Bayes.\\\" ICLR.\"), \"\\n\", React.createElement(_components.li, null, \"Minka, 2001. \\\"Expectation propagation for approximate Bayesian inference.\\\" UAI.\"), \"\\n\", React.createElement(_components.li, null, \"Neal, 2011. \\\"MCMC using Hamiltonian dynamics.\\\" Handbook of Markov Chain Monte Carlo.\"), \"\\n\", React.createElement(_components.li, null, \"Ranganath, Gerrish, & Blei, 2014. \\\"Black box variational inference.\\\" AISTATS.\"), \"\\n\", React.createElement(_components.li, null, \"Rezende & Mohamed, 2015. \\\"Variational inference with normalizing flows.\\\" ICML.\"), \"\\n\", React.createElement(_components.li, null, \"Cooper, 1990. \\\"The computational complexity of probabilistic inference using Bayesian belief networks.\\\" Artificial Intelligence.\"), \"\\n\"), \"\\n\", React.createElement(Image, {\n    alt: \"Graphical model for approximate inference illustration\",\n    path: \"\",\n    caption: \"In many real-world graphical models, approximate inference is the lifeline that makes them tractable.\",\n    zoom: \"false\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/avrtt/Repos/avrtt.github.io/src/pages/posts/research/approximate_inference.mdx\";\nimport React, {useState, useEffect} from 'react';\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\nimport RemoveMarkdown from 'remove-markdown';\nimport {ImageContext} from '../context/ImageContext';\nimport {MDXProvider} from '@mdx-js/react';\nimport Image from '../components/PostImage';\nimport {motion} from 'framer-motion';\nimport SEO from \"../components/seo\";\nimport PostBanner from '../components/PostBanner';\nimport PostBottom from '../components/PostBottom';\nimport {wordsPerMinuteAdventures, wordsPerMinuteResearch, wordsPerMinuteThoughts} from '../data/commonVariables';\nimport {graphql} from 'gatsby';\nimport PartOfCourseNotice from \"../components/PartOfCourseNotice\";\nimport * as stylesButtonsCommon from \"../styles/buttons_common.module.scss\";\nimport * as stylesCustomPostLayouts from \"../styles/custom_post_layouts.module.scss\";\nimport * as stylesTableOfContents from \"../styles/table_of_contents.module.scss\";\nimport * as stylesTagBadges from \"../styles/tag_badges.module.scss\";\nfunction formatReadTime(minutes) {\n  if (minutes <= 10) return '~10 min';\n  if (minutes <= 20) return '~20 min';\n  if (minutes <= 30) return '~30 min';\n  if (minutes <= 40) return '~40 min';\n  if (minutes <= 50) return '~50 min';\n  if (minutes <= 60) return '~1 h';\n  const hours = Math.floor(minutes / 60);\n  const remainder = minutes % 60;\n  if (remainder <= 30) {\n    return `~${hours}${remainder > 0 ? '.5' : ''} h`;\n  }\n  return `~${hours + 1} h`;\n}\nconst TableOfContents = ({toc}) => {\n  if (!toc || !toc.items) return null;\n  const handleClick = (e, url) => {\n    e.preventDefault();\n    const targetId = url.replace('#', '');\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  return React.createElement(\"nav\", {\n    className: stylesTableOfContents.toc\n  }, React.createElement(\"ul\", null, toc.items.map((item, index) => React.createElement(\"li\", {\n    key: index\n  }, React.createElement(\"a\", {\n    href: item.url,\n    onClick: e => handleClick(e, item.url)\n  }, item.title), item.items && React.createElement(TableOfContents, {\n    toc: {\n      items: item.items\n    }\n  })))));\n};\nexport function PostTemplate({data: {mdx, allMdx, allPostImages}, children}) {\n  const {frontmatter, body, tableOfContents} = mdx;\n  const index = frontmatter.index;\n  const slug = frontmatter.slug;\n  const section = slug.split('/')[1];\n  const posts = allMdx.nodes.filter(post => post.frontmatter.slug.includes(`/${section}/`));\n  const sortedPosts = posts.sort((a, b) => a.frontmatter.index - b.frontmatter.index);\n  const currentIndex = sortedPosts.findIndex(post => post.frontmatter.index === index);\n  const nextPost = sortedPosts[currentIndex + 1];\n  const lastPost = sortedPosts[currentIndex - 1];\n  const trimmedSlug = frontmatter.slug.replace(/\\/$/, '');\n  const keyCurrent = (/[^/]*$/).exec(trimmedSlug)[0];\n  const basePath = `posts/${section}/content/${keyCurrent}/`;\n  const [isWideLayout, setIsWideLayout] = useState(frontmatter.flagWideLayoutByDefault);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const toggleLayout = () => {\n    setIsWideLayout(!isWideLayout);\n  };\n  useEffect(() => {\n    setIsAnimating(true);\n    const timer = setTimeout(() => setIsAnimating(false), 340);\n    return () => clearTimeout(timer);\n  }, [isWideLayout]);\n  var wordsPerMinute;\n  if (section === \"adventures\") {\n    wordsPerMinute = wordsPerMinuteAdventures;\n  } else if (section === \"research\") {\n    wordsPerMinute = wordsPerMinuteResearch;\n  } else if (section === \"thoughts\") {\n    wordsPerMinute = wordsPerMinuteThoughts;\n  }\n  const plainTextBody = RemoveMarkdown(body).replace(/import .*? from .*?;/g, '').replace(/<.*?>/g, '').replace(/\\{\\/\\*[\\s\\S]*?\\*\\/\\}/g, '').trim();\n  const wordCount = plainTextBody.split(/\\s+/).length;\n  const baseReadTimeMinutes = Math.ceil(wordCount / wordsPerMinute);\n  const extraTime = frontmatter.extraReadTimeMin || 0;\n  const totalReadTime = baseReadTimeMinutes + extraTime;\n  const readTime = formatReadTime(totalReadTime);\n  const notices = [{\n    flag: frontmatter.flagDraft,\n    component: () => import(\"../components/NotFinishedNotice\")\n  }, {\n    flag: frontmatter.flagMindfuckery,\n    component: () => import(\"../components/MindfuckeryNotice\")\n  }, {\n    flag: frontmatter.flagRewrite,\n    component: () => import(\"../components/RewriteNotice\")\n  }, {\n    flag: frontmatter.flagOffensive,\n    component: () => import(\"../components/OffensiveNotice\")\n  }, {\n    flag: frontmatter.flagProfane,\n    component: () => import(\"../components/ProfanityNotice\")\n  }, {\n    flag: frontmatter.flagMultilingual,\n    component: () => import(\"../components/MultilingualNotice\")\n  }, {\n    flag: frontmatter.flagUnreliably,\n    component: () => import(\"../components/UnreliablyNotice\")\n  }, {\n    flag: frontmatter.flagPolitical,\n    component: () => import(\"../components/PoliticsNotice\")\n  }, {\n    flag: frontmatter.flagCognitohazard,\n    component: () => import(\"../components/CognitohazardNotice\")\n  }, {\n    flag: frontmatter.flagHidden,\n    component: () => import(\"../components/HiddenNotice\")\n  }];\n  const [loadedNotices, setLoadedNotices] = useState([]);\n  useEffect(() => {\n    notices.forEach(({flag, component}) => {\n      if (flag) {\n        component().then(module => {\n          setLoadedNotices(prev => [...prev, module.default]);\n        });\n      }\n    });\n  }, []);\n  return React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.15\n    }\n  }, React.createElement(PostBanner, {\n    postNumber: frontmatter.index,\n    date: frontmatter.date,\n    updated: frontmatter.updated,\n    readTime: readTime,\n    difficulty: frontmatter.difficultyLevel,\n    title: frontmatter.title,\n    desc: frontmatter.desc,\n    banner: frontmatter.banner,\n    section: section,\n    postKey: keyCurrent,\n    isMindfuckery: frontmatter.flagMindfuckery,\n    mainTag: frontmatter.mainTag\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\",\n      maxWidth: \"75%\",\n      marginLeft: \"auto\",\n      paddingRight: \"1vw\",\n      marginTop: \"-6vh\",\n      marginBottom: \"4vh\"\n    }\n  }, frontmatter.otherTags.map((tag, index) => React.createElement(\"span\", {\n    key: index,\n    className: `noselect ${stylesTagBadges.tagPosts}`,\n    style: {\n      margin: \"0 5px 5px 0\"\n    }\n  }, tag))), React.createElement(\"div\", {\n    class: \"postBody\"\n  }, React.createElement(TableOfContents, {\n    toc: tableOfContents\n  })), React.createElement(\"br\"), React.createElement(\"div\", {\n    style: {\n      margin: \"0 10% -2vh 30%\",\n      textAlign: \"right\"\n    }\n  }, React.createElement(motion.button, {\n    class: \"noselect\",\n    className: stylesCustomPostLayouts.postButton,\n    id: stylesCustomPostLayouts.postLayoutSwitchButton,\n    onClick: toggleLayout,\n    whileTap: {\n      scale: 0.93\n    }\n  }, React.createElement(motion.div, {\n    className: stylesButtonsCommon.buttonTextWrapper,\n    key: isWideLayout,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }, isWideLayout ? \"Switch to default layout\" : \"Switch to wide layout\"))), React.createElement(\"br\"), React.createElement(\"div\", {\n    class: \"postBody\",\n    style: {\n      margin: isWideLayout ? \"0 -14%\" : \"\",\n      maxWidth: isWideLayout ? \"200%\" : \"\",\n      transition: \"margin 1s ease, max-width 1s ease, padding 1s ease\"\n    }\n  }, React.createElement(\"div\", {\n    className: `${stylesCustomPostLayouts.textContent} ${isAnimating ? stylesCustomPostLayouts.fadeOut : stylesCustomPostLayouts.fadeIn}`\n  }, loadedNotices.map((NoticeComponent, index) => React.createElement(NoticeComponent, {\n    key: index\n  })), frontmatter.indexCourse ? React.createElement(PartOfCourseNotice, {\n    index: frontmatter.indexCourse,\n    category: frontmatter.courseCategoryName\n  }) : \"\", React.createElement(ImageContext.Provider, {\n    value: {\n      images: allPostImages.nodes,\n      basePath: basePath.replace(/\\/$/, '') + '/'\n    }\n  }, React.createElement(MDXProvider, {\n    components: {\n      Image\n    }\n  }, children)))), React.createElement(PostBottom, {\n    nextPost: nextPost,\n    lastPost: lastPost,\n    keyCurrent: keyCurrent,\n    section: section\n  }));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head({data}) {\n  const {frontmatter} = data.mdx;\n  const title = frontmatter.titleSEO || frontmatter.title;\n  const titleOG = frontmatter.titleOG || title;\n  const titleTwitter = frontmatter.titleTwitter || title;\n  const description = frontmatter.descSEO || frontmatter.desc;\n  const descriptionOG = frontmatter.descOG || description;\n  const descriptionTwitter = frontmatter.descTwitter || description;\n  const schemaType = frontmatter.schemaType || \"BlogPosting\";\n  const keywords = frontmatter.keywordsSEO;\n  const datePublished = frontmatter.date;\n  const dateModified = frontmatter.updated || datePublished;\n  const imageOG = frontmatter.imageOG || frontmatter.banner?.childImageSharp?.gatsbyImageData?.images?.fallback?.src;\n  const imageAltOG = frontmatter.imageAltOG || descriptionOG;\n  const imageTwitter = frontmatter.imageTwitter || imageOG;\n  const imageAltTwitter = frontmatter.imageAltTwitter || descriptionTwitter;\n  const canonicalUrl = frontmatter.canonicalURL;\n  const flagHidden = frontmatter.flagHidden || false;\n  const mainTag = frontmatter.mainTag || \"Posts\";\n  const section = frontmatter.slug.split('/')[1] || \"posts\";\n  const type = \"article\";\n  const {siteUrl} = useSiteMetadata();\n  const breadcrumbJSON = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": [{\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": siteUrl\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 2,\n      \"name\": mainTag,\n      \"item\": `${siteUrl}/${frontmatter.slug.split('/')[1]}`\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 3,\n      \"name\": title,\n      \"item\": `${siteUrl}${frontmatter.slug}`\n    }]\n  };\n  return React.createElement(SEO, {\n    title: title + \" - avrtt.blog\",\n    titleOG: titleOG,\n    titleTwitter: titleTwitter,\n    description: description,\n    descriptionOG: descriptionOG,\n    descriptionTwitter: descriptionTwitter,\n    schemaType: schemaType,\n    keywords: keywords,\n    datePublished: datePublished,\n    dateModified: dateModified,\n    imageOG: imageOG,\n    imageAltOG: imageAltOG,\n    imageTwitter: imageTwitter,\n    imageAltTwitter: imageAltTwitter,\n    canonicalUrl: canonicalUrl,\n    flagHidden: flagHidden,\n    mainTag: mainTag,\n    section: section,\n    type: type\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumbJSON)));\n}\nexport const query = graphql`\n  query($id: String!, $postsFilterRegex: String!, $imagePathRegex: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        index\n        indexCourse\n        title\n        titleSEO\n        titleOG\n        titleTwitter\n        courseCategoryName\n        desc\n        descSEO\n        descOG\n        descTwitter\n        date\n        updated\n        extraReadTimeMin\n        difficultyLevel\n        flagDraft\n        flagMindfuckery\n        flagRewrite\n        flagOffensive\n        flagProfane\n        flagMultilingual\n        flagUnreliably\n        flagPolitical\n        flagCognitohazard\n        flagHidden\n        flagWideLayoutByDefault\n        schemaType\n        mainTag\n        otherTags\n        keywordsSEO\n        banner {\n          childImageSharp {\n            gatsbyImageData(\n\t\t\t\t\t\t\tformats: [JPG, WEBP], \n\t\t\t\t\t\t\tplaceholder: BLURRED, \n\t\t\t\t\t\t\tquality: 100\n\t\t\t\t\t\t)\n          }\n        }\n        imageOG\n        imageAltOG\n        imageTwitter\n        imageAltTwitter\n        canonicalURL\n        slug\n      }\n      body\n      tableOfContents(maxDepth: 3)\n    }\n    allMdx(filter: {frontmatter: {slug: {regex: $postsFilterRegex}}}) {\n      nodes {\n        frontmatter {\n          index\n          slug\n          banner {\n            childImageSharp {\n              gatsbyImageData(\n                formats: [JPG, WEBP],\n                placeholder: BLURRED,\n                quality: 100\n              )\n            }\n          }\n        }\n      }\n    }\n    allPostImages: allFile(\n      filter: { \n        sourceInstanceName: { eq: \"images\" },\n        relativePath: { regex: $imagePathRegex }\n      }\n    ) {\n      nodes {\n        relativePath\n        childImageSharp {\n          gatsbyImageData(\n            layout: CONSTRAINED\n            placeholder: DOMINANT_COLOR\n            quality: 100\n          )\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Latex from 'react-latex-next';\nimport 'katex/dist/katex.min.css'; \n  \nconst L = ({ text }) => {\n  return (\n    <Latex>{text}</Latex>\n  );\n};\nexport default L;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h3","a","span","h2","ul","li","_provideComponents","components","Image","id","component","Error","_missingMdxReference","React","Highlight","style","position","href","className","dangerouslySetInnerHTML","__html","Latex","text","Code","alt","path","caption","zoom","wrapper","MDXLayout","TableOfContents","_ref","toc","items","stylesTableOfContents","map","item","index","key","url","onClick","e","handleClick","preventDefault","targetId","replace","targetElement","document","getElementById","scrollIntoView","behavior","block","title","PostTemplate","_ref2","data","mdx","allMdx","allPostImages","children","frontmatter","body","tableOfContents","section","slug","split","sortedPosts","nodes","filter","post","includes","sort","b","currentIndex","findIndex","nextPost","lastPost","trimmedSlug","keyCurrent","exec","basePath","isWideLayout","setIsWideLayout","useState","flagWideLayoutByDefault","isAnimating","setIsAnimating","wordsPerMinute","useEffect","timer","setTimeout","clearTimeout","wordsPerMinuteAdventures","wordsPerMinuteResearch","wordsPerMinuteThoughts","wordCount","RemoveMarkdown","trim","length","readTime","minutes","hours","Math","floor","remainder","formatReadTime","ceil","extraReadTimeMin","notices","flag","flagDraft","flagMindfuckery","flagRewrite","flagOffensive","flagProfane","flagMultilingual","flagUnreliably","flagPolitical","flagCognitohazard","flagHidden","loadedNotices","setLoadedNotices","forEach","_ref3","then","module","prev","concat","_toConsumableArray","default","motion","div","initial","opacity","animate","exit","transition","duration","PostBanner","postNumber","date","updated","difficulty","difficultyLevel","desc","banner","postKey","isMindfuckery","mainTag","display","justifyContent","flexWrap","maxWidth","marginLeft","paddingRight","marginTop","marginBottom","otherTags","tag","stylesTagBadges","margin","class","textAlign","button","stylesCustomPostLayouts","toggleLayout","whileTap","scale","stylesButtonsCommon","ease","NoticeComponent","indexCourse","PartOfCourseNotice","category","courseCategoryName","ImageContext","Provider","value","images","MDXProvider","PostBottom","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref4","_frontmatter$banner","_frontmatter$banner$c","_frontmatter$banner$c2","_frontmatter$banner$c3","_frontmatter$banner$c4","titleSEO","titleOG","titleTwitter","description","descSEO","descriptionOG","descOG","descriptionTwitter","descTwitter","schemaType","keywords","keywordsSEO","datePublished","dateModified","imageOG","childImageSharp","gatsbyImageData","fallback","src","imageAltOG","imageTwitter","imageAltTwitter","canonicalUrl","canonicalURL","siteUrl","useSiteMetadata","breadcrumbJSON","SEO","type","JSON","stringify"],"sourceRoot":""}