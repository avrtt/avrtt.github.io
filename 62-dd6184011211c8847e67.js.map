{"version":3,"file":"62-dd6184011211c8847e67.js","mappings":"oMA+EA,MA7EUA,IAQH,IARI,SACTC,EAAQ,cACRC,EAAgB,IAAG,aACnBC,EAAe,IAAI,SACnBC,EAAW,CAAC,GAAI,IAAG,UACnBC,EAAY,UAAS,MACrBC,EAAK,UACLC,GACDP,EAEC,MAAMQ,GAAeC,EAAAA,EAAAA,QAAO,OACtB,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,IA0CnC,OAxCAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWC,aAAY,KAC3B,GAAIP,EAAaQ,QAAS,CACxB,MAAM,MAAEC,EAAK,OAAEC,GAAWV,EAAaQ,QAAQG,wBAGzCC,EAAOC,KAAKC,SAAWL,EAAQ,GAC/BM,EAAMF,KAAKC,SAAWJ,EAAS,IAG9BM,EAASC,GAAWrB,EACrBsB,EAAOF,EAAUH,KAAKC,UAAYG,EAAUD,GAE5CG,EAAa,CACjBC,GAAIC,KAAKC,MAAQT,KAAKC,SACtBS,UAAWF,KAAKC,MAChBxB,MAAO,CACL0B,SAAU,WACVZ,OACAG,MACAU,QAAS,GACTC,SAAUR,EACVS,MAAO9B,EACP+B,cAAe,OACfC,UAAW,iBAAiBlC,wBAKhCQ,GAAU2B,IACR,MAAMR,EAAMD,KAAKC,MACXS,EAAWD,EAAKE,QAAOC,GAAKX,EAAMW,EAAEV,UAAY5B,IACtD,MAAM,GAANuC,QAAAC,EAAAA,EAAAA,GAAWJ,GAAQ,CAAEZ,GAAU,GAEnC,IACCzB,GAEH,MAAO,IAAM0C,cAAc9B,EAAS,GACnC,CAACZ,EAAeC,EAAcC,EAAUC,IAGzCwC,EAAAA,cAAA,OACEC,IAAKtC,EACLD,UAAWA,EACXD,MAAO,CAAE0B,SAAU,WAAYe,QAAS,kBAAmBzC,IAE1DL,EACAS,EAAMsC,KAAIP,GACTI,EAAAA,cAAA,QAAMI,IAAKR,EAAEb,GAAItB,MAAOmC,EAAEnC,OAAO,QAMnCuC,EAAAA,cAAA,aAAQ,+LAMJ,E,sBCrDV,MAhBwBK,IAEvBL,EAAAA,cAAAA,EAAAA,SAAA,KACCA,EAAAA,cAACM,EAAC,CACD/C,SAAY,CAAC,GAAI,IACjBD,aAAgB,IAChBD,cAAiB,KAEjB2C,EAAAA,cAAA,OAAKO,MAAOC,EAAAA,IACXR,EAAAA,cAAA,UAAIA,EAAAA,cAACS,EAAAA,EAAW,CAACC,QAAQ,aAAaC,WAAW,MAAMC,YAAY,UAAS,IAACZ,EAAAA,cAAA,QAAMvC,MAAO,CAAE6B,MAAO,MAAOuB,WAAY,UAAW,kBACjIb,EAAAA,cAACc,EAAAA,EAAC,CAACC,KAAK,oQ","sources":["webpack://avrtt.blog/./src/components/Burn/index.js","webpack://avrtt.blog/./src/components/OffensiveNotice/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst B = ({\n  children,\n  fireFrequency = 300, // ms\n  fireDuration = 3000, // ms\n  fireSize = [10, 18], // random font size between 10px and 20px\n  fireColor = '#FFC700',\n  style,\n  className,\n}) => {\n\n  const containerRef = useRef(null);\n  const [fires, setFires] = useState([]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n\n        // pick a random position within the container\n        const left = Math.random() * width * 0.8;\n        const top = Math.random() * height * 0.5;\n\n        // choose a random size from the range\n        const [minSize, maxSize] = fireSize;\n        const size = minSize + Math.random() * (maxSize - minSize);\n\n        const newSparkle = {\n          id: Date.now() + Math.random(), // unique id\n          createdAt: Date.now(),\n          style: {\n            position: 'absolute',\n            left,\n            top,\n            opacity: 0.8,\n            fontSize: size,\n            color: fireColor,\n            pointerEvents: 'none',\n            animation: `fireAnimation ${fireDuration}ms linear forwards`\n          }\n        };\n\n        // remove old fires (older than fireDuration) and add the new one\n        setFires((prev) => {\n          const now = Date.now();\n          const filtered = prev.filter(s => now - s.createdAt < fireDuration);\n          return [...filtered, newSparkle];\n        });\n      }\n    }, fireFrequency);\n\n    return () => clearInterval(interval);\n  }, [fireFrequency, fireDuration, fireSize, fireColor]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={{ position: 'relative', display: 'inline-block', ...style }}\n    >\n      {children}\n      {fires.map(s => (\n        <span key={s.id} style={s.style}>\n          🔥\n        </span>\n      ))}\n\n      {/* define the keyframes for the burning animation */}\n      <style>{`\n        @keyframes fireAnimation {\n          0% { opacity: 1; transform: scale(1) rotate(0deg); }\n          100% { opacity: 0; transform: scale(0.5) rotate(0deg); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default B;","import React from \"react\"\nimport M from \"../Markdown\"\nimport B from \"../Burn\"\nimport StickerPack from \"../../components/StickerPack\"\nimport * as stylesPlaques from \"../../styles/plaques.module.scss\"\n\nconst OffensiveNotice = () => {\n  return (\n\t<>\n\t\t<B\n\t\t\tfireSize = {[16, 30]}\n\t\t\tfireDuration = {1000}\n\t\t\tfireFrequency = {300}\n\t\t>\n\t\t\t<div class={stylesPlaques.greyNoticeCompact}>\n\t\t\t\t<h2><StickerPack sticker=\"pepe_punch\" marginLeft=\"0px\" marginRight=\"0.2em\"/> <span style={{ color: \"red\", fontWeight: \"66666\" }}>OFFENSIVENESS</span></h2>\n\t\t\t\t<M text=\"This page may be offensive to some people. It's probably filled with satire to scare off the wrong crowd and attract the right one, or just to make some lulz out of it. Sensitive individuals are advised to [go fuck themselves](/dev/null) right now. 🖕❤️\"/>\n\t\t\t</div>\n\t\t</B>\n\t</>\n  );\n};\nexport default OffensiveNotice;"],"names":["_ref","children","fireFrequency","fireDuration","fireSize","fireColor","style","className","containerRef","useRef","fires","setFires","useState","useEffect","interval","setInterval","current","width","height","getBoundingClientRect","left","Math","random","top","minSize","maxSize","size","newSparkle","id","Date","now","createdAt","position","opacity","fontSize","color","pointerEvents","animation","prev","filtered","filter","s","concat","_toConsumableArray","clearInterval","React","ref","display","map","key","OffensiveNotice","B","class","stylesPlaques","StickerPack","sticker","marginLeft","marginRight","fontWeight","M","text"],"sourceRoot":""}