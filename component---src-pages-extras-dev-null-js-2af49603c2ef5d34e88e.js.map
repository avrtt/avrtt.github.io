{"version":3,"file":"component---src-pages-extras-dev-null-js-2af49603c2ef5d34e88e.js","mappings":"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","sources":["webpack://avrtt.blog/./src/images/about/photoAbout.jpg","webpack://avrtt.blog/./src/gifs/spoody.gif","webpack://avrtt.blog/./src/hooks/useSiteMetadata.js","webpack://avrtt.blog/./src/pages/extras/dev_null.js","webpack://avrtt.blog/./src/images/icon.png","webpack://avrtt.blog/./src/components/seo.jsx","webpack://avrtt.blog/./src/images/spider_web.png"],"sourcesContent":["export default __webpack_public_path__ + \"static/photoAbout-59cd1848d1acc7ce5078c52886c751d1.jpg\";","export default __webpack_public_path__ + \"static/spoody-ef8fbef7c5725e6bd93eab2e87a05264.gif\";","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            image\n            siteUrl\n            siteName\n            author\n            twitterUsername\n            facebookUsername\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}","import React, { useState, useEffect } from \"react\";\nimport SEO from '../../components/seo';\nimport spoody from \"../../gifs/spoody.gif\";\nimport web from \"../../images/spider_web.png\";\n\nconst DevNull = () => {\n  const [randomNum] = useState(() => Math.random() * 10);\n  const [showSpider, setShowSpider] = useState(false);\n  const [forceHideSpider, setForceHideSpider] = useState(false);\n\n  useEffect(() => {\n    const appearTimeout = setTimeout(() => {\n      setShowSpider(true);\n\n      const disappearTimeout = setTimeout(() => {\n        setShowSpider(false);\n      }, 1000);\n\n      return () => clearTimeout(disappearTimeout);\n    }, 0);\n\n    return () => clearTimeout(appearTimeout);\n  }, []);\n\n  useEffect(() => {\n    if (randomNum < 0.5) {\n      const redirectTimeout = setTimeout(() => {\n        window.location.href = \"/dev/\";\n      }, 666);\n      return () => clearTimeout(redirectTimeout);\n    } else if (randomNum < 8) {\n      setForceHideSpider(true);\n    }\n  }, [randomNum]);\n\n  return (\n    <>\n      <div\n        className=\"noselect\"\n        style={{\n          backgroundColor: \"black\",\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          width: \"100vw\",\n          height: \"100vh\",\n          zIndex: 99999,\n        }}\n      >\n        {randomNum >= 0.5 && !forceHideSpider && showSpider && (\n          <img\n            src={spoody}\n            alt=\"spider\"\n            style={{\n              width: \"6rem\",\n              position: \"absolute\",\n              right: \"1rem\",\n              top: 0,\n              zIndex: 99,\n              transition: \"opacity 0.5s ease-out\",\n            }}\n          />\n        )}\n        {randomNum >= 0.5 && (\n          <img\n            src={web}\n            alt=\"spider web\"\n            style={{\n              width: \"14rem\",\n              position: \"absolute\",\n              top: \"-0.4rem\",\n              right: \"-0.2rem\",\n              opacity: 0.5,\n              transition: \"opacity 0.5s ease-out\",\n            }}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default DevNull;\n\nexport const Head = () => (\n  <SEO \n    title=\"â€Ž \"\n    flagHidden={true}\n  />\n)\n","export default __webpack_public_path__ + \"static/icon-6e7479889441613ea062cf3d71374ab6.png\";","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\"\nimport icon from \"../images/icon.png\"\nimport photoAbout from \"../images/about/photoAbout.jpg\";\n\nfunction convertToISO(dateString) {\n  const [day, month, year] = dateString.split('.').map(Number);\n  const date = new Date(year, month - 1, day);\n  return date.toISOString();\n}\n\nconst generateSchema = ({\n  schemaType, // \"Article\" for Research, \"BlogPosting\" for Adventures & Thoughts, \"WebPage\" for anything else\n  title,\n  description,\n  author,\n  photo,\n  datePublished,\n  dateModified,\n  url,\n  image,\n  siteName,\n  siteUrl,\n  siteLogo,\n  keywords,\n  section,\n}) => {\n\n  const baseSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": schemaType,\n    url,\n    description,\n  }\n\n  if (schemaType === \"Article\" || schemaType === \"BlogPosting\") {\n    return {\n      ...baseSchema,\n      headline: title,\n      image: image ? [image] : undefined,\n      datePublished: datePublished || undefined,\n      dateModified: dateModified || datePublished || undefined,\n      articleSection: section,\n      author: {\n        \"@type\": \"Person\",\n        name: author,\n        image: photo,\n        description: \"Traveler, content creator, data scientist, AI researcher, developer, musician.\",\n        url: `${siteUrl}/about`,\n        sameAs: [\n          \"https://youtube.com/@vladaverett\",\n          \"https://instagram.com/avrttv\",\n          \"https://twitter.com/vladaverett\",\n          \"https://tiktok.com/@vladaverett\",\n          \"https://github.com/avrtt\",\n          \"https://facebook.com/vladaverett\",\n          \"https://youtube.com/@avheuristics\",\n          \"https://t.me/venturingforth\",\n          \"https://t.me/avheuristics\",\n          \"https://kaggle.com/lenferdetroud\",\n          \"https://couchsurfing.com/people/averett\",\n          \"https://youtube.com/@noiserett\",\n          \"https://facebook.com/averett.freelance\",\n          \"https://facebook.com/avrttblog\",\n        ],\n      },\n      publisher: {\n        \"@type\": \"Organization\",\n        name: siteName,\n        logo: {\n          \"@type\": \"ImageObject\",\n          url: siteLogo,\n        },\n      },\n      mainEntityOfPage: url,\n      keywords: Array.isArray(keywords) ? keywords.join(\", \") : keywords\n    }\n  }\n\n  return {\n    ...baseSchema,\n    name: title,\n  }\n}\n\nconst SEO = ({\n  title,\n  titleOG,\n  titleTwitter,\n  description,\n  descriptionOG,\n  descriptionTwitter,\n  schemaType = \"WebPage\",\n  keywords,\n  datePublished,\n  dateModified,\n  image,\n  siteUrl,\n  siteName,\n  author,\n  twitterUsername,\n  facebookUsername,\n  imageOG,\n  imageAltOG,\n  imageTwitter,\n  imageAltTwitter,\n  imageWidth,\n  imageHeight,\n  canonicalUrl,\n  flagHidden = false,\n  section,\n  mainTag,\n  type = \"website\", // for og\n  children,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image: defaultImage,\n    siteUrl: defaultSiteUrl,\n    siteName: defaultSiteName,\n    author: defaultAuthor,\n    twitterUsername: defaultTwitterUsername,\n    facebookUsername: defaultFacebookUsername,\n  } = useSiteMetadata()\n\n  // fallbacks\n  const seoTitle = title || defaultTitle\n  const ogTitle = titleOG || seoTitle\n  const twTitle = titleTwitter || seoTitle\n  const seoDescription = description || defaultDescription\n  const ogDescription = descriptionOG || seoDescription\n  const twDescription = descriptionTwitter || seoDescription\n  const seoImage = image\n    ? (image.startsWith(\"http\") ? image : `${defaultSiteUrl}${image}`)\n    : `${defaultSiteUrl}${defaultImage}`\n  const ogImage = imageOG || seoImage\n  const ogImageAlt = imageAltOG || ogDescription\n  const twImage = imageTwitter || seoImage\n  const twImageAlt = imageAltTwitter || twDescription\n  const seoSiteUrl = siteUrl || defaultSiteUrl\n  const seoSiteName = siteName || defaultSiteName\n  const seoCanonical = canonicalUrl || seoSiteUrl\n  const seoAuthor = author || defaultAuthor\n  const seoDatePublished = datePublished ? convertToISO(datePublished) : new Date().toISOString()\n  const seoDateModified = dateModified ? convertToISO(dateModified) : seoDatePublished\n  const seoTwitterUsername = twitterUsername || defaultTwitterUsername\n  const seoFacebookUsername = facebookUsername || defaultFacebookUsername\n  const seoKeywords = keywords || [\"\"]\n  const seoTag = mainTag || \"\"\n  const seoSection = section || \"\"\n  \n  var seoSectionClarified\n  if (section === \"adventures\" ) { seoSectionClarified = \"Travel\" } \n  else if (section === \"research\" ) { seoSectionClarified = \"Technology\" } \n  else if (section === \"thoughts\" ) { seoSectionClarified = \"Thoughts\" } \n  else { seoSectionClarified = \"\" }\n\n  const schemaJSON = generateSchema({\n    schemaType,\n    title: seoTitle,\n    description: seoDescription,\n    author: seoAuthor,\n    photo: photoAbout,\n    datePublished: seoDatePublished,\n    dateModified: seoDateModified,\n    url: seoCanonical,\n    image: seoImage,\n    siteName: seoSiteName,\n    siteUrl: seoSiteUrl,\n    siteLogo: icon,\n    keywords: seoKeywords,\n    section: seoSection,\n  })\n\n  return (\n    <>\n      <title>{seoTitle}</title>\n      <meta name=\"description\" content={seoDescription} />\n\n      {seoCanonical && <link rel=\"canonical\" href={seoCanonical} />}\n\n      {seoKeywords && (\n        <meta\n          name=\"keywords\"\n          content={Array.isArray(seoKeywords) ? seoKeywords.join(\", \") : seoKeywords}\n        />\n      )}\n\n      <meta property=\"og:title\" content={ogTitle} />\n      <meta property=\"og:description\" content={ogDescription} />\n      <meta property=\"og:updated_time\" content={seoDateModified} />\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:url\" content={seoCanonical} />\n      <meta property=\"og:site_name\" content={seoSiteName} />\n      {ogImage && <meta property=\"og:image\" content={ogImage} />}\n      {imageWidth && <meta property=\"og:image:width\" content={imageWidth} />}\n      {imageHeight && <meta property=\"og:image:height\" content={imageHeight} />}\n      <meta property=\"og:image:alt\" content={ogImageAlt} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      {seoTwitterUsername && (<meta name=\"twitter:creator\" content={seoTwitterUsername} />)}\n      {seoTwitterUsername && (<meta name=\"twitter:site\" content={seoTwitterUsername} />)}\n      <meta name=\"twitter:title\" content={twTitle} />\n      <meta name=\"twitter:description\" content={twDescription} />\n      {twImage && <meta name=\"twitter:image\" content={twImage} />}\n      <meta name=\"twitter:image:alt\" content={twImageAlt} />\n\n      {type === \"article\" && (<meta property=\"article:published_time\" content={seoDatePublished} />)}\n      {type === \"article\" && (<meta property=\"article:modified_time\" content={seoDateModified} />)}\n      {type === \"article\" && seoSectionClarified && (<meta property=\"article:section\" content={seoSectionClarified} />)}\n      {type === \"article\" && seoAuthor && (<meta property=\"article:author\" content={seoAuthor} />)}\n      {type === \"article\" && seoFacebookUsername && (<meta property=\"article:publisher\" content={\"https://www.facebook.com/\" + seoFacebookUsername} />)}\n      {type === \"article\" && seoTag && (<meta property=\"article:tag\" content={seoTag} />)}\n      {type === \"article\" && Array.isArray(seoKeywords) && \n        seoKeywords.map((keyword, i) => (\n          <meta key={i} property=\"article:tag\" content={keyword} />\n        ))\n      }\n\n      <meta name=\"robots\" content={flagHidden ? \"noindex, nofollow\" : \"index, follow\"} />\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaJSON)}\n      </script>\n\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n","export default __webpack_public_path__ + \"static/spider_web-389a114866995ce2cee3c7b66818f670.png\";"],"names":["useSiteMetadata","site","useStaticQuery","siteMetadata","DevNull","randomNum","useState","Math","random","showSpider","setShowSpider","forceHideSpider","setForceHideSpider","useEffect","appearTimeout","setTimeout","disappearTimeout","clearTimeout","redirectTimeout","window","location","href","React","className","style","backgroundColor","position","top","left","width","height","zIndex","src","spoody","alt","right","transition","web","opacity","Head","SEO","title","flagHidden","convertToISO","dateString","day","month","year","split","map","Number","Date","toISOString","_ref2","titleOG","titleTwitter","description","descriptionOG","descriptionTwitter","schemaType","keywords","datePublished","dateModified","image","siteUrl","siteName","author","twitterUsername","facebookUsername","imageOG","imageAltOG","imageTwitter","imageAltTwitter","imageWidth","imageHeight","canonicalUrl","section","mainTag","type","children","defaultTitle","defaultDescription","defaultImage","defaultSiteUrl","defaultSiteName","defaultAuthor","defaultTwitterUsername","defaultFacebookUsername","seoTitle","ogTitle","twTitle","seoDescription","ogDescription","twDescription","seoImage","startsWith","ogImage","ogImageAlt","twImage","twImageAlt","seoSiteUrl","seoSiteName","seoCanonical","seoAuthor","seoDatePublished","seoDateModified","seoTwitterUsername","seoFacebookUsername","seoKeywords","seoTag","seoSection","seoSectionClarified","schemaJSON","_ref","photo","url","siteLogo","baseSchema","headline","undefined","articleSection","name","sameAs","publisher","logo","mainEntityOfPage","Array","isArray","join","generateSchema","photoAbout","icon","content","rel","property","keyword","i","key","JSON","stringify"],"sourceRoot":""}