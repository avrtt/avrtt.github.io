{"version":3,"file":"component---src-pages-extras-dev-magnitoshakhtinsk-tsx-d9c44010b8d976342c33.js","mappings":"8HAAA,IAAe,IAA0B,wD,uCCWzC,MAAMA,EAAiB,CACrBC,MAAOA,IAAM,gCACbC,YAAaA,IAAM,gCACnBC,QAASA,IAAM,gCACfC,cAAeA,IAAM,gCACrBC,cAAeA,IAAM,gCACrBC,IAAKA,IAAM,gCACXC,UAAWA,IAAM,gCACjBC,gBAAiBA,IAAM,gCACvBC,MAAOA,IAAM,gCACbC,KAAMA,IAAM,gCACZC,SAAUA,IAAM,gCAChBC,aAAcA,IAAM,gCACpBC,UAAWA,IAAM,+BACjBC,WAAYA,IAAM,+BAClBC,aAAcA,IAAM,gCACpBC,SAAUA,IAAM,+BAChBC,WAAYA,IAAM,gCAClBC,WAAYA,IAAM,gCAClBC,YAAaA,IAAM,gCACnBC,UAAWA,IAAM,gCACjBC,UAAWA,IAAM,gCACjBC,gBAAiBA,IAAM,gCACvBC,gBAAiBA,IAAM,gCACvBC,aAAcA,IAAM,+BACpBC,OAAQA,IAAM,gCACdC,UAAWA,IAAM,gCACjBC,WAAYA,IAAM,gCAClBC,YAAaA,IAAM,gCACnBC,WAAYA,IAAM,gCAClBC,gBAAiBA,IAAM,gCACvBC,UAAWA,IAAM,gCACjBC,UAAWA,IAAM,gCACjBC,OAAQA,IAAM,gCACdC,WAAYA,IAAM,gCAClBC,SAAUA,IAAM,+BAChBC,WAAYA,IAAM,gCAClBC,SAAUA,IAAM,gCAChBC,aAAcA,IAAM,gCACpBC,SAAUA,IAAM,2BAChBC,UAAWA,IAAM,gCA4BnB,IAzBgDC,IAA2D,IAA1D,QAAEC,EAAO,WAAEC,EAAa,MAAK,YAAEC,EAAc,OAAOH,EACnG,MAAM,EAACI,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,UAAwB,MAU5D,IARAC,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAaP,EACf1C,EAAeiD,IACjBjD,EAAeiD,KAAcC,MAAMC,GAAgCL,EAAcK,EAAOC,UAC1F,GACC,CAACV,KAECG,EAAY,OAAO,KAExB,MAAMQ,EAAe,CACnBC,MAAO,QACPC,OAAQ,QACRC,cAAe,SACfC,UAAW,QACXb,YAAaA,EACbD,WAAYA,GAGd,OAAOe,EAAAA,cAAA,OAAKC,IAAI,UAAUC,MAAOP,EAAcQ,IAAKhB,GAAc,C,iFC3E7D,IACIiB,EAAoB,2CACpBC,EAAe,qC,+ECmB1B,UAVqBC,IAEpBN,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,OAAKO,UAAWC,EAAAA,IAClBR,EAAAA,cAAA,UAAIA,EAAAA,cAACS,EAAAA,EAAW,CAACzB,QAAQ,SAASC,WAAW,MAAMC,YAAY,UAAS,oBAClEc,EAAAA,cAACU,EAAAA,EAAC,CAACC,KAAK,kU,6DCSjB,IAVe5B,IAAmC,IAAlC,MAAE6B,EAAK,KAAED,GAAmB5B,EAC1C,OACDiB,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,OAAKO,UAAWC,EAAAA,IACZR,EAAAA,cAACU,EAAAA,EAAC,CAACC,KAAM,MAAQC,IACjBZ,EAAAA,cAACU,EAAAA,EAAC,CAACC,KAAMA,KAEd,C,kFCvBJ,EAAe,IAA0B,mD,WCYzC,SAASE,EAAaC,GACpB,MAAOC,EAAKC,EAAOC,GAAQH,EAAWI,MAAM,KAAKC,IAAIC,QAErD,OADa,IAAIC,KAAKJ,EAAMD,EAAQ,EAAGD,GAC3BO,aACd,CAiRA,MArJgCC,IA6BzB,IA7B0B,MAC/BX,EAAK,QACLY,EAAO,aACPC,EAAY,YACZC,EAAW,cACXC,EAAa,mBACbC,EAAkB,WAClBC,EAAa,UAAS,SACtBC,EAAQ,cACRC,EAAa,aACbC,EAAY,MACZC,EAAK,QACLC,EAAO,SACPC,EAAQ,OACRC,EAAM,gBACNC,EAAe,iBACfC,EAAgB,QAChBC,EAAO,WACPC,EAAU,aACVC,EAAY,gBACZC,EAAe,WACfC,EAAU,YACVC,EAAW,aACXC,EAAY,WACZC,GAAa,EAAK,QAClBC,EAAO,QACPC,EAAO,KACPC,EAAO,UAAS,SAChBC,GACD3B,EACC,MACEX,MAAOuC,EACPzB,YAAa0B,EACbnB,MAAOoB,EACPnB,QAASoB,EACTnB,SAAUoB,EACVnB,OAAQoB,EACRnB,gBAAiBoB,EACjBnB,iBAAkBoB,IAChBC,EAAAA,EAAAA,KAGEC,EAAWhD,GAASuC,EACpBU,EAAUrC,GAAWoC,EACrBE,EAAUrC,GAAgBmC,EAC1BG,EAAiBrC,GAAe0B,EAChCY,EAAgBrC,GAAiBoC,EACjCE,EAAgBrC,GAAsBmC,EACtCG,EAAWjC,EACZA,EAAMkC,WAAW,QAAUlC,EAAQ,GAAGqB,IAAiBrB,IACxD,GAAGqB,IAAiBD,IAClBe,EAAU7B,GAAW2B,EACrBG,EAAa7B,GAAcwB,EAC3BM,EAAU7B,GAAgByB,EAC1BK,EAAa7B,GAAmBuB,EAChCO,EAAatC,GAAWoB,EACxBmB,GAActC,GAAYoB,EAC1BmB,GAAe7B,GAAgB2B,EAC/BG,GAAYvC,GAAUoB,EACtBoB,GAAmB7C,EAAgBlB,EAAakB,IAAiB,IAAIV,MAAOC,cAC5EuD,GAAkB7C,EAAenB,EAAamB,GAAgB4C,GAC9DE,GAAqBzC,GAAmBoB,EACxCsB,GAAsBzC,GAAoBoB,EAC1CsB,GAAclD,GAAY,CAAC,IAC3BmD,GAASjC,GAAW,GACpBkC,GAAanC,GAAW,GAE9B,IAAIoC,GAAsB,GACV,eAAZpC,EACFoC,GAAsB,SACD,aAAZpC,EACToC,GAAsB,aACD,aAAZpC,IACToC,GAAsB,YAGxB,MAAMC,GArLerG,KAekB,IAfjB,WACtB8C,EAAU,MACVjB,EAAK,YACLc,EAAW,OACXU,EAAM,MACNiD,EAAK,cACLtD,EAAa,aACbC,EAAY,IACZsD,EAAG,MACHrD,EAAK,SACLE,EAAQ,QACRD,EAAO,SACPqD,EAAQ,SACRzD,EAAQ,QACRiB,GACYhE,EAEZ,MAAMyG,EAAa,CACjB,WAAY,qBACZ,QAAS3D,EACTyD,MACA5D,eAGF,MAAmB,YAAfG,GAA2C,gBAAfA,EACvB,IACF2D,EACHC,SAAU7E,EACVqB,MAAOA,EAAQ,CAACA,QAASyD,EACzB3D,cAAeA,QAAiB2D,EAChC1D,aAAcA,GAAgBD,QAAiB2D,EAC/CC,eAAgB5C,EAChBX,OAAQ,CACN,QAAS,SACTwD,KAAMxD,EACNH,MAAOoD,EACP3D,YAAa,iFACb4D,IAAK,GAAGpD,UACR2D,OAAQ,CACN,mCACA,+BACA,kCACA,kCACA,2BACA,mCACA,oCACA,8BACA,4BACA,mCACA,0CACA,iCACA,yCACA,mCAGJC,UAAW,CACT,QAAS,eACTF,KAAMzD,EACN4D,KAAM,CACJ,QAAS,cACTT,IAAKC,IAGTS,iBAAkBV,EAClBxD,SAAUmE,MAAMC,QAAQpE,GAAYA,EAASqE,KAAK,MAAQrE,GAIvD,IACF0D,EACHI,KAAMhF,EACP,EA8GkBwF,CAAe,CAChCvE,aACAjB,MAAOgD,EACPlC,YAAaqC,EACb3B,OAAQuC,GACRU,MAAOgB,EAAAA,EACPtE,cAAe6C,GACf5C,aAAc6C,GACdS,IAAKZ,GACLzC,MAAOiC,EACP/B,SAAUsC,GACVvC,QAASsC,EACTe,SAAUe,EACVxE,SAAUkD,GACVjC,QAASmC,KAGX,OACElF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ4D,GACR5D,EAAAA,cAAA,QAAM4F,KAAK,cAAcW,QAASxC,IAEjCW,IAAgB1E,EAAAA,cAAA,QAAMwG,IAAI,YAAYC,KAAM/B,KAE5CM,IACChF,EAAAA,cAAA,QACE4F,KAAK,WACLW,QAASN,MAAMC,QAAQlB,IAAeA,GAAYmB,KAAK,MAAQnB,KAInEhF,EAAAA,cAAA,QAAM0G,SAAS,WAAWH,QAAS1C,IACnC7D,EAAAA,cAAA,QAAM0G,SAAS,iBAAiBH,QAASvC,IACzChE,EAAAA,cAAA,QAAM0G,SAAS,kBAAkBH,QAAS1B,KAC1C7E,EAAAA,cAAA,QAAM0G,SAAS,UAAUH,QAAStD,IAClCjD,EAAAA,cAAA,QAAM0G,SAAS,SAASH,QAAS7B,KACjC1E,EAAAA,cAAA,QAAM0G,SAAS,eAAeH,QAAS9B,KACtCL,GAAWpE,EAAAA,cAAA,QAAM0G,SAAS,WAAWH,QAASnC,IAC9CzB,GAAc3C,EAAAA,cAAA,QAAM0G,SAAS,iBAAiBH,QAAS5D,IACvDC,GAAe5C,EAAAA,cAAA,QAAM0G,SAAS,kBAAkBH,QAAS3D,IAC1D5C,EAAAA,cAAA,QAAM0G,SAAS,eAAeH,QAASlC,IAEvCrE,EAAAA,cAAA,QAAM4F,KAAK,eAAeW,QAAQ,wBACjCzB,IAAuB9E,EAAAA,cAAA,QAAM4F,KAAK,kBAAkBW,QAASzB,KAC7DA,IAAuB9E,EAAAA,cAAA,QAAM4F,KAAK,eAAeW,QAASzB,KAC3D9E,EAAAA,cAAA,QAAM4F,KAAK,gBAAgBW,QAASzC,IACpC9D,EAAAA,cAAA,QAAM4F,KAAK,sBAAsBW,QAAStC,IACzCK,GAAWtE,EAAAA,cAAA,QAAM4F,KAAK,gBAAgBW,QAASjC,IAChDtE,EAAAA,cAAA,QAAM4F,KAAK,oBAAoBW,QAAShC,IAE9B,YAATtB,GAAuBjD,EAAAA,cAAA,QAAM0G,SAAS,yBAAyBH,QAAS3B,KAC/D,YAAT3B,GAAuBjD,EAAAA,cAAA,QAAM0G,SAAS,wBAAwBH,QAAS1B,KAC9D,YAAT5B,GAAsBkC,IAAwBnF,EAAAA,cAAA,QAAM0G,SAAS,kBAAkBH,QAASpB,KAC/E,YAATlC,GAAsB0B,IAAc3E,EAAAA,cAAA,QAAM0G,SAAS,iBAAiBH,QAAS5B,KACpE,YAAT1B,GAAsB8B,IAAwB/E,EAAAA,cAAA,QAAM0G,SAAS,oBAAoBH,QAAS,4BAA4BxB,OAC7G,YAAT9B,GAAsBgC,IAAWjF,EAAAA,cAAA,QAAM0G,SAAS,cAAcH,QAAStB,KAC9D,YAAThC,GAAsBgD,MAAMC,QAAQlB,KACnCA,GAAY7D,KAAI,CAACwF,EAASC,IACxB5G,EAAAA,cAAA,QAAM6G,IAAKD,EAAGF,SAAS,cAAcH,QAASI,MAIlD3G,EAAAA,cAAA,QAAM4F,KAAK,SAASW,QAASzD,EAAa,oBAAsB,kBAEhE9C,EAAAA,cAAA,UAAQiD,KAAK,uBACV6D,KAAKC,UAAU3B,KAGjBlC,EACA,C,0JCvQP,MAXsB8D,IAErBhH,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,OAAKO,UAAWC,EAAAA,IACZR,EAAAA,cAACU,EAAAA,EAAC,CAACC,KAAK,kBACRX,EAAAA,cAACU,EAAAA,EAAC,CAACC,KAAK,0RACdX,EAAAA,cAACU,EAAAA,EAAC,CAACC,KAAK,qD,WCjBX,EAAe,IAA0B,wECAzC,EAAe,IAA0B,wEC8CzC,MA7BYsG,IAERjH,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OACEO,UAAU,WACVL,MAAO,CACLgH,gBAAiB,QACjBC,SAAU,QACVC,SAAU,SACVC,IAAK,EACLC,KAAM,EACN1H,MAAO,QACPC,OAAQ,UAGVG,EAAAA,cAAA,OAAKE,MAAO,CAAEiH,SAAU,WAAYG,KAAM,KAAMC,MAAO,MAAOC,aAAc,OAAQ5H,MAAO,MAAOG,UAAW,OAC3GC,EAAAA,cAACM,EAAAA,QAAY,MACbN,EAAAA,cAACgH,EAAa,MACdhH,EAAAA,cAACyH,EAAAA,EAAM,CAAC7G,MAAM,0BAA0BD,KAAK,yDAC7CX,EAAAA,cAACyH,EAAAA,EAAM,CAAC7G,MAAM,0BAAyBD,KAAK,yWAC5CX,EAAAA,cAAA,WAAKA,EAAAA,cAAA,WAAKA,EAAAA,cAAA,WACVA,EAAAA,cAAA,OAAKG,IAAKuH,IACV1H,EAAAA,cAAA,OAAKG,IAAKwH,OASb,MAAMC,EAAOA,IAClB5H,EAAAA,cAAC6H,EAAAA,EAAG,CACFjH,MAAM,KACNkC,YAAY,G,uEC/BT,MAAMa,EAAkBA,KAC7B,MAAM,KAAEmE,IAASC,EAAAA,EAAAA,gBAAc,cAkB/B,OAAOD,EAAKE,YAAY,C","sources":["webpack://avrtt.blog/./src/images/about/photoAbout.jpg","webpack://avrtt.blog/./src/components/StickerPack/index.tsx","webpack://avrtt.blog/./src/styles/plaques.module.scss","webpack://avrtt.blog/./src/components/HiddenNotice/index.tsx","webpack://avrtt.blog/./src/components/Notice/index.tsx","webpack://avrtt.blog/./src/images/icon.png","webpack://avrtt.blog/./src/components/seo.tsx","webpack://avrtt.blog/./src/components/AnomalyNotice/index.tsx","webpack://avrtt.blog/./src/images/posts/adventures/content/magnitoshakhtinsk/photo_2025-01-27_19-55-49.jpg","webpack://avrtt.blog/./src/images/posts/adventures/content/magnitoshakhtinsk/photo_2025-01-27_19-34-56.jpg","webpack://avrtt.blog/./src/pages/extras/dev_magnitoshakhtinsk.tsx","webpack://avrtt.blog/./src/hooks/useSiteMetadata.ts"],"sourcesContent":["export default __webpack_public_path__ + \"static/photoAbout-59cd1848d1acc7ce5078c52886c751d1.jpg\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React, { useState, useEffect } from \"react\";\n\ntype StickerKey = keyof typeof stickerImports;\n\nconst stickerImports = {\n  hater: () => import(\"../../stickers/hater.png\"),\n  babel_tower: () => import(\"../../stickers/babel_tower.png\"),\n  bibizan: () => import(\"../../stickers/bibizan.gif\"),\n  cursed_emoji2: () => import(\"../../stickers/cursed_emoji2.png\"),\n  cursed_emoji1: () => import(\"../../stickers/cursed_emoji1.png\"),\n  mda: () => import(\"../../stickers/mda.png\"),\n  cat_shake: () => import(\"../../stickers/cat_shake.gif\"),\n  nerazdyplenish3: () => import(\"../../stickers/nerazdyplenish3.gif\"),\n  burnt: () => import(\"../../stickers/burnt.gif\"),\n  chad: () => import(\"../../stickers/chad.gif\"),\n  hedgehog: () => import(\"../../stickers/hedgehog.gif\"),\n  yoba_dovolen: () => import(\"../../stickers/yoba_dovolen.png\"),\n  pug_dance: () => import(\"../../stickers/pug_dance.gif\"),\n  pepe_chair: () => import(\"../../stickers/pepe_chair.gif\"),\n  pepe_serious: () => import(\"../../stickers/pepe_serious.gif\"),\n  pepe_run: () => import(\"../../stickers/pepe_run.gif\"),\n  pepe_punch: () => import(\"../../stickers/pepe_punch.gif\"),\n  pepe_agree: () => import(\"../../stickers/pepe_agree.gif\"),\n  pepe_pledik: () => import(\"../../stickers/pepe_pledik.png\"),\n  cat_stand: () => import(\"../../stickers/cat_stand.png\"),\n  cat_sleep: () => import(\"../../stickers/cat_sleep.png\"),\n  nerazdyplenish2: () => import(\"../../stickers/nerazdyplenish2.png\"),\n  nerazdyplenish1: () => import(\"../../stickers/nerazdyplenish1.png\"),\n  morshu_gnome: () => import(\"../../stickers/morshu_gnome.png\"),\n  cat_bw: () => import(\"../../stickers/cat_bw.png\"),\n  pepe_mage: () => import(\"../../stickers/pepe_mage.png\"),\n  pepe_linux: () => import(\"../../stickers/pepe_linux.png\"),\n  yoba_pledik: () => import(\"../../stickers/yoba_pledik.png\"),\n  pepe_chill: () => import(\"../../stickers/pepe_chill.png\"),\n  pepe_meditation: () => import(\"../../stickers/pepe_meditation.png\"),\n  trollface: () => import(\"../../stickers/trollface.png\"),\n  cat_smile: () => import(\"../../stickers/cat_smile.png\"),\n  beluga: () => import(\"../../stickers/beluga.png\"),\n  pepe_money: () => import(\"../../stickers/pepe_money.gif\"),\n  pepe_cry: () => import(\"../../stickers/pepe_cry.gif\"),\n  pepe_dance: () => import(\"../../stickers/pepe_dance.gif\"),\n  dog_nerd: () => import(\"../../stickers/dog_nerd.png\"),\n  cat_ya_piska: () => import(\"../../stickers/cat_ya_piska.png\"),\n  gandonio: () => import(\"../../stickers/gandonio.png\"),\n  pepe_wink: () => import(\"../../stickers/pepe_wink.gif\"),\n};\n\nconst StickerPack: React.FC<StickerPackProps> = ({ sticker, marginLeft = \"4px\", marginRight = \"0px\" }) => {\n  const [stickerSrc, setStickerSrc] = useState<string | null>(null);\n\n  useEffect(() => {\n    // check if the sticker key exists in our map\n    const stickerKey = sticker as StickerKey;\n    if (stickerImports[stickerKey]) {\n      stickerImports[stickerKey]().then((module: { default: string }) => setStickerSrc(module.default));\n    }\n  }, [sticker]);\n\n  if (!stickerSrc) return null; // avoid rendering until loaded\n\n  const stickerStyle = {\n    width: \"1.8em\",\n    height: \"1.8em\",\n    verticalAlign: \"middle\",\n    marginTop: \"-10px\",\n    marginRight: marginRight,\n    marginLeft: marginLeft,\n  }\n\n  return <img alt=\"sticker\" style={stickerStyle} src={stickerSrc} />\n}\n\nexport default StickerPack\n\n","// extracted by mini-css-extract-plugin\nexport var greyNotice = \"plaques-module--greyNotice--b6d5a\";\nexport var greyNoticeCompact = \"plaques-module--greyNoticeCompact--45c5f\";\nexport var yellowNotice = \"plaques-module--yellowNotice--5d0ef\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\"\nimport M from \"../Markdown\"\nimport StickerPack from \"../../components/StickerPack\"\nimport * as stylesPlaques from \"../../styles/plaques.module.scss\"\n\nconst HiddenNotice = () => {\n  return (\n\t<>\n    \t<div className={stylesPlaques.greyNoticeCompact}>\n\t\t\t<h2><StickerPack sticker=\"beluga\" marginLeft=\"0px\" marginRight=\"0.2em\"/> Non-public page</h2>\n        \t<M text=\"For some reason, this page was hidden from the public or even never published. You can't find it in the list of pages/posts, and it's not indexed by search engines. It's probably referenced elsewhere. Anyway, this is the dark side of my blog, the technical backrooms, and all kinds of weird crap could be found here.\"/>\n    \t</div>\n\t</>\n  );\n};\nexport default HiddenNotice;\n\n\n","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\"\nimport M from \"../Markdown\"\nimport * as stylesPlaques from \"../../styles/plaques.module.scss\"\n\ninterface NoticeProps {\n  title: string;\n  text: string;\n}\n\nconst Notice = ({ title, text }: NoticeProps) => {\n  return (\n\t<>\n    \t<div className={stylesPlaques.yellowNotice}>\n        \t<M text={\"## \" + title}/>\n        \t<M text={text}/>\n    \t</div>\n\t</>\n  );\n};\nexport default Notice;\n\n\n","export default __webpack_public_path__ + \"static/icon-6e7479889441613ea062cf3d71374ab6.png\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\"\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\"\nimport icon from \"../images/icon.png\"\nimport photoAbout from \"../images/about/photoAbout.jpg\";\n\nfunction convertToISO(dateString: string): string {\n  const [day, month, year] = dateString.split('.').map(Number);\n  const date = new Date(year, month - 1, day);\n  return date.toISOString();\n}\n\ninterface SchemaProps {\n  schemaType: \"Article\" | \"BlogPosting\" | \"WebPage\" | \"ContactPage\" | \"Course\";\n  title: string;\n  description: string;\n  author: string;\n  photo: string;\n  datePublished?: string;\n  dateModified?: string;\n  url: string;\n  image?: string;\n  siteName: string;\n  siteUrl: string;\n  siteLogo: string;\n  keywords: string[] | string;\n  section: string;\n}\n\nconst generateSchema = ({\n  schemaType,\n  title,\n  description,\n  author,\n  photo,\n  datePublished,\n  dateModified,\n  url,\n  image,\n  siteName,\n  siteUrl,\n  siteLogo,\n  keywords,\n  section,\n}: SchemaProps): Record<string, any> => {\n\n  const baseSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": schemaType,\n    url,\n    description,\n  }\n\n  if (schemaType === \"Article\" || schemaType === \"BlogPosting\") {\n    return {\n      ...baseSchema,\n      headline: title,\n      image: image ? [image] : undefined,\n      datePublished: datePublished || undefined,\n      dateModified: dateModified || datePublished || undefined,\n      articleSection: section,\n      author: {\n        \"@type\": \"Person\",\n        name: author,\n        image: photo,\n        description: \"Traveler, content creator, data scientist, AI researcher, developer, musician.\",\n        url: `${siteUrl}/about`,\n        sameAs: [\n          \"https://youtube.com/@vladaverett\",\n          \"https://instagram.com/avrttv\",\n          \"https://twitter.com/vladaverett\",\n          \"https://tiktok.com/@vladaverett\",\n          \"https://github.com/avrtt\",\n          \"https://facebook.com/vladaverett\",\n          \"https://youtube.com/@avheuristics\",\n          \"https://t.me/venturingforth\",\n          \"https://t.me/avheuristics\",\n          \"https://kaggle.com/lenferdetroud\",\n          \"https://couchsurfing.com/people/averett\",\n          \"https://youtube.com/@noiserett\",\n          \"https://facebook.com/averett.freelance\",\n          \"https://facebook.com/avrttblog\",\n        ],\n      },\n      publisher: {\n        \"@type\": \"Organization\",\n        name: siteName,\n        logo: {\n          \"@type\": \"ImageObject\",\n          url: siteLogo,\n        },\n      },\n      mainEntityOfPage: url,\n      keywords: Array.isArray(keywords) ? keywords.join(\", \") : keywords\n    }\n  }\n\n  return {\n    ...baseSchema,\n    name: title,\n  }\n}\n\ninterface SEOProps {\n  title?: string;\n  titleOG?: string;\n  titleTwitter?: string;\n  description?: string;\n  descriptionOG?: string;\n  descriptionTwitter?: string;\n  schemaType?: \"Article\" | \"BlogPosting\" | \"WebPage\" | \"CollectionPage\" | \"Person\" | \"ContactPage\" | \"Course\";\n  keywords?: string[] | string;\n  datePublished?: string;\n  dateModified?: string;\n  image?: string;\n  siteUrl?: string;\n  siteName?: string;\n  author?: string;\n  twitterUsername?: string;\n  facebookUsername?: string;\n  imageOG?: string;\n  imageAltOG?: string;\n  imageTwitter?: string;\n  imageAltTwitter?: string;\n  imageWidth?: string;\n  imageHeight?: string;\n  canonicalUrl?: string;\n  flagHidden?: boolean;\n  section?: string;\n  mainTag?: string;\n  type?: string; // for og\n  children?: React.ReactNode;\n}\n\nconst SEO: React.FC<SEOProps> = ({\n  title,\n  titleOG,\n  titleTwitter,\n  description,\n  descriptionOG,\n  descriptionTwitter,\n  schemaType = \"WebPage\",\n  keywords,\n  datePublished,\n  dateModified,\n  image,\n  siteUrl,\n  siteName,\n  author,\n  twitterUsername,\n  facebookUsername,\n  imageOG,\n  imageAltOG,\n  imageTwitter,\n  imageAltTwitter,\n  imageWidth,\n  imageHeight,\n  canonicalUrl,\n  flagHidden = false,\n  section,\n  mainTag,\n  type = \"website\", // for og\n  children,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image: defaultImage,\n    siteUrl: defaultSiteUrl,\n    siteName: defaultSiteName,\n    author: defaultAuthor,\n    twitterUsername: defaultTwitterUsername,\n    facebookUsername: defaultFacebookUsername,\n  } = useSiteMetadata()\n\n  // fallbacks\n  const seoTitle = title || defaultTitle\n  const ogTitle = titleOG || seoTitle\n  const twTitle = titleTwitter || seoTitle\n  const seoDescription = description || defaultDescription\n  const ogDescription = descriptionOG || seoDescription\n  const twDescription = descriptionTwitter || seoDescription\n  const seoImage = image\n    ? (image.startsWith(\"http\") ? image : `${defaultSiteUrl}${image}`)\n    : `${defaultSiteUrl}${defaultImage}`\n  const ogImage = imageOG || seoImage\n  const ogImageAlt = imageAltOG || ogDescription\n  const twImage = imageTwitter || seoImage\n  const twImageAlt = imageAltTwitter || twDescription\n  const seoSiteUrl = siteUrl || defaultSiteUrl\n  const seoSiteName = siteName || defaultSiteName\n  const seoCanonical = canonicalUrl || seoSiteUrl\n  const seoAuthor = author || defaultAuthor\n  const seoDatePublished = datePublished ? convertToISO(datePublished) : new Date().toISOString()\n  const seoDateModified = dateModified ? convertToISO(dateModified) : seoDatePublished\n  const seoTwitterUsername = twitterUsername || defaultTwitterUsername\n  const seoFacebookUsername = facebookUsername || defaultFacebookUsername\n  const seoKeywords = keywords || [\"\"]\n  const seoTag = mainTag || \"\"\n  const seoSection = section || \"\"\n  \n  let seoSectionClarified = \"\";\n  if (section === \"adventures\") { \n    seoSectionClarified = \"Travel\";\n  } else if (section === \"research\") { \n    seoSectionClarified = \"Technology\";\n  } else if (section === \"thoughts\") { \n    seoSectionClarified = \"Thoughts\";\n  }\n\n  const schemaJSON = generateSchema({\n    schemaType,\n    title: seoTitle,\n    description: seoDescription,\n    author: seoAuthor,\n    photo: photoAbout,\n    datePublished: seoDatePublished,\n    dateModified: seoDateModified,\n    url: seoCanonical,\n    image: seoImage,\n    siteName: seoSiteName,\n    siteUrl: seoSiteUrl,\n    siteLogo: icon,\n    keywords: seoKeywords,\n    section: seoSection,\n  })\n\n  return (\n    <>\n      <title>{seoTitle}</title>\n      <meta name=\"description\" content={seoDescription} />\n\n      {seoCanonical && <link rel=\"canonical\" href={seoCanonical} />}\n\n      {seoKeywords && (\n        <meta\n          name=\"keywords\"\n          content={Array.isArray(seoKeywords) ? seoKeywords.join(\", \") : seoKeywords}\n        />\n      )}\n\n      <meta property=\"og:title\" content={ogTitle} />\n      <meta property=\"og:description\" content={ogDescription} />\n      <meta property=\"og:updated_time\" content={seoDateModified} />\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:url\" content={seoCanonical} />\n      <meta property=\"og:site_name\" content={seoSiteName} />\n      {ogImage && <meta property=\"og:image\" content={ogImage} />}\n      {imageWidth && <meta property=\"og:image:width\" content={imageWidth} />}\n      {imageHeight && <meta property=\"og:image:height\" content={imageHeight} />}\n      <meta property=\"og:image:alt\" content={ogImageAlt} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      {seoTwitterUsername && (<meta name=\"twitter:creator\" content={seoTwitterUsername} />)}\n      {seoTwitterUsername && (<meta name=\"twitter:site\" content={seoTwitterUsername} />)}\n      <meta name=\"twitter:title\" content={twTitle} />\n      <meta name=\"twitter:description\" content={twDescription} />\n      {twImage && <meta name=\"twitter:image\" content={twImage} />}\n      <meta name=\"twitter:image:alt\" content={twImageAlt} />\n\n      {type === \"article\" && (<meta property=\"article:published_time\" content={seoDatePublished} />)}\n      {type === \"article\" && (<meta property=\"article:modified_time\" content={seoDateModified} />)}\n      {type === \"article\" && seoSectionClarified && (<meta property=\"article:section\" content={seoSectionClarified} />)}\n      {type === \"article\" && seoAuthor && (<meta property=\"article:author\" content={seoAuthor} />)}\n      {type === \"article\" && seoFacebookUsername && (<meta property=\"article:publisher\" content={`https://www.facebook.com/${seoFacebookUsername}`} />)}\n      {type === \"article\" && seoTag && (<meta property=\"article:tag\" content={seoTag} />)}\n      {type === \"article\" && Array.isArray(seoKeywords) && \n        seoKeywords.map((keyword, i) => (\n          <meta key={i} property=\"article:tag\" content={keyword} />\n        ))\n      }\n\n      <meta name=\"robots\" content={flagHidden ? \"noindex, nofollow\" : \"index, follow\"} />\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaJSON)}\n      </script>\n\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\"\nimport M from \"../Markdown\"\nimport * as stylesPlaques from \"../../styles/plaques.module.scss\"\n\nconst AnomalyNotice = () => {\n  return (\n\t<>\n    \t<div className={stylesPlaques.yellowNotice}>\n        \t<M text=\"## ATTENTION!\"/>\n        \t<M text=\"This page is classified as a strangely suspicious web document having unexpected characteristics within an appropriate environment. I don't really know how you came across it, but I deliberately left it contained in the quarantine zone to collect records of anomalous activity.\"/>\n\t\t\t<M text=\"Facility information was omitted purposefully.\"/>\n    \t</div>\n\t</>\n  );\n};\nexport default AnomalyNotice;\n\n\n","export default __webpack_public_path__ + \"static/photo_2025-01-27_19-55-49-d424a43a23b6943303016a8a6d1de44a.jpg\";","export default __webpack_public_path__ + \"static/photo_2025-01-27_19-34-56-45674b97461efdd8ea553e11efbc2332.jpg\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\"\nimport SEO from '../../components/seo';\nimport HiddenNotice from \"../../components/HiddenNotice\"\nimport AnomalyNotice from \"../../components/AnomalyNotice\"\nimport Notice from \"../../components/Notice\"\n\n// ?\nimport img1 from \"../../images/posts/adventures/content/magnitoshakhtinsk/photo_2025-01-27_19-55-49.jpg\"\nimport img2 from \"../../images/posts/adventures/content/magnitoshakhtinsk/photo_2025-01-27_19-34-56.jpg\"\n\nconst Dev = () => {\n  return (\n    <>\n      <div\n        className=\"noselect\"\n        style={{\n          backgroundColor: \"black\",\n          position: \"fixed\",\n          overflow: \"scroll\",\n          top: 0,\n          left: 0,\n          width: \"100vw\",\n          height: \"100vh\",\n        }}\n      >\n        <div style={{ position: \"absolute\", left: \"0%\", right: \"15%\", marginInline: \"auto\", width: \"75%\", marginTop: \"1%\" }}>\n          <HiddenNotice/>\n          <AnomalyNotice/>\n          <Notice title=\"Last report: 2025/02/06\" text=\"(removed) <br/><br/> *Notice: deadly cognitohazard.*\"/>\n          <Notice title='\"Fluctuating pattern\\\"' text=\"This page is categorized separately as a media content manipulator. Photos are altered depending on presence of an observer AND on the characteristics of the observer. Video manipulation is insufficiently investigated. Moderate risk of cognitohazard; special behavioral safety awareness is required. Start of containing: 2023/03/12. Crawler status: active.\"/>\n          <br/><br/><br/>\n          <img src={img1}/>\n          <img src={img2}/>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dev;\n\nexport const Head = () => (\n  <SEO \n    title=\"â \"\n    flagHidden={true}\n  />\n)","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport { graphql, useStaticQuery } from \"gatsby\"\n\ninterface SiteMetadata {\n  title: string;\n  description: string;\n  image: string;\n  siteUrl: string;\n  siteName: string;\n  author: string;\n  twitterUsername: string;\n  facebookUsername: string;\n}\n\nexport const useSiteMetadata = (): SiteMetadata => {\n  const { site } = useStaticQuery<{ site: { siteMetadata: SiteMetadata } }>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            image\n            siteUrl\n            siteName\n            author\n            twitterUsername\n            facebookUsername\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}"],"names":["stickerImports","hater","babel_tower","bibizan","cursed_emoji2","cursed_emoji1","mda","cat_shake","nerazdyplenish3","burnt","chad","hedgehog","yoba_dovolen","pug_dance","pepe_chair","pepe_serious","pepe_run","pepe_punch","pepe_agree","pepe_pledik","cat_stand","cat_sleep","nerazdyplenish2","nerazdyplenish1","morshu_gnome","cat_bw","pepe_mage","pepe_linux","yoba_pledik","pepe_chill","pepe_meditation","trollface","cat_smile","beluga","pepe_money","pepe_cry","pepe_dance","dog_nerd","cat_ya_piska","gandonio","pepe_wink","_ref","sticker","marginLeft","marginRight","stickerSrc","setStickerSrc","useState","useEffect","stickerKey","then","module","default","stickerStyle","width","height","verticalAlign","marginTop","React","alt","style","src","greyNoticeCompact","yellowNotice","HiddenNotice","className","stylesPlaques","StickerPack","M","text","title","convertToISO","dateString","day","month","year","split","map","Number","Date","toISOString","_ref2","titleOG","titleTwitter","description","descriptionOG","descriptionTwitter","schemaType","keywords","datePublished","dateModified","image","siteUrl","siteName","author","twitterUsername","facebookUsername","imageOG","imageAltOG","imageTwitter","imageAltTwitter","imageWidth","imageHeight","canonicalUrl","flagHidden","section","mainTag","type","children","defaultTitle","defaultDescription","defaultImage","defaultSiteUrl","defaultSiteName","defaultAuthor","defaultTwitterUsername","defaultFacebookUsername","useSiteMetadata","seoTitle","ogTitle","twTitle","seoDescription","ogDescription","twDescription","seoImage","startsWith","ogImage","ogImageAlt","twImage","twImageAlt","seoSiteUrl","seoSiteName","seoCanonical","seoAuthor","seoDatePublished","seoDateModified","seoTwitterUsername","seoFacebookUsername","seoKeywords","seoTag","seoSection","seoSectionClarified","schemaJSON","photo","url","siteLogo","baseSchema","headline","undefined","articleSection","name","sameAs","publisher","logo","mainEntityOfPage","Array","isArray","join","generateSchema","photoAbout","icon","content","rel","href","property","keyword","i","key","JSON","stringify","AnomalyNotice","Dev","backgroundColor","position","overflow","top","left","right","marginInline","Notice","img1","img2","Head","SEO","site","useStaticQuery","siteMetadata"],"sourceRoot":""}