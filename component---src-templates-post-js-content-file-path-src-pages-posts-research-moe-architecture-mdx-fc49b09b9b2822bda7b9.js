"use strict";(self.webpackChunkavrtt_blog=self.webpackChunkavrtt_blog||[]).push([[9139],{96098:function(e,t,a){var n=a(96540),i=a(7978);t.A=e=>{let{text:t}=e;return n.createElement(i.A,null,t)}},99059:function(e,t,a){a.r(t),a.d(t,{Head:function(){return M},PostTemplate:function(){return _},default:function(){return z}});var n=a(54506),i=a(28453),r=a(96540),l=(a(16886),a(46295)),s=a(96098);function o(e){const t=Object.assign({p:"p",h3:"h3",a:"a",span:"span",ol:"ol",li:"li",strong:"strong",h2:"h2",ul:"ul",hr:"hr"},(0,i.RP)(),e.components),{Image:a}=t;return a||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Image",!0),r.createElement(r.Fragment,null,"\n",r.createElement("br"),"\n","\n",r.createElement(t.p,null,'The notion of leveraging multiple specialized models — sometimes referred to as "experts" — to solve complex tasks is not entirely new in the domain of artificial intelligence. In fact, the first glimpses of such ideas trace back to early attempts in the 1980s and 1990s to build learning architectures that could each address a simpler portion of the problem space. In these formative years, researchers were motivated by the idea that a single monolithic model, no matter how large, might not efficiently capture the intricacies and variability often present in real-world data. A more fruitful approach, they speculated, would involve dividing the problem into smaller, more homogeneous chunks and then learning a specialized function for each part of the domain.'),"\n",r.createElement(t.p,null,"Historically, one can see parallels between mixture of experts and the older concept of ensemble methods, such as bagging or boosting, though the latter often revolve around adding multiple learners and aggregating them for improved accuracy. MoE (mixture of experts), however, is distinct in that there is typically a gating network that decides, for each input, which expert (or experts) should be responsible. Early works by Jordan and Jacobs (Neural Computation, 1991), Nowlan and Hinton (NIPS, 1990), and others laid essential theoretical foundations. They introduced gating functions and adaptive mixtures of local experts, where each expert would produce a local or partial solution, and the gating function would learn to weigh or select these experts depending on the input characteristics."),"\n",r.createElement(t.h3,{id:"historical-context-and-early-research",style:{position:"relative"}},r.createElement(t.a,{href:"#historical-context-and-early-research","aria-label":"historical context and early research permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"historical context and early research"),"\n",r.createElement(t.p,null,'In the early 1990s, researchers like Michael I. Jordan, Robert A. Jacobs, and Geoffrey Hinton were exploring ways to train systems that harness the power of specialized subnetworks. This period saw the introduction of hierarchical mixture of experts, as well as the adaptive mixtures of local experts approach. These approaches were heavily inspired by the concept of a "divide and conquer" strategy, where complicated data distributions are broken into simpler sub-distributions. Each sub-distribution is then tackled by a single expert that can better model it.'),"\n",r.createElement(t.p,null,"A key historical milestone was the realization that gating networks could effectively direct inputs to experts, facilitating specialization without demanding every sub-model to handle the entire complexity of the task. Another major leap occurred when researchers recognized the synergy between mixture of experts ideas and well-known statistical models like Gaussian mixture models. Indeed, many proofs and training methods for MoE paralleled the standard EM (expectation-maximization) framework used for mixture models."),"\n",r.createElement(t.h3,{id:"inspiration-from-divide-and-conquer-strategies",style:{position:"relative"}},r.createElement(t.a,{href:"#inspiration-from-divide-and-conquer-strategies","aria-label":"inspiration from divide and conquer strategies permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"inspiration from divide-and-conquer strategies"),"\n",r.createElement(t.p,null,"One way to understand mixture of experts is through the lens of divide-and-conquer strategies in algorithm design and problem-solving. Consider how one might handle a large, unwieldy problem in software engineering: it is almost always broken down into smaller modules, each focusing on a particular functionality. By the same token, MoE tries to break the input distribution into narrower, more manageable subspaces, effectively assigning each subspace to an expert that is highly competent in that slice."),"\n",r.createElement(t.p,null,"For instance, in speech recognition tasks dating from the 1990s, one might have an expert for female speakers of a specific accent, another expert for male speakers of a different accent, and so on. In this way, each sub-model only has to master a smaller sub-problem, which can lead to better generalization and faster training times. That principle has persisted, and the contemporary large-scale mixture of experts models — in both natural language processing and computer vision — are expansions of the same basic notion."),"\n",r.createElement(t.h3,{id:"why-mixture-of-experts",style:{position:"relative"}},r.createElement(t.a,{href:"#why-mixture-of-experts","aria-label":"why mixture of experts permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"why mixture of experts?"),"\n",r.createElement(t.p,null,"Modern machine learning has led to a proliferation of deep neural networks with billions or even trillions of parameters. While these large models tend to perform well across numerous tasks, they face practical issues related to training time, memory constraints, inference latency, and sometimes diminishing returns in terms of overall performance improvements."),"\n",r.createElement(t.p,null,"Mixture of experts offers a compelling alternative: it introduces conditional computation, meaning that for a given input, only a small subset of the model's parameters (the relevant experts) are activated. This lowers the overall computational cost at inference time if the gating is designed to select only a subset of the experts."),"\n",r.createElement(t.p,null,"Hence, the main motivation for MoE is twofold:"),"\n",r.createElement(t.ol,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Increased model capacity vs. computation trade-offs.")," Instead of applying a full, massive model to every input, you effectively let a gating mechanism pick the relevant, specialized sub-models."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Handling diverse subproblems.")," Real-world datasets often contain numerous modes or regions that differ widely. By dividing these distinct subproblems among experts, each piece of data is handled by a sub-network that is particularly adept at that kind of input."),"\n"),"\n",r.createElement(t.h3,{id:"addressing-model-capacity-vs-computation-trade-offs",style:{position:"relative"}},r.createElement(t.a,{href:"#addressing-model-capacity-vs-computation-trade-offs","aria-label":"addressing model capacity vs computation trade offs permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"addressing model capacity vs. computation trade-offs"),"\n",r.createElement(t.p,null,'A single neural network with billions of parameters requires enormous compute resources to train, serve, and maintain. Even if the data demands such capacity, it might be inefficient to use all parameters for every sample. MoE addresses this limitation by "turning on" only the relevant experts. This dynamic can yield a network with a far larger overall parameter budget — since each expert can be large, and there can be many experts — while keeping the compute cost for any single input significantly smaller.'),"\n",r.createElement(t.p,null,"In large-scale language modeling, for instance, approaches like Switch Transformers highlight this advantage clearly. Despite having tens or hundreds of billions of parameters in total, each token or example sees only a fraction of that parameter count during forward propagation. This synergy between large capacity and comparatively modest per-sample computation remains a primary driver of modern MoE architectures."),"\n",r.createElement(t.h3,{id:"handling-diverse-subproblems-through-specialized-experts",style:{position:"relative"}},r.createElement(t.a,{href:"#handling-diverse-subproblems-through-specialized-experts","aria-label":"handling diverse subproblems through specialized experts permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"handling diverse subproblems through specialized experts"),"\n",r.createElement(t.p,null,"Furthermore, in many domains, data is inherently diverse. Take a multilingual language model for example: each language or dialect might embody a unique subproblem, complete with its own lexical distributions and syntactic patterns. An MoE approach allows certain experts to specialize in one or more languages, building deeper competence within that domain. Meanwhile, the gating network identifies which language is being processed and ensures the appropriate experts handle the input."),"\n",r.createElement(t.p,null,"Similarly, in image recognition tasks, different experts might specialize in distinct sets of objects, scale ranges, or image styles. The impetus behind MoE is always the same: leverage specialized sub-models to capture the nuances of different parts of the input space, rather than forcing a single model to handle it all in a monolithic way."),"\n",r.createElement(t.h3,{id:"high-level-idea",style:{position:"relative"}},r.createElement(t.a,{href:"#high-level-idea","aria-label":"high level idea permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"high-level idea"),"\n",r.createElement(t.p,null,"Conceptually, a mixture of experts architecture comprises:"),"\n",r.createElement(t.ol,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Expert Networks.")," These are the specialized sub-models that produce their own outputs for a given input."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"A Gating Network.")," This network takes an input and outputs weights (or discrete selections) that indicate which experts should be consulted and how heavily each should contribute."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Combining Mechanism.")," The system then aggregates the results from the chosen experts (e.g., by a weighted summation of their outputs or by selecting the single best expert)."),"\n"),"\n",r.createElement(t.p,null,"This stands in contrast to standard ensemble methods (such as a standard random forest or a typical bag of multiple classifiers), which often do not have a dynamic gating to route inputs. Instead, those methods simply combine the outputs from all learners in an identical manner regardless of the input."),"\n",r.createElement(t.h2,{id:"2-conceptual-foundations",style:{position:"relative"}},r.createElement(t.a,{href:"#2-conceptual-foundations","aria-label":"2 conceptual foundations permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. conceptual foundations"),"\n",r.createElement(t.h3,{id:"21-the-expert-networks",style:{position:"relative"}},r.createElement(t.a,{href:"#21-the-expert-networks","aria-label":"21 the expert networks permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1. the expert networks"),"\n",r.createElement(t.p,null,'An "expert" in an MoE architecture is typically a learnable function specialized to capture certain statistical patterns in the data. In classical formulations, these experts might be small feedforward networks or linear models. In more recent deep learning contexts, experts can be:'),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Multilayer Perceptrons (MLPs).")," For simpler tasks or subproblems that do not require extensive feature extraction."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Convolutional Neural Networks (CNNs).")," For computer vision or image-based tasks, each expert can be a CNN specialized on certain image characteristics."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Recurrent Neural Networks (RNNs) / LSTMs.")," For sequential data such as time series or certain natural language tasks."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Transformers.")," For modern large-scale language modeling, each expert might be a feedforward sub-block in a Transformer layer."),"\n"),"\n",r.createElement(t.p,null,"The size and structure of each expert can vary significantly based on the complexity of the problem. In some advanced MoE setups, you might have a massive number of experts (ranging from tens to thousands), each of which is itself a deep network."),"\n",r.createElement(t.h3,{id:"22-the-gating-network",style:{position:"relative"}},r.createElement(t.a,{href:"#22-the-gating-network","aria-label":"22 the gating network permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.2. the gating network"),"\n",r.createElement(t.p,null,"Perhaps the core novelty behind mixture of experts is the gating network. While the experts themselves do the heavy lifting of mapping input ",r.createElement(s.A,{text:"\\(x\\)"})," to output ",r.createElement(s.A,{text:"\\(f_i(x)\\)"}),", it's the gate that decides how these experts' outputs should be combined."),"\n",r.createElement(t.p,null,"Conceptually, the gating network is a function ",r.createElement(s.A,{text:"\\(w(x)\\)"})," that outputs a vector of mixture coefficients. Each entry ",r.createElement(s.A,{text:"\\(w_i(x)\\)"})," in that vector is typically non-negative, and they might sum to 1 if it's a probability distribution. For a soft mixture, the final output might be:"),"\n",r.createElement(s.A,{text:"\\[\nf(x) \\;=\\; \\sum_i\\, w_i(x)\\, f_i(x).\n\\]"}),"\n",r.createElement(t.p,null,"where ",r.createElement(s.A,{text:"\\(i\\)"})," indexes over all experts."),"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Hard vs. soft gating.")),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"In ",r.createElement(t.strong,null,"hard gating"),", the gating network selects only the single best expert (or top-k experts) for each input, effectively ignoring all others. This can drastically reduce the computational overhead, since each sample only goes to one or a few sub-models."),"\n",r.createElement(t.li,null,"In ",r.createElement(t.strong,null,"soft gating"),", the gating network assigns fractional weights to each expert, and the final output is a sum of all expert outputs weighted by these fractions."),"\n"),"\n",r.createElement(t.p,null,"Both approaches have their pros and cons. Hard gating is typically more computationally efficient, while soft gating can often yield smoother training signals because of the continuous mixture."),"\n",r.createElement(t.h3,{id:"23-combining-the-experts",style:{position:"relative"}},r.createElement(t.a,{href:"#23-combining-the-experts","aria-label":"23 combining the experts permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.3. combining the experts"),"\n",r.createElement(t.p,null,"When the gating outputs are used to combine different expert outputs, the effect is somewhat akin to ensemble averaging, but done in a dynamic, input-dependent manner. Instead of a uniform or fixed weighting of ensemble members, you have an adaptive gating that can shift the model's focus as needed."),"\n",r.createElement(t.p,null,"In some modern large-scale MoE designs — like the Switch Transformer — only a single expert is used at a time (top-1). Others might use a top-2 or top-k approach. In these sparse mixture settings, the gating step is crucial for deciding which experts get activated. This leads to a conditional computation architecture, where the maximum computational load is drastically reduced compared to a dense approach that calls on all experts concurrently."),"\n",r.createElement(t.h2,{id:"3-core-architecture",style:{position:"relative"}},r.createElement(t.a,{href:"#3-core-architecture","aria-label":"3 core architecture permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3. core architecture"),"\n",r.createElement(t.h3,{id:"31-moe-building-blocks",style:{position:"relative"}},r.createElement(t.a,{href:"#31-moe-building-blocks","aria-label":"31 moe building blocks permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3.1. moe building blocks"),"\n",r.createElement(t.p,null,"While specific mixture of experts architectures can vary widely, they all share a few core building blocks:"),"\n",r.createElement(t.ol,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Input layer.")," The raw input ",r.createElement(s.A,{text:"\\(x\\)"})," is typically projected or encoded in some manner so that it's suitable for both the gating and the experts. This might be a simple embedding layer (in NLP tasks) or a series of convolutional layers in an image domain."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Expert layers (parallel sub-networks).")," A set of ",r.createElement(s.A,{text:"\\(n\\)"})," parallel networks ",r.createElement(s.A,{text:"\\(f_1, \\ldots, f_n\\)"})," that each produce a candidate output. If the mixture is hierarchical, you can have multiple layers of gating and experts in a tree-like structure."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Gating layer.")," A gating function that takes ",r.createElement(s.A,{text:"\\(x\\)"})," (or some hidden representation of ",r.createElement(s.A,{text:"\\(x\\)"}),") and produces gating coefficients. This gating output determines how the experts' results are aggregated."),"\n"),"\n",r.createElement(t.p,null,"Often, these building blocks are stacked in deeper architectures or interleaved with other components (e.g., self-attention layers in Transformers)."),"\n",r.createElement(t.h3,{id:"32-forward-pass-mechanics",style:{position:"relative"}},r.createElement(t.a,{href:"#32-forward-pass-mechanics","aria-label":"32 forward pass mechanics permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3.2. forward pass mechanics"),"\n",r.createElement(t.p,null,"In a forward pass, the following typically happens:"),"\n",r.createElement(t.ol,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Gating network evaluation.")," The gating network processes the input ",r.createElement(s.A,{text:"\\(x\\)"})," (or a derived representation from earlier layers) to produce a distribution over the experts, ",r.createElement(s.A,{text:"\\(w(x)\\)"}),"."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Expert execution.")," Each or a subset of the experts produce their individual outputs ",r.createElement(s.A,{text:"\\(f_1(x), \\ldots, f_n(x)\\)"}),". In the case of sparse MoE, only the top-k experts might be invoked."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Output aggregation.")," The final MoE output is either:","\n",r.createElement(s.A,{text:"\\[\nf_{\\text{MoE}}(x) \\;=\\;\\sum_{i \\in \\mathcal{S}(x)} w_i(x)\\, f_i(x),\n\\]"}),"\n","where ",r.createElement(s.A,{text:"\\(\\mathcal{S}(x)\\)"})," is the subset of experts chosen (it could be the entire set for a soft mixture, or a top-k subset for a sparse mixture)."),"\n"),"\n",r.createElement(t.p,null,"The gating distribution can be learned to reflect the diverse nature of the data. Over time, some experts might become specialized in certain regions of the input space, which helps direct future data points from that region to the correct sub-model."),"\n",r.createElement(t.h3,{id:"33-sparse-vs-dense-experts",style:{position:"relative"}},r.createElement(t.a,{href:"#33-sparse-vs-dense-experts","aria-label":"33 sparse vs dense experts permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3.3. sparse vs. dense experts"),"\n",r.createElement(t.p,null,"A crucial distinction in modern MoE research is whether the system is ",r.createElement(t.strong,null,"sparse")," or ",r.createElement(t.strong,null,"dense"),":"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Dense MoE"),": Every expert is evaluated on every input, with outputs combined via soft weighting. This was popular in earlier MoE literature but scales poorly."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Sparse MoE"),": Only a small number of experts are selected (often 1 or 2) for each input, drastically cutting down on the required computation. This approach has fueled the explosion of extremely large MoE language models that can exceed a trillion parameters (in total) while keeping the cost per token relatively contained."),"\n"),"\n",r.createElement(t.p,null,"Naturally, sparse gating demands additional techniques to ensure the distribution of data is balanced among experts (otherwise, certain experts might never be selected). This leads to a variety of load-balancing strategies and auxiliary losses used in training these models."),"\n",r.createElement(t.h2,{id:"4-training-mixture-of-experts",style:{position:"relative"}},r.createElement(t.a,{href:"#4-training-mixture-of-experts","aria-label":"4 training mixture of experts permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"4. training mixture of experts"),"\n",r.createElement(t.h3,{id:"41-objective-function",style:{position:"relative"}},r.createElement(t.a,{href:"#41-objective-function","aria-label":"41 objective function permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"4.1. objective function"),"\n",r.createElement(t.p,null,"The learning objective for a mixture of experts model typically includes:"),"\n",r.createElement(t.ol,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Primary loss.")," For supervised tasks, this might be the cross-entropy loss in classification or a mean squared error for regression. The total model output is the weighted output of the experts according to the gating distribution, and training proceeds to minimize (or maximize in the case of likelihood) the standard task loss."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Regularization for gating.")," Many MoE systems add special terms to discourage degenerate solutions, such as gate imbalance (where only one or a few experts get picked). A typical strategy includes an auxiliary loss that encourages each expert to receive a relatively balanced workload over a batch or dataset."),"\n"),"\n",r.createElement(t.p,null,"Consider a typical supervised learning setting with training data ",r.createElement(s.A,{text:"(\\{x_k, y_k\\}_{k=1}^N)"}),". If we define the gating function as ",r.createElement(s.A,{text:"\\(w(x) = (w_1(x), \\ldots, w_n(x))\\)"})," and each expert ",r.createElement(s.A,{text:"\\(f_i\\)"})," has its own parameters, the mixture output for sample ",r.createElement(s.A,{text:"\\(x\\)"})," is:"),"\n",r.createElement(s.A,{text:"\\[\nf_{\\text{MoE}}(x) = \\sum_{i=1}^n w_i(x)\\, f_i(x).\n\\]"}),"\n",r.createElement(t.p,null,"The main supervised loss ",r.createElement(s.A,{text:"\\(\\mathcal{L}\\)"})," can be expressed as:"),"\n",r.createElement(s.A,{text:"\\[\n\\mathcal{L}(\\theta) = \\frac{1}{N}\\sum_{k=1}^N \\mathrm{Loss}\\bigl(f_{\\text{MoE}}(x_k), \\;y_k\\bigr),\n\\]"}),"\n",r.createElement(t.p,null,"where ",r.createElement(s.A,{text:"\\(\\theta\\)"})," collectively denotes all parameters (gating parameters plus the parameters of all experts)."),"\n",r.createElement(t.p,null,"When using an additional load-balancing term, you might add something like:"),"\n",r.createElement(s.A,{text:"\\[\n\\mathcal{L}_{\\text{total}}(\\theta) = \\mathcal{L}(\\theta) \\;+\\; \\lambda\\,\\mathcal{L}_{\\text{balance}}(\\theta),\n\\]"}),"\n",r.createElement(t.p,null,"where ",r.createElement(s.A,{text:"\\(\\mathcal{L}_{\\text{balance}}\\)"})," is designed to push the gating distribution to use all experts. ",r.createElement(s.A,{text:"\\(\\lambda\\)"})," is a hyperparameter controlling the trade-off."),"\n",r.createElement(t.h3,{id:"42-gradient-flow-and-routing",style:{position:"relative"}},r.createElement(t.a,{href:"#42-gradient-flow-and-routing","aria-label":"42 gradient flow and routing permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"4.2. gradient flow and routing"),"\n",r.createElement(t.p,null,"Given that the gating is often a discrete selection in sparse MoE (hard gating), training these systems can be tricky. Hard gating yields a non-differentiable step (the ",r.createElement(s.A,{text:"(\\mathrm{top}\\_k)"})," function), complicating backpropagation. Researchers have explored various strategies:"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Soft gating with temperature annealing.")," Start with a softmax-based gate that includes all experts, then gradually sharpen the distribution to approach a discrete choice."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Straight-through estimators or REINFORCE-like methods.")," These estimate gradients through discrete decisions."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Continuous approximations.")," Approaches like Gumbel-Softmax or other reparameterization tricks attempt to make discrete sampling more differentiable."),"\n"),"\n",r.createElement(t.p,null,"When gating is fully soft (i.e., a standard softmax weighting all experts), then the training is simpler — just standard gradient-based training. However, that typically reintroduces large compute costs at inference."),"\n",r.createElement(t.h3,{id:"43-optimization-challenges",style:{position:"relative"}},r.createElement(t.a,{href:"#43-optimization-challenges","aria-label":"43 optimization challenges permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"4.3. optimization challenges"),"\n",r.createElement(t.ol,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Expert collapse.")," In naive training, a single expert might end up receiving almost all the training samples that the gating network sees, while other experts are starved of data. This is detrimental because only that single expert is effectively learning, and the capacity gains from multiple experts are never realized."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Balancing load.")," Even if gating attempts to distribute inputs, some experts might get flooded with more data than they can handle in a batch, leading to large variance in gradient updates."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Partial gradient updates.")," In a sparse MoE, not all experts see data on every batch. An expert might see only the data assigned to it, so effectively, it can go many iterations with no gradient signal if it's rarely chosen."),"\n"),"\n",r.createElement(t.h3,{id:"44-implementation-details",style:{position:"relative"}},r.createElement(t.a,{href:"#44-implementation-details","aria-label":"44 implementation details permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"4.4. implementation details"),"\n",r.createElement(t.p,null,"In practice, especially in large-scale language models, gating is typically performed at the token level (i.e., each token in a sequence is routed independently) or at the batch level (the entire input is assigned to a single or small group of experts). Token-level gating is more fine-grained but also more complex to parallelize."),"\n",r.createElement(t.p,null,"Modern frameworks have begun offering specialized ops for mixture of experts. For example, Google's TensorFlow Mesh, the Switch Transformer code in TensorFlow, or MoE modules in PyTorch. They manage the overhead of collecting tokens from across devices, distributing them to the relevant experts, and then returning the results."),"\n",r.createElement(t.h2,{id:"5-variants-and-extensions-of-moe",style:{position:"relative"}},r.createElement(t.a,{href:"#5-variants-and-extensions-of-moe","aria-label":"5 variants and extensions of moe permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"5. variants and extensions of moe"),"\n",r.createElement(t.h3,{id:"51-hierarchical-mixture-of-experts",style:{position:"relative"}},r.createElement(t.a,{href:"#51-hierarchical-mixture-of-experts","aria-label":"51 hierarchical mixture of experts permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"5.1. hierarchical mixture of experts"),"\n",r.createElement(t.p,null,"A hierarchical MoE structure stacks multiple levels of gating networks in a tree. Each gating node splits the data distribution among children, eventually passing data down to leaf experts. The final mixture output might be:"),"\n",r.createElement(s.A,{text:"\\[\nf(x) = \\sum_{i=1}^{N_1} w_i^{(1)}(x) \\left( \\sum_{j=1}^{N_2} w_{j|i}^{(2)}(x) \\, f_{j|i}(x)\\right),\n\\]"}),"\n",r.createElement(t.p,null,"where the upper gating weights ",r.createElement(s.A,{text:"\\(w_i^{(1)}(x)\\)"})," distribute data among sub-gating networks or sub-experts. Then each child gating function ",r.createElement(s.A,{text:"\\(w_{j|i}^{(2)}(x)\\)"})," further subdivides among its experts. This structure can be advantageous if your data distribution is naturally hierarchical — some tasks or subspaces might themselves be best subdivided further."),"\n",r.createElement(t.h3,{id:"52-conditional-computation--dynamic-routing",style:{position:"relative"}},r.createElement(t.a,{href:"#52-conditional-computation--dynamic-routing","aria-label":"52 conditional computation  dynamic routing permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"5.2. conditional computation & dynamic routing"),"\n",r.createElement(t.p,null,"One of the major draws of MoE is its ability to implement conditional computation: each input only activates a subset of the network. This concept can be extended beyond gating to other dynamic architectures:"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Dynamic layers.")," Instead of having multiple parallel experts in a single layer, you might choose from different entire blocks of layers in a network."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Adaptive computation time.")," Some networks decide how many layers to apply based on the complexity of the input."),"\n"),"\n",r.createElement(t.p,null,"In all these approaches, the principle is the same: reduce the full model's compute cost by focusing only on the relevant components for a given input."),"\n",r.createElement(t.h3,{id:"53-switch-transformers",style:{position:"relative"}},r.createElement(t.a,{href:"#53-switch-transformers","aria-label":"53 switch transformers permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"5.3. switch transformers"),"\n",r.createElement(t.p,null,"Switch Transformers, introduced by Fedus and gang (Journal of Machine Learning Research, 2022), represent a particular instantiation of MoE for large-scale language models. They restrict gating to select exactly one expert (top-1) out of many, drastically simplifying routing. They also introduced load-balancing losses that keep each expert from being over- or under-used."),"\n",r.createElement(t.p,null,"Thanks to this approach, Switch Transformers could scale to extremely large parameter counts (in the hundreds of billions or even a trillion) while using relatively modest compute resources in practice. The gating function is typically a softmax over the linear projection of the token representation, with a top-1 selection."),"\n",r.createElement(t.h3,{id:"54-moe-in-vision-models",style:{position:"relative"}},r.createElement(t.a,{href:"#54-moe-in-vision-models","aria-label":"54 moe in vision models permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"5.4. moe in vision models"),"\n",r.createElement(t.p,null,"The concept of specialized experts has also found success in computer vision. For instance, Riquelme and gang (NeurIPS, 2021) introduced Vision MoE, applying the same gating-and-experts concept to feedforward blocks in Transformers built for image classification. Experts might be specialized in certain shapes, color distributions, or textures. Similarly, some designs incorporate gating that detects whether an image is related to a certain domain, picking the relevant sub-model."),"\n",r.createElement(t.h2,{id:"6-practical-considerations-and-best-practices",style:{position:"relative"}},r.createElement(t.a,{href:"#6-practical-considerations-and-best-practices","aria-label":"6 practical considerations and best practices permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"6. practical considerations and best practices"),"\n",r.createElement(t.h3,{id:"61-hyperparameter-tuning",style:{position:"relative"}},r.createElement(t.a,{href:"#61-hyperparameter-tuning","aria-label":"61 hyperparameter tuning permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"6.1. hyperparameter tuning"),"\n",r.createElement(t.p,null,"When building and training an MoE system, the following hyperparameters become critical:"),"\n",r.createElement(t.ol,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Number of experts ",r.createElement(s.A,{text:"\\(n\\)"})),": Larger ",r.createElement(s.A,{text:"\\(n\\)"})," means higher overall capacity but also more overhead in coordinating gating and parallelization."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Top-k")," (for sparse gating) or gating distribution shape: Hard gating approaches rely on the top-k selection. The value of ",r.createElement(s.A,{text:"\\(k\\)"})," significantly affects both performance and efficiency."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Learning rates"),": Often, the gating network might need its own separate learning rate or schedule so that it can quickly adapt the routing strategy."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Load-balancing penalty weight ",r.createElement(s.A,{text:"\\(\\lambda\\)"})),": This can shift the gating distribution from heavily favoring a single expert to a more uniform distribution."),"\n"),"\n",r.createElement(t.h3,{id:"62-load-balancing-techniques",style:{position:"relative"}},r.createElement(t.a,{href:"#62-load-balancing-techniques","aria-label":"62 load balancing techniques permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"6.2. load balancing techniques"),"\n",r.createElement(t.p,null,"A major headache in MoE training is ensuring that experts are used in a balanced way. Common solutions include:"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Auxiliary losses.")," Switch Transformers, for instance, introduced an additional term in the training objective to penalize imbalance."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Expert-bias-based balancing.")," Some research proposes letting each expert's bias automatically adjust if that expert is underused or overused."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Capacity constraints.")," Limit how many tokens each expert can process in a batch. If an expert is overloaded, some tokens are rerouted to the second-best choice."),"\n"),"\n",r.createElement(t.h3,{id:"63-regularization-strategies",style:{position:"relative"}},r.createElement(t.a,{href:"#63-regularization-strategies","aria-label":"63 regularization strategies permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"6.3. regularization strategies"),"\n",r.createElement(t.p,null,"Overfitting can be a problem, especially if an expert becomes overly specialized on a rare sub-domain. Strategies include:"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Dropout or dropout variants")," (like drop-connect) that act within each expert."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Weight decay")," specifically targeted at each expert's parameters."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Expert-level data augmentation"),", especially in tasks like image processing, ensuring each sub-expert sees enough variety."),"\n"),"\n",r.createElement(t.p,null,"An additional approach is to occasionally force the gating network to try different experts for an input, helping them generalize rather than focusing too narrowly on a single region."),"\n",r.createElement(t.h3,{id:"64-hardware-and-memory-constraints",style:{position:"relative"}},r.createElement(t.a,{href:"#64-hardware-and-memory-constraints","aria-label":"64 hardware and memory constraints permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"6.4. hardware and memory constraints"),"\n",r.createElement(t.p,null,"MoE architectures can lead to extremely large parameter counts, easily surpassing what is typical for single-GPU training. Thus, specialized hardware setups or distributed frameworks are commonly employed. Key considerations:"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Parallelization"),': Experts can be split across multiple GPUs or TPUs, with gating performed in a "dispatcher" node that sends relevant data to each expert\'s device.'),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Parameter server vs. all-reduce"),": In large-scale systems (e.g., GShard, Mesh TensorFlow), parameters might be sharded across many devices."),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Memory footprint"),": Even if only a fraction of experts are active per sample, all experts must be stored. This can demand advanced memory management or partitioning strategies."),"\n"),"\n"),"\n",r.createElement(t.h2,{id:"7-use-cases-and-applications",style:{position:"relative"}},r.createElement(t.a,{href:"#7-use-cases-and-applications","aria-label":"7 use cases and applications permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"7. use cases and applications"),"\n",r.createElement(t.h3,{id:"71-natural-language-processing",style:{position:"relative"}},r.createElement(t.a,{href:"#71-natural-language-processing","aria-label":"71 natural language processing permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"7.1. natural language processing"),"\n",r.createElement(t.p,null,"MoE has become especially prominent in large-scale NLP. Models like GShard, Switch Transformer, and GLaM use massive numbers of experts to expand capacity while keeping per-token compute feasible. These models typically show improved perplexities on language modeling tasks, and can be finetuned or instruction-tuned to accomplish a wide range of downstream tasks."),"\n",r.createElement(t.p,null,"The gating network in an NLP context might be token-level gating, where each token in a batch can be routed to a different set of experts. This approach is helpful for code-switching texts, multilingual corpora, or specialized domain adaptation (e.g., legal or medical text)."),"\n",r.createElement(t.h3,{id:"72-computer-vision",style:{position:"relative"}},r.createElement(t.a,{href:"#72-computer-vision","aria-label":"72 computer vision permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"7.2. computer vision"),"\n",r.createElement(t.p,null,"In computer vision, MoE-based Transformers (Vision MoE) partition the feedforward layers into experts. They have been shown to scale up image classification tasks efficiently. In object detection or instance segmentation, you could imagine an MoE approach where certain experts are specialized in small objects, while others handle large or unusual objects."),"\n",r.createElement(t.h3,{id:"73-recommender-systems",style:{position:"relative"}},r.createElement(t.a,{href:"#73-recommender-systems","aria-label":"73 recommender systems permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"7.3. recommender systems"),"\n",r.createElement(t.p,null,"MoE is also well-suited to recommender systems, which often have a diverse user base with varying interests. Different experts may specialize in distinct user segments. A gating network might input user features and item features, deciding which sub-model is best for that particular user-item pair. This can lead to improved personalization and more efficient training."),"\n",r.createElement(t.h3,{id:"74-multi-task-learning",style:{position:"relative"}},r.createElement(t.a,{href:"#74-multi-task-learning","aria-label":"74 multi task learning permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"7.4. multi-task learning"),"\n",r.createElement(t.p,null,'When dealing with multiple tasks that share some underlying representation but also require unique specializations, MoE can be extremely effective. The gating network might incorporate a "task ID" or some representation of the task into its decision, letting certain experts handle certain tasks. By sharing experts among tasks (and allowing some experts to remain specialized for one task), multi-task performance can often be boosted.'),"\n",r.createElement(t.h2,{id:"8-common-pitfalls-and-solutions",style:{position:"relative"}},r.createElement(t.a,{href:"#8-common-pitfalls-and-solutions","aria-label":"8 common pitfalls and solutions permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"8. common pitfalls and solutions"),"\n",r.createElement(t.h3,{id:"81-expert-collapse",style:{position:"relative"}},r.createElement(t.a,{href:"#81-expert-collapse","aria-label":"81 expert collapse permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"8.1. expert collapse"),"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Symptom"),": Only a few experts end up being used regularly; the rest remain idle."),"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Possible fixes"),":"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"Use stronger load-balancing penalties."),"\n",r.createElement(t.li,null,"Introduce random or forced exploration in gating decisions (for example, for some fraction of the time, pick a different expert)."),"\n",r.createElement(t.li,null,"Ensure that the gating network has enough capacity or is trained with a separate schedule so it can properly learn to utilize different experts."),"\n"),"\n",r.createElement(t.h3,{id:"82-overfitting-in-specialized-experts",style:{position:"relative"}},r.createElement(t.a,{href:"#82-overfitting-in-specialized-experts","aria-label":"82 overfitting in specialized experts permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"8.2. overfitting in specialized experts"),"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Symptom"),": An expert becomes too narrowly adapted to a very small portion of the input space, leading to poor generalization."),"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Possible fixes"),":"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"Increase data augmentation or regularization within that expert."),"\n",r.createElement(t.li,null,"Encourage some degree of overlap between experts so that each sub-domain is handled by more than one expert."),"\n",r.createElement(t.li,null,"Merge or prune underutilized experts."),"\n"),"\n",r.createElement(t.h3,{id:"83-training-instabilities",style:{position:"relative"}},r.createElement(t.a,{href:"#83-training-instabilities","aria-label":"83 training instabilities permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"8.3. training instabilities"),"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Symptom"),": Large swings in gating distributions over the course of training, or gradient explosion/vanishing in experts."),"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Possible fixes"),":"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"Carefully tune learning rates for gating vs. experts."),"\n",r.createElement(t.li,null,"Apply gradient clipping to expert parameters or gating parameters."),"\n",r.createElement(t.li,null,"Use a warm-up or curriculum strategy so that gating distribution changes more gradually."),"\n"),"\n",r.createElement(t.h3,{id:"84-practical-debugging-tips",style:{position:"relative"}},r.createElement(t.a,{href:"#84-practical-debugging-tips","aria-label":"84 practical debugging tips permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"8.4. practical debugging tips"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Inspect gating distributions.")," Track how often each expert is selected per batch or per token. If some experts are never being used, re-check load-balancing hyperparameters."),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Visualize activation patterns.")," For smaller or illustrative tasks, create heatmaps of which experts are chosen for which inputs."),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Check resource usage across experts.")," If you're using a distributed setup, ensure that GPU usage is balanced and no single device is a bottleneck."),"\n"),"\n"),"\n",r.createElement(t.h2,{id:"9-future-directions-and-research-frontiers",style:{position:"relative"}},r.createElement(t.a,{href:"#9-future-directions-and-research-frontiers","aria-label":"9 future directions and research frontiers permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"9. future directions and research frontiers"),"\n",r.createElement(t.h3,{id:"91-combining-moe-with-meta-learning",style:{position:"relative"}},r.createElement(t.a,{href:"#91-combining-moe-with-meta-learning","aria-label":"91 combining moe with meta learning permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"9.1. combining moe with meta-learning"),"\n",r.createElement(t.p,null,"A fascinating direction is to make experts themselves adaptable. Instead of training a single fixed expert per region, one could incorporate meta-learning so that experts can quickly adapt to new tasks or data in their region of expertise. This would be especially potent in few-shot or continual learning scenarios, where new data distributions emerge over time."),"\n",r.createElement(t.h3,{id:"92-multi-modal-mixture-of-experts",style:{position:"relative"}},r.createElement(t.a,{href:"#92-multi-modal-mixture-of-experts","aria-label":"92 multi modal mixture of experts permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"9.2. multi-modal mixture of experts"),"\n",r.createElement(t.p,null,"With the rise of multi-modal AI — systems that handle text, images, video, or audio — an MoE approach can be used to route each modality to specialized experts. Even within a single modality, you might have experts focusing on different feature hierarchies. For instance, in a multi-modal architecture, you could have text experts, image experts, and audio experts, each being invoked only when the respective modality is present."),"\n",r.createElement(t.h3,{id:"93-scaling-to-ultra-large-models",style:{position:"relative"}},r.createElement(t.a,{href:"#93-scaling-to-ultra-large-models","aria-label":"93 scaling to ultra large models permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"9.3. scaling to ultra-large models"),"\n",r.createElement(t.p,null,'We continue to see a race toward extremely large-scale models. By pushing the boundary of how many experts can be integrated, we can conceptually achieve "infinite capacity." The main hurdles remain practical: how to store these experts, how to effectively route data among them in a distributed environment, and how to keep training stable as model sizes explode.'),"\n",r.createElement(t.p,null,"Research also involves new routing strategies that might better handle large batch sizes and tricky distributions of data. We might see more advanced or learned scheduling algorithms that use optimization approaches or even reinforcement learning for routing."),"\n",r.createElement(t.hr),"\n",r.createElement(t.p,null,"Below, I expand on several additional topics and incorporate illustrative examples, code snippets, and LaTeX formulas to further deepen your understanding of mixture of experts. I also include references to the advanced theories behind the gating process and the mathematics of training. By doing so, you can clearly see how these ideas coalesce into state-of-the-art architectures like Switch Transformer, GLaM, and other large-scale MoE systems."),"\n",r.createElement(t.h2,{id:"extended-discussion-deeper-theoretical-underpinnings",style:{position:"relative"}},r.createElement(t.a,{href:"#extended-discussion-deeper-theoretical-underpinnings","aria-label":"extended discussion deeper theoretical underpinnings permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"extended discussion: deeper theoretical underpinnings"),"\n",r.createElement(t.h3,{id:"bayesian-viewpoint",style:{position:"relative"}},r.createElement(t.a,{href:"#bayesian-viewpoint","aria-label":"bayesian viewpoint permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"bayesian viewpoint"),"\n",r.createElement(t.p,null,"Mixture of experts can be viewed under a Bayesian lens: the gating function's output ",r.createElement(s.A,{text:"\\(w_i(x)\\)"})," can be interpreted as the prior probability that expert ",r.createElement(s.A,{text:"\\(i\\)"})," is correct for input ",r.createElement(s.A,{text:"\\(x\\)"}),". Meanwhile, the expert's output can be considered its predictive distribution for the label or target. One can combine these to form a posterior for each expert's correctness."),"\n",r.createElement(t.p,null,"In the simplest classical case (like the adaptive mixtures of local experts by Jacobs and Jordan), each expert is a Gaussian distribution parameterized by ",r.createElement(s.A,{text:"\\(\\mu_i\\)"})," (and possibly ",r.createElement(s.A,{text:"\\(\\Sigma_i\\)"}),"). The gating network yields ",r.createElement(s.A,{text:"\\(w_i(x)\\)"}),", the prior. After seeing the actual label ",r.createElement(s.A,{text:"\\(y\\)"}),", you can do a Bayesian update."),"\n",r.createElement(t.p,null,"This interpretation clarifies how experts become specialized — once an expert invests in a certain region of the input-output space, the gating network shifts more probability to it whenever the input is recognized as belonging to that region."),"\n",r.createElement(t.h3,{id:"additional-latex-example",style:{position:"relative"}},r.createElement(t.a,{href:"#additional-latex-example","aria-label":"additional latex example permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"additional latex example"),"\n",r.createElement(t.p,null,"Suppose you have a classification setting with ",r.createElement(s.A,{text:"\\(C\\)"})," classes, and each expert ",r.createElement(s.A,{text:"\\(i\\)"})," produces a probability distribution ",r.createElement(s.A,{text:"\\(p_i(y|x)\\)"}),". Then the MoE output distribution is:"),"\n",r.createElement(s.A,{text:"\\[\np(y|x) = \\sum_{i=1}^n w_i(x)\\,p_i(y|x).\n\\]"}),"\n",r.createElement(t.p,null,"The gating network parameters ",r.createElement(s.A,{text:"\\(\\theta_0\\)"}),", and each expert's parameters ",r.createElement(s.A,{text:"\\(\\theta_i\\)"}),", are jointly learned by minimizing the negative log-likelihood:"),"\n",r.createElement(s.A,{text:"\\[\n-\\log p(y|x) = -\\log\\Bigl(\\sum_{i=1}^n w_i(x)\\, p_i(y|x)\\Bigr).\n\\]"}),"\n",r.createElement(t.p,null,"One challenge here is that the sum over experts is inside a log, leading to potential gradient difficulties when ",r.createElement(s.A,{text:"\\(w_i(x)\\)"})," is near zero for many experts. This is part of what spurred interest in sparse gating, where typically only the top-k terms in the sum are used."),"\n",r.createElement(t.h2,{id:"extended-discussion-advanced-routing-strategies",style:{position:"relative"}},r.createElement(t.a,{href:"#extended-discussion-advanced-routing-strategies","aria-label":"extended discussion advanced routing strategies permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"extended discussion: advanced routing strategies"),"\n",r.createElement(t.h3,{id:"example-routing-code-python",style:{position:"relative"}},r.createElement(t.a,{href:"#example-routing-code-python","aria-label":"example routing code python permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"example routing code (python)"),"\n",r.createElement(t.p,null,"Below is a simplified demonstration of how one might implement a top-k gating mechanism in Python (pseudo-PyTorch style) for a single MoE layer with hard gating:"),"\n",r.createElement(l.A,{text:"\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass GatingNetwork(nn.Module):\n    def __init__(self, input_dim, num_experts):\n        super().__init__()\n        self.linear = nn.Linear(input_dim, num_experts)\n    \n    def forward(self, x):\n        # x: [batch_size, input_dim]\n        # output: [batch_size, num_experts]\n        logits = self.linear(x)\n        return logits\n\nclass Expert(nn.Module):\n    def __init__(self, input_dim, hidden_dim, output_dim):\n        super().__init__()\n        self.fc1 = nn.Linear(input_dim, hidden_dim)\n        self.fc2 = nn.Linear(hidden_dim, output_dim)\n\n    def forward(self, x):\n        # x: [batch_size, input_dim]\n        h = F.relu(self.fc1(x))\n        out = self.fc2(h)\n        return out\n\nclass MixtureOfExperts(nn.Module):\n    def __init__(self, input_dim, hidden_dim, output_dim, num_experts, k=1):\n        super().__init__()\n        self.num_experts = num_experts\n        self.k = k\n        self.gate = GatingNetwork(input_dim, num_experts)\n        self.experts = nn.ModuleList([\n            Expert(input_dim, hidden_dim, output_dim) for _ in range(num_experts)\n        ])\n    \n    def forward(self, x):\n        # x: [batch_size, input_dim]\n        gate_logits = self.gate(x)  # [batch_size, num_experts]\n\n        # Let's do a top-k selection for each instance in the batch\n        # gate_logits is shape [B, n], we want top-k for each row\n        topk_vals, topk_inds = torch.topk(gate_logits, self.k, dim=1)\n        # We'll apply a softmax among the chosen k\n        # Then we'll compute the output from each chosen expert\n        batch_size = x.shape[0]\n        out = torch.zeros(batch_size, self.experts[0].fc2.out_features, device=x.device)\n\n        for b in range(batch_size):\n            # Get indices of top-k experts\n            inds = topk_inds[b]   # shape [k]\n            vals = topk_vals[b]   # shape [k]\n            # Softmax among the top-k\n            sm_vals = F.softmax(vals, dim=0)  # shape [k]\n            \n            # Compute each expert's output and weigh it\n            for i, exp_idx in enumerate(inds):\n                e_out = self.experts[exp_idx](x[b].unsqueeze(0)) # shape [1, output_dim]\n                out[b] += sm_vals[i] * e_out.squeeze(0)\n        \n        return out\n"}),"\n",r.createElement(t.p,null,"In this snippet:"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"GatingNetwork")," is a linear module that produces ",r.createElement(s.A,{text:"\\(n\\)"})," logits, one for each expert."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"topk")," is used to pick the top-",r.createElement(s.A,{text:"\\(k\\)"})," experts for each sample in the batch."),"\n",r.createElement(t.li,null,"A local softmax is then performed on those top-k logits so that they sum to 1."),"\n",r.createElement(t.li,null,"Only those experts are run, and their outputs are combined proportionally to the gating probabilities."),"\n"),"\n",r.createElement(t.p,null,"Note that this code is a simplified illustration. Real-world implementations handle larger batch sizes in parallel, manage distributed training, and incorporate additional balancing losses. They might also store the input tokens for each selected expert in a single contiguous buffer to speed up matrix multiplications."),"\n",r.createElement(t.h2,{id:"extended-discussion-specialized-applications",style:{position:"relative"}},r.createElement(t.a,{href:"#extended-discussion-specialized-applications","aria-label":"extended discussion specialized applications permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"extended discussion: specialized applications"),"\n",r.createElement(t.h3,{id:"speech-processing",style:{position:"relative"}},r.createElement(t.a,{href:"#speech-processing","aria-label":"speech processing permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"speech processing"),"\n",r.createElement(t.p,null,"In speech recognition, different speakers, accents, or environmental conditions can be drastically distinct. An MoE architecture might create experts that each focuses on male voices vs. female voices, or noisy vs. clean audio. Over time, the gating network learns that certain acoustic features map to a specialized sub-model that better handles that type of input."),"\n",r.createElement(t.h3,{id:"anomaly-detection",style:{position:"relative"}},r.createElement(t.a,{href:"#anomaly-detection","aria-label":"anomaly detection permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"anomaly detection"),"\n",r.createElement(t.p,null,"In anomaly or outlier detection, MoE can be used so that one or more experts specialize in normal operating conditions, while another set of experts focuses on capturing rarer phenomena or error states. The gating network learns to detect that an input is unusual and route it to the experts that handle anomalies well."),"\n",r.createElement(t.h3,{id:"multi-lingual-tasks",style:{position:"relative"}},r.createElement(t.a,{href:"#multi-lingual-tasks","aria-label":"multi lingual tasks permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"multi-lingual tasks"),"\n",r.createElement(t.p,null,"As mentioned, multi-lingual text modeling is a prime case for MoE, because each language can represent a fairly distinct distribution. A gating network might pick language-specific experts or even experts that specialize in the morphological or syntactic structure of certain language families."),"\n",r.createElement(t.h2,{id:"extended-discussion-hardware-scaling-and-distributed-setups",style:{position:"relative"}},r.createElement(t.a,{href:"#extended-discussion-hardware-scaling-and-distributed-setups","aria-label":"extended discussion hardware scaling and distributed setups permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"extended discussion: hardware scaling and distributed setups"),"\n",r.createElement(t.h3,{id:"gshard-and-beyond",style:{position:"relative"}},r.createElement(t.a,{href:"#gshard-and-beyond","aria-label":"gshard and beyond permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"gshard and beyond"),"\n",r.createElement(t.p,null,"Google's GShard system exemplified how to train extremely large MoE models by sharding the parameters across a large number of devices. Each expert's parameters (or a subset of them) might reside on a separate worker. During a forward pass, tokens from the global batch are assigned to whichever experts are chosen by the gating function. Then, an efficient collective communication strategy is used to gather the token representations to the relevant device(s), do the forward pass, and gather results back."),"\n",r.createElement(t.p,null,"A major engineering challenge is ensuring that these communications don't become a bottleneck. Techniques such as capacity factor constraints, expert parallelization, and carefully orchestrated micro-batches can reduce overhead."),"\n",r.createElement(t.h3,{id:"memory-vs-compute-trade-offs",style:{position:"relative"}},r.createElement(t.a,{href:"#memory-vs-compute-trade-offs","aria-label":"memory vs compute trade offs permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"memory vs. compute trade-offs"),"\n",r.createElement(t.p,null,"MoE models can push the total parameter count into the trillions, and that in itself can hamper training if not carefully managed. Still, if each token only sees a small fraction of those parameters, the total training compute can remain manageable. This capacity vs. compute dynamic is a large reason behind MoE's popularity among large language model developers."),"\n",r.createElement(t.h2,{id:"extended-discussion-real-world-debugging-scenarios",style:{position:"relative"}},r.createElement(t.a,{href:"#extended-discussion-real-world-debugging-scenarios","aria-label":"extended discussion real world debugging scenarios permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"extended discussion: real-world debugging scenarios"),"\n",r.createElement(t.ol,null,"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Under-utilized experts in early training"),": Sometimes, random initialization means the gating network gives higher gating logits to a particular expert. This can snowball: that expert's parameters improve faster, encouraging the gate to use it even more. If you notice this, consider an approach that forces random gating for some warm-up period."),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Overlapping experts"),": Two experts might inadvertently learn very similar functions. This can reduce the overall diversity of the system. Checking correlation or similarity metrics between experts' parameters can reveal if they are redundant."),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.strong,null,"Expert drift"),': As training progresses, an expert that was specialized in a certain domain might shift to a different one, potentially leaving the first domain uncovered. Periodic snapshots of gating distributions can reveal domain "drift."'),"\n"),"\n"),"\n",r.createElement(t.h2,{id:"final-notes-on-continuing-research",style:{position:"relative"}},r.createElement(t.a,{href:"#final-notes-on-continuing-research","aria-label":"final notes on continuing research permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"final notes on continuing research"),"\n",r.createElement(t.p,null,"Mixture of experts remains an active area of research, particularly in the context of large-scale systems. Open questions and directions include:"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Dynamic creation and removal of experts"),": Could the model automatically spawn new experts if the data distribution is too broad, or retire experts if they become obsolete?"),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Hierarchical gating"),": More complex gating topologies might yield better results for structured data or multi-task scenarios."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Exploration vs. exploitation"),": The gating network must exploit known assignments (since some experts are definitely good in specific domains) while also exploring assignments that might reveal hidden sub-problems. This dynamic is reminiscent of multi-armed bandit problems in reinforcement learning."),"\n",r.createElement(t.li,null,r.createElement(t.strong,null,"Multi-modal expansions"),": As multi-modal tasks become standard, we expect new MoE designs that elegantly unify textual, visual, auditory, and even sensor-based inputs under a single gating framework."),"\n"),"\n",r.createElement(t.p,null,'And beyond these technical concerns, there is growing interest in the interpretability of large MoE models. Because gating networks essentially "decide" which sub-model handles each input, some interpretability can be gleaned by seeing the gating function\'s decisions. This is in contrast to monolithic models where it can be harder to discern which part of the network is responsible for which type of input behavior.'),"\n",r.createElement(t.h2,{id:"additional-image-placeholders",style:{position:"relative"}},r.createElement(t.a,{href:"#additional-image-placeholders","aria-label":"additional image placeholders permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"additional image placeholders"),"\n",r.createElement(a,{alt:"MoE architecture diagram",path:"",caption:"A schematic showing an input x fed into a gating network, which then routes to multiple experts f1, f2, ..., fn, and finally aggregates their results.",zoom:"false"}),"\n",r.createElement(a,{alt:"Sparse vs. dense gating illustration",path:"",caption:"Side-by-side depiction of a dense gating approach (where all experts are used) versus a sparse gating approach (where only top-k experts are used for each input).",zoom:"false"}),"\n",r.createElement(t.h2,{id:"conclusion",style:{position:"relative"}},r.createElement(t.a,{href:"#conclusion","aria-label":"conclusion permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"conclusion"),"\n",r.createElement(t.p,null,"Mixture of experts architectures stand at the forefront of addressing two critical challenges in modern machine learning: the necessity for enormous capacity to handle diverse data, and the reality of constrained computational resources. By embracing a divide-and-conquer philosophy, MoE models enable specialized sub-networks to excel at particular subtasks or input domains, all orchestrated by a gating mechanism that learns optimal routing."),"\n",r.createElement(t.p,null,"Far from being a mere academic curiosity of the 1990s, mixture of experts has resurfaced as a leading design principle for building extremely large models, notably in natural language processing and, increasingly, in other fields like computer vision and recommender systems. The potential for dynamic routing, conditional computation, and specialized adaptation makes MoE a tantalizing direction for future research — one that might well define the next generation of cutting-edge AI systems."),"\n",r.createElement(t.p,null,"In your own work, exploring mixture of experts can allow you to scale your models dramatically, handle heterogeneous data distributions with aplomb, and ultimately build deep learning solutions that more closely emulate real-world specialization — mirroring how humans organize expertise to tackle an incredibly wide range of problems."))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,i.RP)(),e.components);return t?r.createElement(t,e,r.createElement(o,e)):o(e)};var h=a(36710),d=a(58481),m=a.n(d),p=a(36310),u=a(87245),g=a(27042),f=a(59849),v=a(5591),b=a(61122),x=a(9219),y=a(33203),E=a(95751),w=a(94328),S=a(80791),k=a(78137);const H=e=>{let{toc:t}=e;if(!t||!t.items)return null;return r.createElement("nav",{className:S.R},r.createElement("ul",null,t.items.map(((e,t)=>r.createElement("li",{key:t},r.createElement("a",{href:e.url,onClick:t=>((e,t)=>{e.preventDefault();const a=t.replace("#",""),n=document.getElementById(a);n&&n.scrollIntoView({behavior:"smooth",block:"start"})})(t,e.url)},e.title),e.items&&r.createElement(H,{toc:{items:e.items}}))))))};function _(e){let{data:{mdx:t,allMdx:l,allPostImages:s},children:o}=e;const{frontmatter:c,body:h,tableOfContents:d}=t,f=c.index,S=c.slug.split("/")[1],_=l.nodes.filter((e=>e.frontmatter.slug.includes(`/${S}/`))).sort(((e,t)=>e.frontmatter.index-t.frontmatter.index)),z=_.findIndex((e=>e.frontmatter.index===f)),M=_[z+1],T=_[z-1],C=c.slug.replace(/\/$/,""),I=/[^/]*$/.exec(C)[0],V=`posts/${S}/content/${I}/`,{0:A,1:N}=(0,r.useState)(c.flagWideLayoutByDefault),{0:L,1:B}=(0,r.useState)(!1);var P;(0,r.useEffect)((()=>{B(!0);const e=setTimeout((()=>B(!1)),340);return()=>clearTimeout(e)}),[A]),"adventures"===S?P=x.cb:"research"===S?P=x.Qh:"thoughts"===S&&(P=x.T6);const O=m()(h).replace(/import .*? from .*?;/g,"").replace(/<.*?>/g,"").replace(/\{\/\*[\s\S]*?\*\/\}/g,"").trim().split(/\s+/).length,G=function(e){if(e<=10)return"~10 min";if(e<=20)return"~20 min";if(e<=30)return"~30 min";if(e<=40)return"~40 min";if(e<=50)return"~50 min";if(e<=60)return"~1 h";const t=Math.floor(e/60),a=e%60;return a<=30?`~${t}${a>0?".5":""} h`:`~${t+1} h`}(Math.ceil(O/P)+(c.extraReadTimeMin||0)),q=[{flag:c.flagDraft,component:()=>Promise.all([a.e(3231),a.e(8809)]).then(a.bind(a,28809))},{flag:c.flagMindfuckery,component:()=>Promise.all([a.e(3231),a.e(2471)]).then(a.bind(a,67709))},{flag:c.flagRewrite,component:()=>Promise.all([a.e(3231),a.e(6764)]).then(a.bind(a,62002))},{flag:c.flagOffensive,component:()=>Promise.all([a.e(3231),a.e(2443)]).then(a.bind(a,17681))},{flag:c.flagProfane,component:()=>Promise.all([a.e(3231),a.e(8048)]).then(a.bind(a,53286))},{flag:c.flagMultilingual,component:()=>Promise.all([a.e(3231),a.e(4069)]).then(a.bind(a,78831))},{flag:c.flagUnreliably,component:()=>Promise.all([a.e(3231),a.e(3417)]).then(a.bind(a,8179))},{flag:c.flagPolitical,component:()=>Promise.all([a.e(3231),a.e(5195)]).then(a.bind(a,30433))},{flag:c.flagCognitohazard,component:()=>Promise.all([a.e(3231),a.e(3175)]).then(a.bind(a,8413))},{flag:c.flagHidden,component:()=>Promise.all([a.e(3231),a.e(9556)]).then(a.bind(a,14794))}],{0:j,1:F}=(0,r.useState)([]);return(0,r.useEffect)((()=>{q.forEach((e=>{let{flag:t,component:a}=e;t&&a().then((e=>{F((t=>[].concat((0,n.A)(t),[e.default])))}))}))}),[]),r.createElement(g.P.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},transition:{duration:.15}},r.createElement(v.A,{postNumber:c.index,date:c.date,updated:c.updated,readTime:G,difficulty:c.difficultyLevel,title:c.title,desc:c.desc,banner:c.banner,section:S,postKey:I,isMindfuckery:c.flagMindfuckery,mainTag:c.mainTag}),r.createElement("div",{style:{display:"flex",justifyContent:"flex-end",flexWrap:"wrap",maxWidth:"75%",marginLeft:"auto",paddingRight:"1vw",marginTop:"-6vh",marginBottom:"4vh"}},c.otherTags.map(((e,t)=>r.createElement("span",{key:t,className:`noselect ${k.MW}`,style:{margin:"0 5px 5px 0"}},e)))),r.createElement("div",{className:"postBody"},r.createElement(H,{toc:d})),r.createElement("br"),r.createElement("div",{style:{margin:"0 10% -2vh 30%",textAlign:"right"}},r.createElement(g.P.button,{className:`noselect ${w.pb}`,id:w.xG,onClick:()=>{N(!A)},whileTap:{scale:.93}},r.createElement(g.P.div,{className:E.DJ,key:A,initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},transition:{duration:.3,ease:"easeInOut"}},A?"Switch to default layout":"Switch to wide layout"))),r.createElement("br"),r.createElement("div",{className:"postBody",style:{margin:A?"0 -14%":"",maxWidth:A?"200%":"",transition:"margin 1s ease, max-width 1s ease, padding 1s ease"}},r.createElement("div",{className:`${w.P_} ${L?w.Xn:w.qG}`},j.map(((e,t)=>r.createElement(e,{key:t}))),c.indexCourse?r.createElement(y.A,{index:c.indexCourse,category:c.courseCategoryName}):"",r.createElement(p.Z.Provider,{value:{images:s.nodes,basePath:V.replace(/\/$/,"")+"/"}},r.createElement(i.xA,{components:{Image:u.A}},o)))),r.createElement(b.A,{nextPost:M,lastPost:T,keyCurrent:I,section:S}))}function z(e){return r.createElement(_,e,r.createElement(c,e))}function M(e){var t,a,n,i,l;let{data:s}=e;const{frontmatter:o}=s.mdx,c=o.titleSEO||o.title,d=o.titleOG||c,m=o.titleTwitter||c,p=o.descSEO||o.desc,u=o.descOG||p,g=o.descTwitter||p,v=o.schemaType||"BlogPosting",b=o.keywordsSEO,x=o.date,y=o.updated||x,E=o.imageOG||(null===(t=o.banner)||void 0===t||null===(a=t.childImageSharp)||void 0===a||null===(n=a.gatsbyImageData)||void 0===n||null===(i=n.images)||void 0===i||null===(l=i.fallback)||void 0===l?void 0:l.src),w=o.imageAltOG||u,S=o.imageTwitter||E,k=o.imageAltTwitter||g,H=o.canonicalURL,_=o.flagHidden||!1,z=o.mainTag||"Posts",M=o.slug.split("/")[1]||"posts",{siteUrl:T}=(0,h.Q)(),C={"@context":"https://schema.org","@type":"BreadcrumbList",itemListElement:[{"@type":"ListItem",position:1,name:"Home",item:T},{"@type":"ListItem",position:2,name:z,item:`${T}/${o.slug.split("/")[1]}`},{"@type":"ListItem",position:3,name:c,item:`${T}${o.slug}`}]};return r.createElement(f.A,{title:c+" - avrtt.blog",titleOG:d,titleTwitter:m,description:p,descriptionOG:u,descriptionTwitter:g,schemaType:v,keywords:b,datePublished:x,dateModified:y,imageOG:E,imageAltOG:w,imageTwitter:S,imageAltTwitter:k,canonicalUrl:H,flagHidden:_,mainTag:z,section:M,type:"article"},r.createElement("script",{type:"application/ld+json"},JSON.stringify(C)))}}}]);
//# sourceMappingURL=component---src-templates-post-js-content-file-path-src-pages-posts-research-moe-architecture-mdx-fc49b09b9b2822bda7b9.js.map