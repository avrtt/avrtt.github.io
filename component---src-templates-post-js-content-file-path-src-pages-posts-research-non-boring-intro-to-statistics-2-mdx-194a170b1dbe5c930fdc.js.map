{"version":3,"file":"component---src-templates-post-js-content-file-path-src-pages-posts-research-non-boring-intro-to-statistics-2-mdx-194a170b1dbe5c930fdc.js","mappings":"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","sources":["webpack://avrtt.blog/./src/pages/posts/research/non_boring_intro_to_statistics_2.mdx","webpack://avrtt.blog/./src/templates/post.js","webpack://avrtt.blog/./src/components/StickerPack/index.js","webpack://avrtt.blog/./src/components/Latex/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/*\n\nДля этого поста разобрать Obsidian-заметку (см. папку \"🚧 Unfinished\").\n\n*/\n/*\n\nАлгоритмы сэмплирования\nhttps://neerc.ifmo.ru/wiki/index.php?title=%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D1%8B_%D1%81%D1%8D%D0%BC%D0%BF%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F\n\n- [Решение проблемы дисбаланса классов при обучении моделей классификации](https://machinelearningmastery.com/tactics-to-combat-imbalanced-classes-in-your-machine-learning-dataset/).\n- [Генерация искусственных наблюдений миноритарного класса (SMOTE)](https://machinelearningmastery.com/smote-oversampling-for-imbalanced-classification/).\n- [Сэмплирование](https://ru.wikipedia.org/wiki/%D0%A1%D0%B5%D0%BC%D0%BF%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%81%D1%82%D0%B8%D0%BA%D0%B0)).\n- [Причины перекосов в распределении выборки](https://en.wikipedia.org/wiki/Sampling_bias).\n- [Ошибка выборки, её измерение](https://en.wikipedia.org/wiki/Sampling_error).\n\nhttps://habr.com/ru/post/461285/\n\n[https://youtu.be/ualmyZiPs9w](https://youtu.be/ualmyZiPs9w)\n\n[https://youtu.be/Dn6b9fCIUpM](https://youtu.be/Dn6b9fCIUpM)\n\n[http://www.mathprofi.ru/statisticheskie_ocenki_parametrov_generalnoy_sovokupnosti.html](http://www.mathprofi.ru/statisticheskie_ocenki_parametrov_generalnoy_sovokupnosti.html)\n\n[https://youtu.be/okjYjClSjOg](https://youtu.be/okjYjClSjOg)\n[https://youtu.be/ecjN6Xpv6SE](https://youtu.be/ecjN6Xpv6SE)\n\n[https://jakevdp.github.io/PythonDataScienceHandbook/05.13-kernel-density-estimation.html](https://jakevdp.github.io/PythonDataScienceHandbook/05.13-kernel-density-estimation.html)\n[https://mathisonian.github.io/kde/](https://mathisonian.github.io/kde/)\n[https://ru.wikipedia.org/wiki/Ядерная_оценка_плотности](https://ru.wikipedia.org/wiki/%D0%AF%D0%B4%D0%B5%D1%80%D0%BD%D0%B0%D1%8F_%D0%BE%D1%86%D0%B5%D0%BD%D0%BA%D0%B0_%D0%BF%D0%BB%D0%BE%D1%82%D0%BD%D0%BE%D1%81%D1%82%D0%B8)\n\n- Пять важнейших концепций статистики для собеседований по Data Science ([видео](https://youtu.be/Allap_hrjyo)).\n- Задачи о выборках и моделировании на собеседованиях по Data Science ([видео](https://youtu.be/-SANBbv0-Hw)).\n\nhttps://www.cs.cornell.edu/courses/cs4780/2024sp/lectures/lecturenote04.html\n\n*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport StickerPack from \"../../../components/StickerPack\";\nimport Highlight from \"../../../components/Highlight\";\nimport Code from \"../../../components/Code\";\nimport Latex from \"../../../components/Latex\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\",\n    ul: \"ul\",\n    hr: \"hr\",\n    br: \"br\"\n  }, _provideComponents(), props.components), {Image} = _components;\n  if (!Image) _missingMdxReference(\"Image\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.em, null, \"Statistically, a liar is believed more if he cites statistics.\")), \"\\n\", React.createElement(\"br\"), \"\\n\", \"\\n\", \"\\n\", React.createElement(_components.h2, {\n    id: \"sampling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#sampling\",\n    \"aria-label\": \"sampling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Sampling\"), \"\\n\", React.createElement(_components.p, null, \"Let's get a bit closer to machine learning.\"), \"\\n\", React.createElement(_components.p, null, \"Sampling is the process of selecting a subset of data points or observations from a larger population. This is done so we can analyze the subset and make reasonable inferences about the entire population — without having to collect or observe every possible data point. In data science and machine learning, sampling is pervasive: from building training sets to constructing test sets, we rely on carefully chosen samples to train and evaluate our models. When done correctly, sampling can save enormous resources (time, cost, computational effort) while preserving the essential characteristics of the overall population.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"sampling-methods-and-strategies\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#sampling-methods-and-strategies\",\n    \"aria-label\": \"sampling methods and strategies permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Sampling methods and strategies\"), \"\\n\", React.createElement(_components.p, null, \"Sampling methods can be broadly divided into \", React.createElement(Highlight, null, \"probability-based\"), \" and \", React.createElement(Highlight, null, \"non-probability-based\"), \" strategies:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Probability-based sampling\"), \": Each member of the population has a known (and typically non-zero) probability of being selected.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Simple random sampling\"), \": Every individual in the population has an equal chance of being selected. This is often done by assigning random numbers to the population and picking the smallest (or largest) subset or by using randomizing functions in software.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Systematic sampling\"), \": You pick a random start point and then select every \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \"-th item, where \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \" is determined by dividing the population size by the desired sample size.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Stratified sampling\"), \": The population is divided into homogeneous subgroups, or strata (e.g., by age group, region, or income bracket). You then randomly select individuals from each stratum in proportion to that stratum's size in the population.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Cluster sampling\"), \": The population is split into clusters (e.g., geographical areas, organizational units). A subset of clusters is then selected randomly, and within each chosen cluster, you either collect data from every member or again select a random subset.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Non-probability-based sampling\"), \":\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Convenience sampling\"), \": Selecting participants or data points based on their easy availability (e.g., surveying people in a mall).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Quota sampling\"), \": Ensuring that the sample meets certain quotas for predefined categories (e.g., 40% female, 60% male) but otherwise using a non-random approach within each category.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Snowball sampling\"), \": Typically used when the population is hard to reach or hidden. Existing participants recruit future ones (e.g., surveying members of niche online forums).\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Each approach has trade-offs. Probability-based methods typically allow for more rigorous statistical inference (e.g., confidence intervals, error bounds), whereas non-probability methods are sometimes faster or more practical in real-world settings.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"importance-of-representative-samples\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#importance-of-representative-samples\",\n    \"aria-label\": \"importance of representative samples permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Importance of representative samples\"), \"\\n\", React.createElement(_components.p, null, \"A \", React.createElement(Highlight, null, \"representative sample\"), \" is one that captures the essential characteristics of the broader population. If the sample systematically overrepresents or underrepresents certain features, any statistical inference from that sample could be biased or misleading. For instance, if you are polling political opinions and only sample individuals who frequently use social media, your results might not represent those who rarely use the internet — leading to skewed conclusions.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"importance-of-sampling-in-statistics\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#importance-of-sampling-in-statistics\",\n    \"aria-label\": \"importance of sampling in statistics permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Importance of sampling in statistics\"), \"\\n\", React.createElement(_components.p, null, \"Sampling underpins almost every statistical procedure. Many foundational techniques — like hypothesis testing, confidence interval construction, or regression analysis — depend on the assumption that the data analyzed are drawn from a representative sample. If this assumption is violated, our estimates of the population parameters (e.g., mean, variance) may be inaccurate, making all subsequent analyses questionable.\"), \"\\n\", React.createElement(_components.p, null, \"Moreover, in \", React.createElement(Highlight, null, \"machine learning\"), \", we often split a dataset into training, validation, and test sets. Doing so correctly relies on sound sampling strategies that preserve overall class distributions (in classification) or other important characteristics. This helps ensure that model performance metrics generalize to the real-world data distribution.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"types-of-sampling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#types-of-sampling\",\n    \"aria-label\": \"types of sampling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Types of sampling\"), \"\\n\", React.createElement(_components.p, null, \"Here are the key types in concise form:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Random (simple random sampling)\"), \": Every member of the population has an equal probability of being included.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Stratified sampling\"), \": The population is split by known characteristics (strata), and a random sample is taken within each group to ensure representation.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Cluster sampling\"), \": Natural groupings in the population serve as \\\"clusters.\\\" A random set of clusters is chosen, and data are collected from within each selected cluster.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Systematic sampling\"), \": A fixed, periodic interval is used after a random start.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"sampling-bias-and-how-to-avoid-it\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#sampling-bias-and-how-to-avoid-it\",\n    \"aria-label\": \"sampling bias and how to avoid it permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Sampling bias and how to avoid it\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Sampling bias\"), \" occurs when some members of the population are more likely to be chosen than others, distorting inferences about the population. Common causes include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Selection bias\"), \": The way participants are selected (e.g., using only volunteers) is not representative.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Non-response bias\"), \": Individuals who choose not to respond differ systematically from those who do.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Undercoverage\"), \": Important segments of the population are insufficiently included (e.g., not having phone numbers for rural households).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"To mitigate sampling bias:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Use random selection whenever possible.\"), \"\\n\", React.createElement(_components.li, null, \"Compare sample demographics to known population demographics (if available) to detect imbalances.\"), \"\\n\", React.createElement(_components.li, null, \"Employ techniques like weighting to account for underrepresented groups.\"), \"\\n\", React.createElement(_components.li, null, \"Ensure clear and accessible data-collection processes that minimize barriers to participation.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"reservoir-sampling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#reservoir-sampling\",\n    \"aria-label\": \"reservoir sampling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Reservoir Sampling\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Reservoir sampling\"), \" is a clever technique to draw a fixed-size random sample from a potentially large or unknown-size stream of data:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Fill the \\\"reservoir\\\" array of size \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \" with the first \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \" items.\"), \"\\n\", React.createElement(_components.li, null, \"For each item \", React.createElement(Latex, {\n    text: \"\\\\(i\\\\)\"\n  }), \" (counting from \", React.createElement(Latex, {\n    text: \"\\\\(k+1\\\\)\"\n  }), \" to \", React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \") in the stream:\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Generate a random number \", React.createElement(Latex, {\n    text: \"\\\\(r\\\\)\"\n  }), \" in \", React.createElement(Latex, {\n    text: \"\\\\([1, i]\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, \"If \", React.createElement(Latex, {\n    text: \"\\\\(r \\\\le k\\\\)\"\n  }), \", replace the item in the reservoir at index \", React.createElement(Latex, {\n    text: \"\\\\(r\\\\)\"\n  }), \" with the new item \", React.createElement(Latex, {\n    text: \"\\\\(i\\\\)\"\n  }), \".\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This ensures that, after processing all \", React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \" items, each item has an equal probability (\", React.createElement(Latex, {\n    text: \"\\\\(k/n\\\\)\"\n  }), \") of appearing in the reservoir. It is especially useful for streaming data or extremely large datasets where storing the entire data in memory is impractical.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">import</span> random\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">reservoir_sampling</span><span class=\\\"token punctuation\\\">(</span>stream<span class=\\\"token punctuation\\\">,</span> k<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token triple-quoted-string string\\\">\\\"\\\"\\\"Return k uniformly random items from a stream.\\\"\\\"\\\"</span>\\n    reservoir <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    \\n    <span class=\\\"token comment\\\"># Fill reservoir with first k items</span>\\n    <span class=\\\"token keyword\\\">for</span> i <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">range</span><span class=\\\"token punctuation\\\">(</span>k<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        reservoir<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>stream<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    \\n    <span class=\\\"token comment\\\"># Replace elements with gradually decreasing probability</span>\\n    index <span class=\\\"token operator\\\">=</span> k\\n    <span class=\\\"token keyword\\\">while</span> index <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>stream<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token comment\\\"># Random integer in [0, index]</span>\\n        r <span class=\\\"token operator\\\">=</span> random<span class=\\\"token punctuation\\\">.</span>randint<span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">if</span> r <span class=\\\"token operator\\\">&lt;</span> k<span class=\\\"token punctuation\\\">:</span>\\n            reservoir<span class=\\\"token punctuation\\\">[</span>r<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> stream<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span>\\n        index <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span>\\n    \\n    <span class=\\\"token keyword\\\">return</span> reservoir\\n\\n<span class=\\\"token comment\\\"># Example usage</span>\\ndata_stream <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">list</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10001</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\nsampled <span class=\\\"token operator\\\">=</span> reservoir_sampling<span class=\\\"token punctuation\\\">(</span>data_stream<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Random sample from a large stream:\\\"</span><span class=\\\"token punctuation\\\">,</span> sampled<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"handling-imbalanced-classes-with-smote\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#handling-imbalanced-classes-with-smote\",\n    \"aria-label\": \"handling imbalanced classes with smote permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Handling Imbalanced Classes with SMOTE\"), \"\\n\", React.createElement(_components.p, null, \"For \", React.createElement(Highlight, null, \"imbalanced classification\"), \" problems (e.g., fraud detection, where the fraudulent cases are rare), standard random sampling often leads to models that overlook minority classes. \", React.createElement(Highlight, null, \"SMOTE (Synthetic Minority Over-sampling Technique)\"), \" addresses this by generating synthetic samples of the minority class rather than merely duplicating existing points.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Step 1\"), \": For each minority class instance, find its k-nearest neighbors in the minority class.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Step 2\"), \": Randomly select one of those neighbors and generate a synthetic point along the line joining the two samples.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This way, the minority class distribution is augmented in feature space, reducing the risk of overfitting and helping the model learn decision boundaries more effectively.\"), \"\\n\", React.createElement(Image, {\n    alt: \"SMOTE illustration\",\n    path: \"\",\n    caption: \"Synthetic samples are generated along the line segments between a minority sample and its neighbors.\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"weighted-sampling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#weighted-sampling\",\n    \"aria-label\": \"weighted sampling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Weighted Sampling\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Weighted sampling\"), \" assigns different probabilities to different items based on importance or cost. In certain real-world scenarios, not all data points are equally informative or equally likely. Weighted sampling ensures that items of higher importance or underrepresented subpopulations are more likely to be included in the sample.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"bootstrap-sampling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#bootstrap-sampling\",\n    \"aria-label\": \"bootstrap sampling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Bootstrap Sampling\"), \"\\n\", React.createElement(_components.p, null, \"Although widely known for forming confidence intervals (via the bootstrap method), \", React.createElement(Highlight, null, \"bootstrap sampling\"), \" can also be used to evaluate the stability or variability of statistical estimates. In this approach, you resample (with replacement) from your original dataset to create many \\\"bootstrapped\\\" datasets of the same size as the original. Each bootstrapped dataset provides a slightly different estimate of your parameter (e.g., mean, correlation), allowing you to assess how much that estimate fluctuates.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"exploring-relationships-between-variables\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#exploring-relationships-between-variables\",\n    \"aria-label\": \"exploring relationships between variables permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Exploring relationships between variables\"), \"\\n\", React.createElement(_components.p, null, \"Analyzing relationships between variables is central to understanding patterns in data. Correlation and covariance are two fundamental ways to measure how changes in one variable are associated with changes in another.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"correlation-positive-negative-and-zero-correlations\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#correlation-positive-negative-and-zero-correlations\",\n    \"aria-label\": \"correlation positive negative and zero correlations permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Correlation: positive, negative, and zero correlations\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Correlation\"), \" measures the strength and direction of a linear relationship between two variables. The most common measure is the Pearson correlation coefficient \", React.createElement(Latex, {\n    text: \"\\\\(\\\\rho\\\\)\"\n  }), \" (for population) or \", React.createElement(Latex, {\n    text: \"\\\\(r\\\\)\"\n  }), \" (for sample):\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( r = \\\\frac{\\\\sum_{i=1}^n (x_i - \\\\bar{x})(y_i - \\\\bar{y})}{\\\\sqrt{\\\\sum_{i=1}^n (x_i - \\\\bar{x})^2 \\\\sum_{i=1}^n (y_i - \\\\bar{y})^2}}. \\\\)\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Positive correlation\"), \": As one variable increases, the other tends to increase (e.g., height and weight).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Negative correlation\"), \": As one variable increases, the other tends to decrease (e.g., the time spent studying might negatively correlate with error rates on a test).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Zero (or near-zero) correlation\"), \": No linear relationship is observed (e.g., daily temperature vs. the number of letters in your name).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"A value of \", React.createElement(Latex, {\n    text: \"\\\\(r = 1\\\\)\"\n  }), \" indicates a perfect positive linear relationship, \", React.createElement(Latex, {\n    text: \"\\\\(r = -1\\\\)\"\n  }), \" indicates a perfect negative linear relationship, and \", React.createElement(Latex, {\n    text: \"\\\\(r = 0\\\\)\"\n  }), \" indicates no linear relationship. Real-world data rarely show perfect linearity, but even moderate correlations can be significant in certain contexts.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"covariance\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#covariance\",\n    \"aria-label\": \"covariance permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Covariance\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Covariance\"), \" is a measure of how two variables vary together. It is given by:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\mathrm{Cov}(X, Y) = E[(X - E[X])(Y - E[Y])]. \\\\)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"In practice, we often estimate it using the sample covariance:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\hat{\\\\mathrm{Cov}}(X, Y) = \\\\frac{1}{n - 1} \\\\sum_{i=1}^n (x_i - \\\\bar{x})(y_i - \\\\bar{y}). \\\\)\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"If \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathrm{Cov}(X, Y) > 0\\\\)\"\n  }), \", \", React.createElement(Latex, {\n    text: \"\\\\(X\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(Y\\\\)\"\n  }), \" tend to move in the same direction.\"), \"\\n\", React.createElement(_components.li, null, \"If \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathrm{Cov}(X, Y) < 0\\\\)\"\n  }), \", \", React.createElement(Latex, {\n    text: \"\\\\(X\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(Y\\\\)\"\n  }), \" tend to move in opposite directions.\"), \"\\n\", React.createElement(_components.li, null, \"If \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathrm{Cov}(X, Y) = 0\\\\)\"\n  }), \", there is no linear association.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Covariance is not standardized and depends on the units of the variables. By normalizing covariance (dividing by the standard deviations of both variables), you get the correlation coefficient.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"why-correlation-is-not-causation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#why-correlation-is-not-causation\",\n    \"aria-label\": \"why correlation is not causation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Why \\\"correlation is not causation\\\"\"), \"\\n\", React.createElement(_components.p, null, \"It is a common misconception to interpret correlation as evidence of a cause-and-effect relationship. A high correlation might be due to:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Confounding factors\"), \": A third variable influences both \", React.createElement(Latex, {\n    text: \"\\\\(X\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(Y\\\\)\"\n  }), \" (e.g., \\\"ice cream sales\\\" and \\\"drowning incidents\\\" both increase in hot weather).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Reverse causality\"), \": Instead of \", React.createElement(Latex, {\n    text: \"\\\\(X\\\\)\"\n  }), \" causing \", React.createElement(Latex, {\n    text: \"\\\\(Y\\\\)\"\n  }), \", it might be that \", React.createElement(Latex, {\n    text: \"\\\\(Y\\\\)\"\n  }), \" causes \", React.createElement(Latex, {\n    text: \"\\\\(X\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Coincidence\"), \": Sometimes variables correlate purely by chance in finite samples.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In practice, establishing causality typically requires controlled experiments (e.g., randomized controlled trials) or robust observational study designs. Advanced methods such as causal graphs (e.g., Judea Pearl's work) or quasi-experimental designs (e.g., difference-in-differences) can also be used.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"spearmans-rank-correlation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#spearmans-rank-correlation\",\n    \"aria-label\": \"spearmans rank correlation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Spearman's Rank Correlation\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Spearman's rank correlation coefficient\"), \" is a non-parametric measure of correlation that assesses how well the relationship between two variables can be described using a monotonic function. Unlike Pearson correlation, it relies on the rank of the data rather than the actual numeric values, making it more robust to outliers or non-linear relationships.\"), \"\\n\", React.createElement(_components.p, null, \"Formally, if \", React.createElement(Latex, {\n    text: \"\\\\(R(x_i)\\\\)\"\n  }), \" is the rank of \", React.createElement(Latex, {\n    text: \"\\\\(x_i\\\\)\"\n  }), \" and \", React.createElement(Latex, {\n    text: \"\\\\(R(y_i)\\\\)\"\n  }), \" is the rank of \", React.createElement(Latex, {\n    text: \"\\\\(y_i\\\\)\"\n  }), \":\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\rho = 1 - \\\\frac{6 \\\\sum d_i^2}{n(n^2 - 1)}, \\\\)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(d_i = R(x_i) - R(y_i)\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"kendalls-tau\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#kendalls-tau\",\n    \"aria-label\": \"kendalls tau permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Kendall's Tau\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Kendall's tau\"), \" is another rank-based measure. It counts the number of concordant vs. discordant pairs in the data. While computationally slightly more involved, Kendall's tau can sometimes be more sensitive in capturing the strength of a monotonic relationship than Spearman's correlation.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"partial-correlation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#partial-correlation\",\n    \"aria-label\": \"partial correlation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Partial Correlation\"), \"\\n\", React.createElement(_components.p, null, \"A \", React.createElement(Highlight, null, \"partial correlation\"), \" measures the relationship between two variables while controlling for the effect of one or more additional variables. This is particularly useful in multivariate analyses where the direct relationship between two variables might be confounded by a third.\"), \"\\n\", React.createElement(_components.p, null, \"For instance, if you want to see how \\\"exercise frequency\\\" (X) correlates with \\\"blood pressure\\\" (Y) while removing the effect of \\\"age\\\" (Z), partial correlation helps filter out the influence that age might have on both exercise frequency and blood pressure.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">import</span> numpy <span class=\\\"token keyword\\\">as</span> np\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">partial_correlation</span><span class=\\\"token punctuation\\\">(</span>X<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token triple-quoted-string string\\\">\\\"\\\"\\\"\\n    Compute the partial correlation matrix of X.\\n    Each column of X is a variable.\\n    \\\"\\\"\\\"</span>\\n    <span class=\\\"token comment\\\"># Invert the covariance matrix</span>\\n    cov <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>cov<span class=\\\"token punctuation\\\">(</span>X<span class=\\\"token punctuation\\\">,</span> rowvar<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">False</span><span class=\\\"token punctuation\\\">)</span>\\n    inv_cov <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>linalg<span class=\\\"token punctuation\\\">.</span>inv<span class=\\\"token punctuation\\\">(</span>cov<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token comment\\\"># Normalize to get partial correlation</span>\\n    d <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>sqrt<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>diag<span class=\\\"token punctuation\\\">(</span>inv_cov<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    P <span class=\\\"token operator\\\">=</span> <span class=\\\"token operator\\\">-</span>inv_cov <span class=\\\"token operator\\\">/</span> np<span class=\\\"token punctuation\\\">.</span>outer<span class=\\\"token punctuation\\\">(</span>d<span class=\\\"token punctuation\\\">,</span> d<span class=\\\"token punctuation\\\">)</span>\\n    \\n    <span class=\\\"token comment\\\"># Diagonal entries will be 1 (correlation with itself)</span>\\n    np<span class=\\\"token punctuation\\\">.</span>fill_diagonal<span class=\\\"token punctuation\\\">(</span>P<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> P\\n\\n<span class=\\\"token comment\\\"># Example usage</span>\\n<span class=\\\"token comment\\\"># Suppose we have columns: [exercise_frequency, blood_pressure, age, ...]</span>\\ndata <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">.</span>rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span>\\npcorr <span class=\\\"token operator\\\">=</span> partial_correlation<span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Partial correlation matrix:\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> pcorr<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"the-likelihood-function\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#the-likelihood-function\",\n    \"aria-label\": \"the likelihood function permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"The likelihood function\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"definition-and-role-in-statistical-modeling-parameter-estimation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#definition-and-role-in-statistical-modeling-parameter-estimation\",\n    \"aria-label\": \"definition and role in statistical modeling parameter estimation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Definition and role in statistical modeling, parameter estimation\"), \"\\n\", React.createElement(_components.p, null, \"In \", React.createElement(Highlight, null, \"statistical modeling\"), \", the \", React.createElement(Highlight, null, \"likelihood function\"), \" expresses how likely the observed data are, given a set of parameters and an assumed model. Formally, if we have observations \", React.createElement(Latex, {\n    text: \"\\\\(x_1, x_2, \\\\dots, x_n\\\\)\"\n  }), \" and a statistical model with parameter \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \" (which could be a scalar or vector), the likelihood is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\mathcal{L}(\\\\theta) = p(x_1, x_2, \\\\dots, x_n \\\\mid \\\\theta), \\\\)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\cdot \\\\mid \\\\theta)\\\\)\"\n  }), \" denotes the probability (or probability density) of the data under the parameter \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \". In practice, we often work with the \", React.createElement(Highlight, null, \"log-likelihood\"), \":\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\ell(\\\\theta) = \\\\log \\\\mathcal{L}(\\\\theta) = \\\\sum_{i=1}^n \\\\log p(x_i \\\\mid \\\\theta). \\\\)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Maximizing the log-likelihood (MLE: maximum likelihood estimation) is usually more convenient than maximizing \", React.createElement(Latex, {\n    text: \"\\\\(\\\\mathcal{L}(\\\\theta)\\\\)\"\n  }), \" directly, thanks to the property that the logarithm is a strictly increasing function. This leads to simpler sums (rather than products).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"relationship-to-probability-and-inference-examples-of-likelihood-in-machine-learning-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#relationship-to-probability-and-inference-examples-of-likelihood-in-machine-learning-models\",\n    \"aria-label\": \"relationship to probability and inference examples of likelihood in machine learning models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Relationship to probability and inference; examples of likelihood in machine learning models\"), \"\\n\", React.createElement(_components.p, null, \"The likelihood is closely tied to the idea of fitting a parameterized probability distribution to observed data. In parametric \", React.createElement(Highlight, null, \"machine learning\"), \", consider a logistic regression model:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nP(y=1 \\\\mid x; \\\\theta) = \\\\sigma(\\\\theta^\\\\top x),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where \", React.createElement(Latex, {\n    text: \"\\\\(\\\\sigma(\\\\cdot)\\\\)\"\n  }), \" is the sigmoid function. We can interpret \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \" as the parameters that maximize the likelihood of the observed labels \", React.createElement(Latex, {\n    text: \"\\\\(y\\\\)\"\n  }), \". This concept generalizes to many models: from Gaussian mixture models to neural networks trained by minimizing cross-entropy (which can be derived as a negative log-likelihood).\"), \"\\n\", React.createElement(_components.p, null, \"Likelihood-based approaches also form the foundation for Bayesian methods, where we combine likelihood with a prior distribution to obtain a posterior via Bayes' theorem.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"mle-and-map\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#mle-and-map\",\n    \"aria-label\": \"mle and map permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"MLE and MAP\"), \"\\n\", React.createElement(_components.p, null, \"We introduced \", React.createElement(Highlight, null, \"maximum likelihood estimation (MLE)\"), \" as a strategy to choose parameters \", React.createElement(Latex, {\n    text: \"\\\\(\\\\theta\\\\)\"\n  }), \" that maximize \", React.createElement(Latex, {\n    text: \"\\\\(p(x \\\\mid \\\\theta)\\\\)\"\n  }), \". However, in a \", React.createElement(Highlight, null, \"Bayesian\"), \" framework, we incorporate a prior distribution \", React.createElement(Latex, {\n    text: \"\\\\(p(\\\\theta)\\\\)\"\n  }), \" over parameters and update this belief in light of new data. This yields the posterior distribution:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( p(\\\\theta \\\\mid x) \\\\propto p(x \\\\mid \\\\theta)\\\\, p(\\\\theta). \\\\)\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"MLE\"), \":\", \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\hat{\\\\theta}_{\\\\text{MLE}} = \\\\mathrm{argmax}_{\\\\theta} \\\\, p(x \\\\mid \\\\theta). \\\\)\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"MAP (Maximum A Posteriori)\"), \":\", \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\hat{\\\\theta}_{\\\\text{MAP}} = \\\\mathrm{argmax}_{\\\\theta} \\\\, p(\\\\theta \\\\mid x) \\\\propto \\\\mathrm{argmax}_{\\\\theta} \\\\, p(x \\\\mid \\\\theta)\\\\, p(\\\\theta). \\\\)\"\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(Highlight, null, \"MAP\"), \" estimator effectively combines observed data (likelihood) with prior knowledge or beliefs (the prior). When the prior is uninformative (uniform), MAP and MLE coincide. But with informative priors, MAP often yields parameter estimates that incorporate domain expertise or regularization-like effects.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"confidence-intervals\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#confidence-intervals\",\n    \"aria-label\": \"confidence intervals permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Confidence intervals\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"definition-of-confidence-interval-constructing-confidence-intervals\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#definition-of-confidence-interval-constructing-confidence-intervals\",\n    \"aria-label\": \"definition of confidence interval constructing confidence intervals permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Definition of confidence interval, constructing confidence intervals\"), \"\\n\", React.createElement(_components.p, null, \"A \", React.createElement(Highlight, null, \"confidence interval (CI)\"), \" gives a range of plausible values for a population parameter based on sample data. A \", React.createElement(Highlight, null, \"95% confidence interval\"), \", for example, is often constructed so that if we were to repeat the sampling process many times, about 95% of such intervals would contain the true parameter value. One standard construction for a mean with a large sample size (and an approximately normal sample mean) is:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( \\\\bar{x} \\\\pm z_{\\\\alpha/2} \\\\frac{s}{\\\\sqrt{n}}, \\\\)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(\\\\bar{x}\\\\)\"\n  }), \" is the sample mean.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(s\\\\)\"\n  }), \" is the sample standard deviation.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \" is the sample size.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(z_{\\\\alpha/2}\\\\)\"\n  }), \" is the critical value from the standard normal distribution (e.g., 1.96 for 95% confidence).\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"interpreting-confidence-intervals\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#interpreting-confidence-intervals\",\n    \"aria-label\": \"interpreting confidence intervals permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Interpreting confidence intervals\"), \"\\n\", React.createElement(_components.p, null, \"A frequent misinterpretation is: \\\"There is a 95% probability the true mean lies in this interval.\\\" Strictly speaking, in frequentist terms, the true mean is a fixed quantity. The correct interpretation is: \\\"With repeated sampling and interval construction, 95% of those intervals would contain the true mean.\\\"\"), \"\\n\", React.createElement(_components.p, null, \"In practice, we use confidence intervals to convey the uncertainty around an estimate. Narrow intervals indicate higher precision (often due to a larger sample size or lower variability), whereas wide intervals indicate less precision.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"bootstrap-confidence-intervals\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#bootstrap-confidence-intervals\",\n    \"aria-label\": \"bootstrap confidence intervals permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Bootstrap Confidence Intervals\"), \"\\n\", React.createElement(_components.p, null, \"While a simple confidence interval for the mean often uses a normal approximation, \", React.createElement(Highlight, null, \"bootstrap confidence intervals\"), \" are more flexible and can be applied to many statistics (medians, proportions, correlation coefficients, etc.). The procedure is:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Draw a bootstrap sample (of the same size as the original) \", React.createElement(_components.strong, null, \"with replacement\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Compute the statistic of interest (e.g., sample mean) for this bootstrap sample.\"), \"\\n\", React.createElement(_components.li, null, \"Repeat steps 1–2 many times (e.g., 1,000 or 10,000 replicates).\"), \"\\n\", React.createElement(_components.li, null, \"Use the distribution of the bootstrap replicates to form a confidence interval (e.g., the 2.5th and 97.5th percentiles for a 95% CI).\"), \"\\n\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">import</span> numpy <span class=\\\"token keyword\\\">as</span> np\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">bootstrap_ci</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> func<span class=\\\"token operator\\\">=</span>np<span class=\\\"token punctuation\\\">.</span>mean<span class=\\\"token punctuation\\\">,</span> alpha<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">0.05</span><span class=\\\"token punctuation\\\">,</span> n_boot<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token triple-quoted-string string\\\">\\\"\\\"\\\"Compute a bootstrap confidence interval for func(data).\\\"\\\"\\\"</span>\\n    stats <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    n <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">for</span> _ <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">range</span><span class=\\\"token punctuation\\\">(</span>n_boot<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        sample <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">.</span>choice<span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> size<span class=\\\"token operator\\\">=</span>n<span class=\\\"token punctuation\\\">,</span> replace<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span>\\n        stats<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>func<span class=\\\"token punctuation\\\">(</span>sample<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    \\n    stats <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">sorted</span><span class=\\\"token punctuation\\\">(</span>stats<span class=\\\"token punctuation\\\">)</span>\\n    lower_bound <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>percentile<span class=\\\"token punctuation\\\">(</span>stats<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">100</span><span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span>alpha<span class=\\\"token operator\\\">/</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    upper_bound <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>percentile<span class=\\\"token punctuation\\\">(</span>stats<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">100</span><span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">-</span> alpha<span class=\\\"token operator\\\">/</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> lower_bound<span class=\\\"token punctuation\\\">,</span> upper_bound\\n\\n<span class=\\\"token comment\\\"># Example usage</span>\\nsamples <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">.</span>randn<span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span>\\nci <span class=\\\"token operator\\\">=</span> bootstrap_ci<span class=\\\"token punctuation\\\">(</span>samples<span class=\\\"token punctuation\\\">,</span> func<span class=\\\"token operator\\\">=</span>np<span class=\\\"token punctuation\\\">.</span>median<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"Bootstrap 95% CI for the median: </span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>ci<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\"</span></span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Bootstrap methods can be adapted for various estimators and provide more accurate intervals when parametric assumptions (e.g., normality) are questionable.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"quantiles\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#quantiles\",\n    \"aria-label\": \"quantiles permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Quantiles\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Quantiles\"), \" partition data into segments based on rank order. The median is a special case (the 50th percentile). More generally:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Quartiles\"), \": Split the data into four parts (Q1 is the 25th percentile, Q2 is the 50th, Q3 is the 75th).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Percentiles\"), \": Split the data into 100 equal parts; the \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \"th percentile is the value at or below which \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \"% of the observations lie.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"definition-median-quartiles-percentiles-etc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#definition-median-quartiles-percentiles-etc\",\n    \"aria-label\": \"definition median quartiles percentiles etc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Definition (median, quartiles, percentiles, etc.)\"), \"\\n\", React.createElement(_components.p, null, \"Formally, the \", React.createElement(Latex, {\n    text: \"\\\\(\\\\alpha\\\\)\"\n  }), \"-quantile \", React.createElement(Latex, {\n    text: \"\\\\(q_\\\\alpha\\\\)\"\n  }), \" of a distribution is the value such that:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\( P(X \\\\le q_\\\\alpha) = \\\\alpha. \\\\)\"\n  }), \"\\n\", React.createElement(_components.p, null, \"For empirical data, we often approximate quantiles by sorting observations and finding the point(s) in the sorted list that correspond to the fraction \", React.createElement(Latex, {\n    text: \"\\\\(\\\\alpha\\\\)\"\n  }), \".\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"uses-in-data-analysis\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#uses-in-data-analysis\",\n    \"aria-label\": \"uses in data analysis permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Uses in data analysis\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Detecting skewness\"), \": If the median differs significantly from the mean, it might indicate a skew.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Examining outliers\"), \": The 5th and 95th (or 1st and 99th) percentiles often highlight the tails of a distribution. Box plots, for instance, depict quartiles and help spot outliers.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Robust analysis\"), \": Median or other quantiles are less sensitive to outliers than the mean.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"interquantile-ranges\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#interquantile-ranges\",\n    \"aria-label\": \"interquantile ranges permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Interquantile Ranges\"), \"\\n\", React.createElement(_components.p, null, \"Beyond the standard quartiles (25%, 50%, 75%), analysts often use \", React.createElement(_components.strong, null, \"interquantile ranges\"), \" (e.g., the 10%–90% range) to focus on the \\\"core\\\" portion of the data. This can be particularly informative for skewed distributions or distributions with heavy tails, where a large portion of the data may lie in some lower percentile range.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"quantile-regression\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#quantile-regression\",\n    \"aria-label\": \"quantile regression permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Quantile Regression\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Quantile regression\"), \" allows you to model specific quantiles (e.g., the median or 90th percentile) of the response variable rather than the mean. This is extremely useful in fields such as finance or economics, where you might care about worst-case (upper quantile) or best-case (lower quantile) scenarios, not just the average outcome.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"density-estimation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#density-estimation\",\n    \"aria-label\": \"density estimation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Density estimation\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Density estimation\"), \" is about constructing an estimate of the probability density function (pdf) from observed data. Unlike parametric approaches (e.g., fitting a normal distribution), non-parametric density estimation makes fewer assumptions about the shape of the distribution.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"kernel-density-estimation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#kernel-density-estimation\",\n    \"aria-label\": \"kernel density estimation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Kernel density estimation\"), \"\\n\", React.createElement(_components.p, null, \"A popular non-parametric approach is \", React.createElement(Highlight, null, \"kernel density estimation (KDE)\"), \". Given data points \", React.createElement(Latex, {\n    text: \"\\\\(x_1, x_2, \\\\dots, x_n\\\\)\"\n  }), \", the KDE at a point \", React.createElement(Latex, {\n    text: \"\\\\(x\\\\)\"\n  }), \" is often defined as:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\n\\\\hat{f}(x) = \\\\frac{1}{n h} \\\\sum_{i=1}^n K\\\\left(\\\\frac{x - x_i}{h}\\\\right),\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"where:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(K\\\\)\"\n  }), \" is a kernel function (e.g., Gaussian kernel).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(h\\\\)\"\n  }), \" is the bandwidth (smoothing parameter).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \" is the number of data points.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The kernel function \", React.createElement(Latex, {\n    text: \"\\\\(K(\\\\cdot)\\\\)\"\n  }), \" weights the contribution of observations near \", React.createElement(Latex, {\n    text: \"\\\\(x\\\\)\"\n  }), \". The choice of \", React.createElement(Latex, {\n    text: \"\\\\(h\\\\)\"\n  }), \" greatly influences the smoothness of the estimated density. If \", React.createElement(Latex, {\n    text: \"\\\\(h\\\\)\"\n  }), \" is too large, the estimate is overly smooth (underfitting). If \", React.createElement(Latex, {\n    text: \"\\\\(h\\\\)\"\n  }), \" is too small, the estimate is too \\\"spiky\\\" (overfitting to the sample points).\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"practical-steps-and-bandwidth-selection\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#practical-steps-and-bandwidth-selection\",\n    \"aria-label\": \"practical steps and bandwidth selection permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Practical steps and bandwidth selection\"), \"\\n\", React.createElement(_components.p, null, \"In practice, software libraries (e.g., \", React.createElement(Highlight, null, \"scikit-learn\"), \" or \", React.createElement(Highlight, null, \"seaborn\"), \" in Python) provide built-in KDE functions with sensible default bandwidth selection methods like Silverman's rule of thumb. Still, it is good to understand the trade-offs:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Rule-of-thumb methods\"), \": These are analytical approximations based on the standard deviation of the data and the sample size.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Cross-validation\"), \": Treat the bandwidth as a hyperparameter to be tuned by minimizing some error measure (e.g., mean integrated squared error) on a validation set.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Below is a simplified Python snippet illustrating KDE using \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">seaborn</code>\"\n    }\n  }), \":\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Generate some random data from a mixture of Gaussians\ndata_part1 = np.random.normal(loc=-2, scale=1, size=300)\ndata_part2 = np.random.normal(loc=3, scale=0.5, size=200)\ndata = np.concatenate([data_part1, data_part2])\n\n# Kernel Density Plot\nsns.kdeplot(data, shade=True, bw_adjust=1.0)\nplt.title(\"Kernel Density Estimation\")\nplt.xlabel(\"Value\")\nplt.ylabel(\"Density\")\nplt.show()\n`\n  }), \"\\n\", React.createElement(Image, {\n    alt: \"A KDE plot with bimodal data\",\n    path: \"\",\n    caption: \"An example of KDE on a bimodal dataset.\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(_components.p, null, \"KDE is particularly useful for visualizing data distributions that don't necessarily fit common parametric models. In exploratory data analysis, comparing KDE plots of different groups can reveal differences in distribution shapes, medians, and tails.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"beyond-kde-mixture-models\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#beyond-kde-mixture-models\",\n    \"aria-label\": \"beyond kde mixture models permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Beyond KDE: mixture models\"), \"\\n\", React.createElement(_components.p, null, \"While \", React.createElement(Highlight, null, \"KDE\"), \" is a powerful non-parametric method, many real-world distributions are well-modeled by mixtures of simpler parametric families (e.g., Gaussian mixture models).\\n\", React.createElement(_components.strong, null, \"EM Algorithm (Expectation-Maximization)\"), \" is commonly used to fit mixture models by iteratively refining estimates of parameters (e.g., means, variances, and mixing proportions in a Gaussian mixture).\\nBy comparing multiple approaches (e.g., KDE vs. mixture models), practitioners can decide which method best suits the underlying distribution and the interpretability needs of their application.\\nWe'll discuss this cool method somewhere down the line in this course, but for now, let me use ChatGPT to write another summary. \", React.createElement(StickerPack, {\n    sticker: \"hedgehog\"\n  })), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"summary\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#summary\",\n    \"aria-label\": \"summary permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Summary\"), \"\\n\", React.createElement(_components.p, null, \"Now we know about:\", React.createElement(_components.br), \"\\n\", \"☝️ \", React.createElement(_components.strong, null, \"Data generation (probability theory)\"), \": Models how data arise, describing them with distributions (discrete or continuous).\", React.createElement(_components.br), \"\\n\", \"☝️ \", React.createElement(_components.strong, null, \"Data collection (sampling)\"), \": Acquiring representative samples to make inferences about the population.\", React.createElement(_components.br), \"\\n\", \"☝️ \", React.createElement(_components.strong, null, \"Descriptive statistics\"), \": Summarizing data through measures like mean, median, mode, variance, and visual tools like histograms and box plots.\", React.createElement(_components.br), \"\\n\", \"☝️ \", React.createElement(_components.strong, null, \"Inferential statistics\"), \": Drawing conclusions about the population through confidence intervals, hypothesis tests, and (soon) regression models.\", React.createElement(_components.br), \"\\n\", \"☝️ \", React.createElement(_components.strong, null, \"A buzzword \\\"machine learning\\\"\"), \": Applying statistical methods and probability theory to build predictive models, measure uncertainty, and handle complex, high-dimensional data.\"), \"\\n\", React.createElement(_components.p, null, \"We're almost ready to dive into machine learning...\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/avrtt/Repos/avrtt.github.io/src/pages/posts/research/non_boring_intro_to_statistics_2.mdx\";\nimport React, {useState, useEffect} from 'react';\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\nimport RemoveMarkdown from 'remove-markdown';\nimport {ImageContext} from '../context/ImageContext';\nimport {MDXProvider} from '@mdx-js/react';\nimport Image from '../components/PostImage';\nimport {motion} from 'framer-motion';\nimport SEO from \"../components/seo\";\nimport PostBanner from '../components/PostBanner';\nimport PostBottom from '../components/PostBottom';\nimport {wordsPerMinuteAdventures, wordsPerMinuteResearch, wordsPerMinuteThoughts} from '../data/commonVariables';\nimport {graphql} from 'gatsby';\nimport PartOfCourseNotice from \"../components/PartOfCourseNotice\";\nimport * as stylesButtonsCommon from \"../styles/buttons_common.module.scss\";\nimport * as stylesCustomPostLayouts from \"../styles/custom_post_layouts.module.scss\";\nimport * as stylesTableOfContents from \"../styles/table_of_contents.module.scss\";\nimport * as stylesTagBadges from \"../styles/tag_badges.module.scss\";\nfunction formatReadTime(minutes) {\n  if (minutes <= 10) return '~10 min';\n  if (minutes <= 20) return '~20 min';\n  if (minutes <= 30) return '~30 min';\n  if (minutes <= 40) return '~40 min';\n  if (minutes <= 50) return '~50 min';\n  if (minutes <= 60) return '~1 h';\n  const hours = Math.floor(minutes / 60);\n  const remainder = minutes % 60;\n  if (remainder <= 30) {\n    return `~${hours}${remainder > 0 ? '.5' : ''} h`;\n  }\n  return `~${hours + 1} h`;\n}\nconst TableOfContents = ({toc}) => {\n  if (!toc || !toc.items) return null;\n  const handleClick = (e, url) => {\n    e.preventDefault();\n    const targetId = url.replace('#', '');\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  return React.createElement(\"nav\", {\n    className: stylesTableOfContents.toc\n  }, React.createElement(\"ul\", null, toc.items.map((item, index) => React.createElement(\"li\", {\n    key: index\n  }, React.createElement(\"a\", {\n    href: item.url,\n    onClick: e => handleClick(e, item.url)\n  }, item.title), item.items && React.createElement(TableOfContents, {\n    toc: {\n      items: item.items\n    }\n  })))));\n};\nexport function PostTemplate({data: {mdx, allMdx, allPostImages}, children}) {\n  const {frontmatter, body, tableOfContents} = mdx;\n  const index = frontmatter.index;\n  const slug = frontmatter.slug;\n  const section = slug.split('/')[1];\n  const posts = allMdx.nodes.filter(post => post.frontmatter.slug.includes(`/${section}/`));\n  const sortedPosts = posts.sort((a, b) => a.frontmatter.index - b.frontmatter.index);\n  const currentIndex = sortedPosts.findIndex(post => post.frontmatter.index === index);\n  const nextPost = sortedPosts[currentIndex + 1];\n  const lastPost = sortedPosts[currentIndex - 1];\n  const trimmedSlug = frontmatter.slug.replace(/\\/$/, '');\n  const keyCurrent = (/[^/]*$/).exec(trimmedSlug)[0];\n  const basePath = `posts/${section}/content/${keyCurrent}/`;\n  const [isWideLayout, setIsWideLayout] = useState(frontmatter.flagWideLayoutByDefault);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const toggleLayout = () => {\n    setIsWideLayout(!isWideLayout);\n  };\n  useEffect(() => {\n    setIsAnimating(true);\n    const timer = setTimeout(() => setIsAnimating(false), 340);\n    return () => clearTimeout(timer);\n  }, [isWideLayout]);\n  var wordsPerMinute;\n  if (section === \"adventures\") {\n    wordsPerMinute = wordsPerMinuteAdventures;\n  } else if (section === \"research\") {\n    wordsPerMinute = wordsPerMinuteResearch;\n  } else if (section === \"thoughts\") {\n    wordsPerMinute = wordsPerMinuteThoughts;\n  }\n  const plainTextBody = RemoveMarkdown(body).replace(/import .*? from .*?;/g, '').replace(/<.*?>/g, '').replace(/\\{\\/\\*[\\s\\S]*?\\*\\/\\}/g, '').trim();\n  const wordCount = plainTextBody.split(/\\s+/).length;\n  const baseReadTimeMinutes = Math.ceil(wordCount / wordsPerMinute);\n  const extraTime = frontmatter.extraReadTimeMin || 0;\n  const totalReadTime = baseReadTimeMinutes + extraTime;\n  const readTime = formatReadTime(totalReadTime);\n  const notices = [{\n    flag: frontmatter.flagDraft,\n    component: () => import(\"../components/NotFinishedNotice\")\n  }, {\n    flag: frontmatter.flagMindfuckery,\n    component: () => import(\"../components/MindfuckeryNotice\")\n  }, {\n    flag: frontmatter.flagRewrite,\n    component: () => import(\"../components/RewriteNotice\")\n  }, {\n    flag: frontmatter.flagOffensive,\n    component: () => import(\"../components/OffensiveNotice\")\n  }, {\n    flag: frontmatter.flagProfane,\n    component: () => import(\"../components/ProfanityNotice\")\n  }, {\n    flag: frontmatter.flagMultilingual,\n    component: () => import(\"../components/MultilingualNotice\")\n  }, {\n    flag: frontmatter.flagUnreliably,\n    component: () => import(\"../components/UnreliablyNotice\")\n  }, {\n    flag: frontmatter.flagPolitical,\n    component: () => import(\"../components/PoliticsNotice\")\n  }, {\n    flag: frontmatter.flagCognitohazard,\n    component: () => import(\"../components/CognitohazardNotice\")\n  }, {\n    flag: frontmatter.flagHidden,\n    component: () => import(\"../components/HiddenNotice\")\n  }];\n  const [loadedNotices, setLoadedNotices] = useState([]);\n  useEffect(() => {\n    notices.forEach(({flag, component}) => {\n      if (flag) {\n        component().then(module => {\n          setLoadedNotices(prev => [...prev, module.default]);\n        });\n      }\n    });\n  }, []);\n  return React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.15\n    }\n  }, React.createElement(PostBanner, {\n    postNumber: frontmatter.index,\n    date: frontmatter.date,\n    updated: frontmatter.updated,\n    readTime: readTime,\n    difficulty: frontmatter.difficultyLevel,\n    title: frontmatter.title,\n    desc: frontmatter.desc,\n    banner: frontmatter.banner,\n    section: section,\n    postKey: keyCurrent,\n    isMindfuckery: frontmatter.flagMindfuckery,\n    mainTag: frontmatter.mainTag\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\",\n      maxWidth: \"75%\",\n      marginLeft: \"auto\",\n      paddingRight: \"1vw\",\n      marginTop: \"-6vh\",\n      marginBottom: \"4vh\"\n    }\n  }, frontmatter.otherTags.map((tag, index) => React.createElement(\"span\", {\n    key: index,\n    className: `noselect ${stylesTagBadges.tagPosts}`,\n    style: {\n      margin: \"0 5px 5px 0\"\n    }\n  }, tag))), React.createElement(\"div\", {\n    class: \"postBody\"\n  }, React.createElement(TableOfContents, {\n    toc: tableOfContents\n  })), React.createElement(\"br\"), React.createElement(\"div\", {\n    style: {\n      margin: \"0 10% -2vh 30%\",\n      textAlign: \"right\"\n    }\n  }, React.createElement(motion.button, {\n    class: \"noselect\",\n    className: stylesCustomPostLayouts.postButton,\n    id: stylesCustomPostLayouts.postLayoutSwitchButton,\n    onClick: toggleLayout,\n    whileTap: {\n      scale: 0.93\n    }\n  }, React.createElement(motion.div, {\n    className: stylesButtonsCommon.buttonTextWrapper,\n    key: isWideLayout,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }, isWideLayout ? \"Switch to default layout\" : \"Switch to wide layout\"))), React.createElement(\"br\"), React.createElement(\"div\", {\n    class: \"postBody\",\n    style: {\n      margin: isWideLayout ? \"0 -14%\" : \"\",\n      maxWidth: isWideLayout ? \"200%\" : \"\",\n      transition: \"margin 1s ease, max-width 1s ease, padding 1s ease\"\n    }\n  }, React.createElement(\"div\", {\n    className: `${stylesCustomPostLayouts.textContent} ${isAnimating ? stylesCustomPostLayouts.fadeOut : stylesCustomPostLayouts.fadeIn}`\n  }, loadedNotices.map((NoticeComponent, index) => React.createElement(NoticeComponent, {\n    key: index\n  })), frontmatter.indexCourse ? React.createElement(PartOfCourseNotice, {\n    index: frontmatter.indexCourse,\n    category: frontmatter.courseCategoryName\n  }) : \"\", React.createElement(ImageContext.Provider, {\n    value: {\n      images: allPostImages.nodes,\n      basePath: basePath.replace(/\\/$/, '') + '/'\n    }\n  }, React.createElement(MDXProvider, {\n    components: {\n      Image\n    }\n  }, children)))), React.createElement(PostBottom, {\n    nextPost: nextPost,\n    lastPost: lastPost,\n    keyCurrent: keyCurrent,\n    section: section\n  }));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head({data}) {\n  const {frontmatter} = data.mdx;\n  const title = frontmatter.titleSEO || frontmatter.title;\n  const titleOG = frontmatter.titleOG || title;\n  const titleTwitter = frontmatter.titleTwitter || title;\n  const description = frontmatter.descSEO || frontmatter.desc;\n  const descriptionOG = frontmatter.descOG || description;\n  const descriptionTwitter = frontmatter.descTwitter || description;\n  const schemaType = frontmatter.schemaType || \"BlogPosting\";\n  const keywords = frontmatter.keywordsSEO;\n  const datePublished = frontmatter.date;\n  const dateModified = frontmatter.updated || datePublished;\n  const imageOG = frontmatter.imageOG || frontmatter.banner?.childImageSharp?.gatsbyImageData?.images?.fallback?.src;\n  const imageAltOG = frontmatter.imageAltOG || descriptionOG;\n  const imageTwitter = frontmatter.imageTwitter || imageOG;\n  const imageAltTwitter = frontmatter.imageAltTwitter || descriptionTwitter;\n  const canonicalUrl = frontmatter.canonicalURL;\n  const flagHidden = frontmatter.flagHidden || false;\n  const mainTag = frontmatter.mainTag || \"Posts\";\n  const section = frontmatter.slug.split('/')[1] || \"posts\";\n  const type = \"article\";\n  const {siteUrl} = useSiteMetadata();\n  const breadcrumbJSON = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": [{\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": siteUrl\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 2,\n      \"name\": mainTag,\n      \"item\": `${siteUrl}/${frontmatter.slug.split('/')[1]}`\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 3,\n      \"name\": title,\n      \"item\": `${siteUrl}${frontmatter.slug}`\n    }]\n  };\n  return React.createElement(SEO, {\n    title: title + \" - avrtt.blog\",\n    titleOG: titleOG,\n    titleTwitter: titleTwitter,\n    description: description,\n    descriptionOG: descriptionOG,\n    descriptionTwitter: descriptionTwitter,\n    schemaType: schemaType,\n    keywords: keywords,\n    datePublished: datePublished,\n    dateModified: dateModified,\n    imageOG: imageOG,\n    imageAltOG: imageAltOG,\n    imageTwitter: imageTwitter,\n    imageAltTwitter: imageAltTwitter,\n    canonicalUrl: canonicalUrl,\n    flagHidden: flagHidden,\n    mainTag: mainTag,\n    section: section,\n    type: type\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumbJSON)));\n}\nexport const query = graphql`\n  query($id: String!, $postsFilterRegex: String!, $imagePathRegex: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        index\n        indexCourse\n        title\n        titleSEO\n        titleOG\n        titleTwitter\n        courseCategoryName\n        desc\n        descSEO\n        descOG\n        descTwitter\n        date\n        updated\n        extraReadTimeMin\n        difficultyLevel\n        flagDraft\n        flagMindfuckery\n        flagRewrite\n        flagOffensive\n        flagProfane\n        flagMultilingual\n        flagUnreliably\n        flagPolitical\n        flagCognitohazard\n        flagHidden\n        flagWideLayoutByDefault\n        schemaType\n        mainTag\n        otherTags\n        keywordsSEO\n        banner {\n          childImageSharp {\n            gatsbyImageData(\n\t\t\t\t\t\t\tformats: [JPG, WEBP], \n\t\t\t\t\t\t\tplaceholder: BLURRED, \n\t\t\t\t\t\t\tquality: 100\n\t\t\t\t\t\t)\n          }\n        }\n        imageOG\n        imageAltOG\n        imageTwitter\n        imageAltTwitter\n        canonicalURL\n        slug\n      }\n      body\n      tableOfContents(maxDepth: 3)\n    }\n    allMdx(filter: {frontmatter: {slug: {regex: $postsFilterRegex}}}) {\n      nodes {\n        frontmatter {\n          index\n          slug\n          banner {\n            childImageSharp {\n              gatsbyImageData(\n                formats: [JPG, WEBP],\n                placeholder: BLURRED,\n                quality: 100\n              )\n            }\n          }\n        }\n      }\n    }\n    allPostImages: allFile(\n      filter: { \n        sourceInstanceName: { eq: \"images\" },\n        relativePath: { regex: $imagePathRegex }\n      }\n    ) {\n      nodes {\n        relativePath\n        childImageSharp {\n          gatsbyImageData(\n            layout: CONSTRAINED\n            placeholder: DOMINANT_COLOR\n            quality: 100\n          )\n        }\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\n\nconst stickerImports = {\n  hater: () => import(\"../../stickers/hater.png\"),\n  babel_tower: () => import(\"../../stickers/babel_tower.png\"),\n  bibizan: () => import(\"../../stickers/bibizan.gif\"),\n  cursed_emoji2: () => import(\"../../stickers/cursed_emoji2.png\"),\n  cursed_emoji1: () => import(\"../../stickers/cursed_emoji1.png\"),\n  mda: () => import(\"../../stickers/mda.png\"),\n  cat_shake: () => import(\"../../stickers/cat_shake.gif\"),\n  nerazdyplenish3: () => import(\"../../stickers/nerazdyplenish3.gif\"),\n  burnt: () => import(\"../../stickers/burnt.gif\"),\n  chad: () => import(\"../../stickers/chad.gif\"),\n  hedgehog: () => import(\"../../stickers/hedgehog.gif\"),\n  yoba_dovolen: () => import(\"../../stickers/yoba_dovolen.png\"),\n  pug_dance: () => import(\"../../stickers/pug_dance.gif\"),\n  pepe_chair: () => import(\"../../stickers/pepe_chair.gif\"),\n  pepe_serious: () => import(\"../../stickers/pepe_serious.gif\"),\n  pepe_run: () => import(\"../../stickers/pepe_run.gif\"),\n  pepe_punch: () => import(\"../../stickers/pepe_punch.gif\"),\n  pepe_agree: () => import(\"../../stickers/pepe_agree.gif\"),\n  pepe_pledik: () => import(\"../../stickers/pepe_pledik.png\"),\n  cat_stand: () => import(\"../../stickers/cat_stand.png\"),\n  cat_sleep: () => import(\"../../stickers/cat_sleep.png\"),\n  nerazdyplenish2: () => import(\"../../stickers/nerazdyplenish2.png\"),\n  nerazdyplenish1: () => import(\"../../stickers/nerazdyplenish1.png\"),\n  morshu_gnome: () => import(\"../../stickers/morshu_gnome.png\"),\n  cat_bw: () => import(\"../../stickers/cat_bw.png\"),\n  pepe_mage: () => import(\"../../stickers/pepe_mage.png\"),\n  pepe_linux: () => import(\"../../stickers/pepe_linux.png\"),\n  yoba_pledik: () => import(\"../../stickers/yoba_pledik.png\"),\n  pepe_chill: () => import(\"../../stickers/pepe_chill.png\"),\n  pepe_meditation: () => import(\"../../stickers/pepe_meditation.png\"),\n  trollface: () => import(\"../../stickers/trollface.png\"),\n  cat_smile: () => import(\"../../stickers/cat_smile.png\"),\n  beluga: () => import(\"../../stickers/beluga.png\"),\n  pepe_money: () => import(\"../../stickers/pepe_money.gif\"),\n  pepe_cry: () => import(\"../../stickers/pepe_cry.gif\"),\n  pepe_dance: () => import(\"../../stickers/pepe_dance.gif\"),\n  dog_nerd: () => import(\"../../stickers/dog_nerd.png\"),\n  cat_ya_piska: () => import(\"../../stickers/cat_ya_piska.png\"),\n  gandonio: () => import(\"../../stickers/gandonio.png\"),\n  pepe_wink: () => import(\"../../stickers/pepe_wink.gif\"),\n};\n\nconst StickerPack = ({ sticker, marginLeft = \"4px\", marginRight = \"0px\" }) => {\n  const [stickerSrc, setStickerSrc] = useState(null);\n\n  useEffect(() => {\n    if (stickerImports[sticker]) {\n      stickerImports[sticker]().then((module) => setStickerSrc(module.default));\n    }\n  }, [sticker]);\n\n  if (!stickerSrc) return null; // avoid rendering until loaded\n\n  const stickerStyle = {\n    width: \"1.8em\",\n    height: \"1.8em\",\n    verticalAlign: \"middle\",\n    marginTop: \"-10px\",\n    marginRight: marginRight,\n    marginLeft: marginLeft,\n  }\n\n  return <img alt=\"sticker\" style={stickerStyle} src={stickerSrc} />\n}\n\nexport default StickerPack\n\n","import React from \"react\";\nimport Latex from 'react-latex-next';\nimport 'katex/dist/katex.min.css'; \n  \nconst L = ({ text }) => {\n  return (\n    <Latex>{text}</Latex>\n  );\n};\nexport default L;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","h2","a","span","h3","ol","li","strong","ul","hr","br","_provideComponents","components","Image","id","component","Error","_missingMdxReference","React","style","position","href","className","dangerouslySetInnerHTML","__html","Highlight","Latex","text","alt","path","caption","Code","zoom","StickerPack","sticker","wrapper","MDXLayout","TableOfContents","_ref","toc","items","stylesTableOfContents","map","item","index","key","url","onClick","e","handleClick","preventDefault","targetId","replace","targetElement","document","getElementById","scrollIntoView","behavior","block","title","PostTemplate","_ref2","data","mdx","allMdx","allPostImages","children","frontmatter","body","tableOfContents","section","slug","split","sortedPosts","nodes","filter","post","includes","sort","b","currentIndex","findIndex","nextPost","lastPost","trimmedSlug","keyCurrent","exec","basePath","isWideLayout","setIsWideLayout","useState","flagWideLayoutByDefault","isAnimating","setIsAnimating","wordsPerMinute","useEffect","timer","setTimeout","clearTimeout","wordsPerMinuteAdventures","wordsPerMinuteResearch","wordsPerMinuteThoughts","wordCount","RemoveMarkdown","trim","length","readTime","minutes","hours","Math","floor","remainder","formatReadTime","ceil","extraReadTimeMin","notices","flag","flagDraft","flagMindfuckery","flagRewrite","flagOffensive","flagProfane","flagMultilingual","flagUnreliably","flagPolitical","flagCognitohazard","flagHidden","loadedNotices","setLoadedNotices","forEach","_ref3","then","module","prev","concat","_toConsumableArray","default","motion","div","initial","opacity","animate","exit","transition","duration","PostBanner","postNumber","date","updated","difficulty","difficultyLevel","desc","banner","postKey","isMindfuckery","mainTag","display","justifyContent","flexWrap","maxWidth","marginLeft","paddingRight","marginTop","marginBottom","otherTags","tag","stylesTagBadges","margin","class","textAlign","button","stylesCustomPostLayouts","toggleLayout","whileTap","scale","stylesButtonsCommon","ease","NoticeComponent","indexCourse","PartOfCourseNotice","category","courseCategoryName","ImageContext","Provider","value","images","MDXProvider","PostBottom","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref4","_frontmatter$banner","_frontmatter$banner$c","_frontmatter$banner$c2","_frontmatter$banner$c3","_frontmatter$banner$c4","titleSEO","titleOG","titleTwitter","description","descSEO","descriptionOG","descOG","descriptionTwitter","descTwitter","schemaType","keywords","keywordsSEO","datePublished","dateModified","imageOG","childImageSharp","gatsbyImageData","fallback","src","imageAltOG","imageTwitter","imageAltTwitter","canonicalUrl","canonicalURL","siteUrl","useSiteMetadata","breadcrumbJSON","SEO","type","JSON","stringify","stickerImports","hater","babel_tower","bibizan","cursed_emoji2","cursed_emoji1","mda","cat_shake","nerazdyplenish3","burnt","chad","hedgehog","yoba_dovolen","pug_dance","pepe_chair","pepe_serious","pepe_run","pepe_punch","pepe_agree","pepe_pledik","cat_stand","cat_sleep","nerazdyplenish2","nerazdyplenish1","morshu_gnome","cat_bw","pepe_mage","pepe_linux","yoba_pledik","pepe_chill","pepe_meditation","trollface","cat_smile","beluga","pepe_money","pepe_cry","pepe_dance","dog_nerd","cat_ya_piska","gandonio","pepe_wink","marginRight","stickerSrc","setStickerSrc","stickerStyle","width","height","verticalAlign"],"sourceRoot":""}