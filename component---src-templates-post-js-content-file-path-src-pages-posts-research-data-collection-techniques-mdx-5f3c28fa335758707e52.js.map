{"version":3,"file":"component---src-templates-post-js-content-file-path-src-pages-posts-research-data-collection-techniques-mdx-5f3c28fa335758707e52.js","mappings":"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","sources":["webpack://avrtt.blog/./src/pages/posts/research/data_collection_techniques.mdx","webpack://avrtt.blog/./src/templates/post.js","webpack://avrtt.blog/./src/components/Latex/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/**(intro: a quote, catchphrase, joke, etc.)**/\n/*\n\nChapter 1: Introduction\nChapter 2: Old-school methods of data collection\n- Surveys, questionnaires, interviews, observational studies: design and structure, sampling strategies and bias reduction, structured, semi-structured, and unstructured interviews, best practices, direct observation, participant vs. non-participant observation\nChapter 3: Web-based data collection\n- \"Welcome to the era of easy-to-get data\"\n- Parser vs. scraper\n- Web scraping: tools and libraries (e.g., Beautiful Soup, Scrapy), techniques and best practices\n- Dealing with dynamic or JavaScript-driven websites\n- Code snippets: building web scrapers for different purposes, step by step\n- Handling APIs\n- Revisiting REST & GraphQL basics as extra tool\n- Authentication and rate limits\n- Common APIs in data science (e.g., Twitter, Google)\n- Code example: working with common APIs\n- Social media data collection\n- Code example: collecting data from social media using\n- etc.\nChapter 4: Extra data: external and third-party datasets\n- Public data repositories (e.g., Kaggle, UCI machine learning repository)\n- Government and open-source data\n- Commercial and subscription-based databases\n- Other sources\nChapter 5: Experimental data collection\n- Designing experiments\n- Field experiments vs. lab experiments\n- Controlled variables and reproducibility\n- Example code\n- \"We will cover data generation and experimental design in another post\"\nChapter 6: Data quality and storage\n- Data cleaning and validation integrated in scraping pipelines\n- Handling missing or inconsistent data\n-  Metadata and data documentation\n- Code snippet: integrating data processing and error handling in our scaper built in chapter 3\n- Storage solutions: local storage, cloud-based storage (e.g., AWS, Azure)\n- Code example: using AWS to store and use data\n\n*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Highlight from \"../../../components/Highlight\";\nimport Code from \"../../../components/Code\";\nimport Latex from \"../../../components/Latex\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    ol: \"ol\",\n    h4: \"h4\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components), {Image} = _components;\n  if (!Image) _missingMdxReference(\"Image\", true);\n  return React.createElement(React.Fragment, null, \"\\n\", React.createElement(\"br\"), \"\\n\", \"\\n\", React.createElement(_components.p, null, \"Data collection is the backbone of modern data science and machine learning projects. While cutting-edge algorithms and advanced computational resources often capture the limelight, none of these efforts can truly succeed without a solid foundation of high-quality data. In today's world, gathering appropriate datasets is a skill in its own right — one that combines both traditional, established practices and a wide range of emerging, tech-driven methods. In fact, as machine learning has evolved over the last few decades, the scope of data collection has broadened considerably, incorporating everything from manual surveys and observational studies to sophisticated web scraping pipelines, crowd-sourced data labeling strategies, and real-time sensor networks.\"), \"\\n\", React.createElement(_components.p, null, \"In this article, I will walk you through the core principles and approaches to data collection. I will start by introducing some historical or \\\"old-school\\\" methods, such as surveys, questionnaires, and interviews — approaches that rely heavily on human interaction and manual design. After that, I will dive into more recent and exciting web-based methods, where automation and scale become paramount. We'll explore using scrapers, dealing with dynamic content, and tapping into the vast ecosystem of open APIs. Moving forward, I will discuss external and third-party datasets, ranging from public government repositories to subscription-based platforms. Next, we'll dive into experimental data collection — how to set up data-generating procedures, maintain controls, and ensure reproducibility. Finally, I will examine the interplay between data quality, data cleaning, and the ultimate storage solutions that keep your pipeline organized and future-proof. Throughout, I'll weave in advanced details for an audience that already has a strong background in machine learning and data science — giving you a deeper theoretical and practical sense of how data collection can become a robust and efficient pipeline in your overall project flow.\"), \"\\n\", React.createElement(_components.p, null, \"Data collection is not just a trivial step you can rush through. Every nuance — be it sampling strategy, the reliability of your data source, the method for labeling, or the policy regarding missing values — ultimately impacts model performance and interpretability. One of the more subtle dangers lies in biases introduced during data collection, which can critically skew results in unintended ways. I'll discuss these potential pitfalls and highlight best practices to ensure your data is as representative and accurate as possible. The hope is that by the end, you'll have a well-rounded perspective on the many layers — both conceptual and practical — behind assembling useful, high-quality datasets.\"), \"\\n\", React.createElement(_components.p, null, \"Before we dive deeper, it is worthwhile to note that data collection often intersects with questions of ethics, privacy, and legality. Regulations like the General Data Protection Regulation (GDPR) or domain-specific compliance issues can heavily influence what data may be collected and how. Understanding these constraints is not just about abiding by the law but also ensuring trustworthiness in the systems we build. Although I will not focus extensively on legal frameworks here, I will briefly mention them where relevant. Please keep these broader considerations in mind as you explore and develop your own data collection strategies.\"), \"\\n\", React.createElement(_components.p, null, \"With these thoughts in mind, let's commence our comprehensive journey into the methods, tools, and best practices for data collection. We'll start with old-school, more \\\"traditional\\\" approaches that, despite sometimes being overshadowed by modern automation, remain tremendously relevant across a variety of scenarios.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"chapter-2-old-school-methods-of-data-collection\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#chapter-2-old-school-methods-of-data-collection\",\n    \"aria-label\": \"chapter 2 old school methods of data collection permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Chapter 2: old-school methods of data collection\"), \"\\n\", React.createElement(_components.p, null, \"Old-school methods of data collection, such as surveys, questionnaires, interviews, and observational studies, laid the early foundations of empirical research in fields ranging from sociology and psychology to public health and economics. While these approaches might seem less glamorous than using a web scraper to grab millions of data points in minutes, they remain extremely valuable — particularly when investigating sensitive, subjective, or highly specialized domains where automated or web-based approaches might be ill-suited.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"surveys-questionnaires-and-interviews\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#surveys-questionnaires-and-interviews\",\n    \"aria-label\": \"surveys questionnaires and interviews permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Surveys, questionnaires, and interviews\"), \"\\n\", React.createElement(_components.p, null, \"A \", React.createElement(Highlight, null, \"survey\"), \" typically involves asking participants a series of questions in a structured manner. The questions can be open-ended, multiple-choice, or scale-based (e.g., Likert scales like \\\"rate from 1 to 5\\\"), with the aim of collecting data that can be aggregated and analyzed quantitatively. A \", React.createElement(Highlight, null, \"questionnaire\"), \" is often considered a specific tool or instrument within a survey, referring to the set of questions in either paper form or a digital form. Meanwhile, \", React.createElement(Highlight, null, \"interviews\"), \" involve direct conversation with participants to elicit in-depth information, going beyond the pre-defined confines of a questionnaire.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Structured interviews\"), \": These adhere strictly to a predefined set of questions. The goal is to collect uniform data that can be compared across multiple participants.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Semi-structured interviews\"), \": These incorporate a guiding list of questions or themes but allow some flexibility for open-ended follow-up queries to clarify or explore points of interest.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Unstructured interviews\"), \": Here, the interviewer has complete freedom to guide the conversation. This approach is valuable when exploring a complex or unknown domain, but is harder to quantify and standardize.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"From a data science perspective, the design and structure of questions can drastically influence the quality of the resulting dataset. Leading questions (i.e., questions framed in a way that subtly prompts certain answers), unclear wording, or overly broad question sets can all introduce bias. Similarly, the participant pool itself needs careful consideration. For instance, if you only sample from a small or specialized group, the data might not generalize.\"), \"\\n\", React.createElement(_components.p, null, \"To reduce the risk of bias, statisticians typically advocate strategies like \", React.createElement(Highlight, null, \"random sampling\"), \", \", React.createElement(Highlight, null, \"stratified sampling\"), \" (when the population can be segmented into meaningful subgroups), or \", React.createElement(Highlight, null, \"cluster sampling\"), \" (dividing a population into clusters, then randomly selecting among them). Let me illustrate the concept of stratified sampling using a simple mathematical notation. Suppose you have a population of size \", React.createElement(Latex, {\n    text: \"\\\\(N\\\\)\"\n  }), \", which is divided into \", React.createElement(Latex, {\n    text: \"\\\\(k\\\\)\"\n  }), \" strata with respective sizes \", React.createElement(Latex, {\n    text: \"\\\\(N_1, N_2, \\\\dots, N_k\\\\)\"\n  }), \". You might want to sample a total of \", React.createElement(Latex, {\n    text: \"\\\\(n\\\\)\"\n  }), \" individuals such that the proportion from each stratum matches the population proportion. Then the sample size for stratum \", React.createElement(Latex, {\n    text: \"\\\\(i\\\\)\"\n  }), \" (denoted \", React.createElement(Latex, {\n    text: \"\\\\(n_i\\\\)\"\n  }), \") can be calculated via:\"), \"\\n\", React.createElement(Latex, {\n    text: \"\\\\[\\nn_i = n \\\\times \\\\frac{N_i}{N}.\\n\\\\]\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Here, \", React.createElement(Latex, {\n    text: \"\\\\(N_i\\\\)\"\n  }), \" is the size of stratum \", React.createElement(Latex, {\n    text: \"\\\\(i\\\\)\"\n  }), \", and \", React.createElement(Latex, {\n    text: \"\\\\(N = \\\\sum_{i=1}^k N_i\\\\)\"\n  }), \". This ensures that your sample is balanced with respect to the distribution of these strata in your population.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"observational-studies\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#observational-studies\",\n    \"aria-label\": \"observational studies permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Observational studies\"), \"\\n\", React.createElement(_components.p, null, \"Observational methods involve collecting data by observing subjects in their natural contexts. Researchers often classify these as either \", React.createElement(Highlight, null, \"participant\"), \" or \", React.createElement(Highlight, null, \"non-participant\"), \" observation:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Participant observation\"), \": The researcher actively engages with the group being studied, sometimes even becoming part of it. This method is common in ethnographic or anthropological studies, where immersion in the environment is required to gather contextual data.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Non-participant observation\"), \": Here, the researcher remains an external observer and doesn't interfere. Think of a scenario where you set up a camera feed in a store to study traffic patterns or consumer behavior. The researcher is not interacting with the subjects but is merely documenting the activity.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"From a data science standpoint, observational studies can provide unique insights — often capturing real, unfiltered behavior or phenomena. However, they can be fraught with confounding variables and biases. The choice of location, the timing, the presence (or non-presence) of the observer, and the subjective lens of the observer can all shape what data gets recorded. As is the case with interviews and surveys, designing an effective observational study requires a carefully thought-out protocol and a plan to mitigate common biases.\"), \"\\n\", React.createElement(_components.p, null, \"Some advanced research (for instance, Chang and Liu (ICML 2021)) has looked into automated or semi-automated observational data methods, including computer vision to track behaviors in controlled lab settings, or sensor-based monitoring in environmental studies. These increasingly blur the line between traditional observational methods and modern sensor-driven approaches to data collection — showing how \\\"old-school\\\" methods continue to evolve in conjunction with new technologies.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"chapter-3-web-based-data-collection\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#chapter-3-web-based-data-collection\",\n    \"aria-label\": \"chapter 3 web based data collection permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Chapter 3: web-based data collection\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"welcome-to-the-era-of-easy-to-get-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#welcome-to-the-era-of-easy-to-get-data\",\n    \"aria-label\": \"welcome to the era of easy to get data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"welcome to the era of easy-to-get data\"), \"\\n\", React.createElement(_components.p, null, \"Few developments have transformed data collection more radically than the World Wide Web. Online content, ranging from static web pages to dynamic web applications to social media streams, is an extraordinary source of data. Machine learning practitioners now tap into these web-based resources to discover market sentiments, user-generated text, images, or real-time events. This massive accessibility, however, comes with intricacies related to legal constraints, ethical concerns, site limitations, and technical hurdles.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"parser-vs-scraper\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#parser-vs-scraper\",\n    \"aria-label\": \"parser vs scraper permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"parser vs. scraper\"), \"\\n\", React.createElement(_components.p, null, \"When speaking of gathering data from websites, two terms often come up: \", React.createElement(Highlight, null, \"web parsing\"), \" and \", React.createElement(Highlight, null, \"web scraping\"), \". Strictly speaking, \\\"scraping\\\" typically connotes retrieving, extracting, and possibly structuring data directly from a web page, while \\\"parsing\\\" connotes the lower-level act of analyzing a string (like HTML or JSON) and transforming it into a structured format in code. Most of the time, these terms are used interchangeably in casual ML discussions, but the difference is somewhat meaningful:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Parser\"), \": Emphasizes the process of analyzing the HTML or JSON to break it into structured data. Often used when the content is already well-structured.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Scraper\"), \": Emphasizes the entire pipeline of sending HTTP requests, obtaining raw web responses (HTML, JavaScript, or JSON), extracting relevant information, and storing it.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In practice, you'll often develop or employ a scraper that uses an HTML parser under the hood. So keep these two concepts in mind as we begin.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"web-scraping-tools-and-libraries\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#web-scraping-tools-and-libraries\",\n    \"aria-label\": \"web scraping tools and libraries permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"web scraping: tools and libraries\"), \"\\n\", React.createElement(_components.p, null, \"The open-source Python ecosystem offers a robust collection of web scraping libraries:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"requests\"), \": A user-friendly library to handle HTTP requests in Python. It's typically your first step for retrieving web pages or data from an API endpoint.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Beautiful Soup\"), \": A high-level parsing library that makes it convenient to handle HTML or XML documents. With Beautiful Soup, you can parse a page's DOM (Document Object Model) and locate tags, attributes, and text with ease.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Scrapy\"), \": A more full-featured framework for large-scale crawling, featuring built-in concurrency, pipeline management, and other advanced features. It's ideal for robust, production-level scraping pipelines.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"techniques-and-best-practices\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#techniques-and-best-practices\",\n    \"aria-label\": \"techniques and best practices permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"techniques and best practices\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Respect robots.txt\"), \": Many websites publish a \\\"robots.txt\\\" file specifying which parts of the site can be visited by automated bots. Although not strictly enforceable in all jurisdictions, respecting it is best practice to avoid legal and ethical complications.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Throttle your requests\"), \": Sending too many requests too quickly can stress servers and lead to IP bans or temporary blocks. Libraries like Scrapy offer built-in settings for concurrency and download delay.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Rotate user agents and proxies\"), \": Websites might rate-limit or reject requests based on suspicious usage patterns. Using a pool of user agent strings and proxies can help, but be mindful of site policies and potential legal ramifications.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Parse dynamically generated content\"), \": Many modern web apps rely on JavaScript frameworks that render content dynamically in the browser. Tools like Selenium, Playwright, or Splash can help by automating a headless browser and capturing post-JavaScript-rendered HTML.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Below is a simple code snippet illustrating a typical workflow with \", React.createElement(Highlight, null, \"requests\"), \" and \", React.createElement(Highlight, null, \"Beautiful Soup\"), \":\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport requests\nfrom bs4 import BeautifulSoup\nimport time\n\ndef basic_scraper(url_list):\n    results = []\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 \"\n                      \"(KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36\"\n    }\n\n    for url in url_list:\n        try:\n            response = requests.get(url, headers=headers, timeout=10)\n            if response.status_code == 200:\n                soup = BeautifulSoup(response.text, \"html.parser\")\n                # For demo: extract all 'h1' tags\n                h1_tags = [h1.get_text(strip=True) for h1 in soup.find_all(\"h1\")]\n                results.append((url, h1_tags))\n            else:\n                print(f\"Failed to retrieve {url}, status code: {response.status_code}\")\n        except requests.exceptions.RequestException as e:\n            print(f\"Error scraping {url}: {e}\")\n        # Throttle\n        time.sleep(1)\n    return results\n\nurl_list_example = [\n    \"https://example.com\",\n    \"https://another-example.org\"\n]\nscraped_data = basic_scraper(url_list_example)\nprint(scraped_data)\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"Here, I'm using a list of URLs to sequentially retrieve each page, parse it with BeautifulSoup, and extract a simple piece of information (the text within all <h1> elements). This snippet also demonstrates how to use a custom \\\"User-Agent\\\" header — some sites are particular about the user agent string you present. The \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">time.sleep(1)</code>\"\n    }\n  }), \" call helps in avoiding hammering the server too hard.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"dealing-with-dynamic-or-javascript-driven-websites\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#dealing-with-dynamic-or-javascript-driven-websites\",\n    \"aria-label\": \"dealing with dynamic or javascript driven websites permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"dealing with dynamic or javascript-driven websites\"), \"\\n\", React.createElement(_components.p, null, \"Web scraping can become challenging if the site heavily relies on JavaScript. Many frameworks (like React, Vue, or Angular) create dynamic content that might not be present in the initial HTML response. This is where headless browsers such as Selenium, Playwright, or Puppeteer come into the picture:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Selenium\"), \": Automates major browsers (Chrome, Firefox, Safari, etc.) through a driver. Allows you to programmatically render pages, fill out forms, click buttons, and wait for elements to load.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Playwright\"), \": A more modern library from Microsoft, supporting headless Chrome, Firefox, and WebKit. Offers deeper concurrency and cross-language support.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Puppeteer\"), \" (Node.js): Commonly used in JavaScript environments for controlling Chrome or Chromium.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"These tools effectively replicate what a real user experiences — downloading all required JavaScript assets, executing them, and generating the final HTML or DOM you can parse. However, they are also more resource-intensive and slower than straightforward requests-based solutions.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"handling-apis\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#handling-apis\",\n    \"aria-label\": \"handling apis permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"handling apis\"), \"\\n\", React.createElement(_components.p, null, \"Modern web development has also embraced structured data access through \", React.createElement(Highlight, null, \"APIs\"), \", which let you bypass HTML parsing entirely. Instead, you can directly send requests in JSON or another structured format to an endpoint, receiving neatly packaged responses that are much simpler to parse and integrate.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"revisiting-rest--graphql-basics\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#revisiting-rest--graphql-basics\",\n    \"aria-label\": \"revisiting rest  graphql basics permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"revisiting rest & graphql basics\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"REST\"), \": The standard for many years. A RESTful API typically adheres to predictable URL patterns, using HTTP methods like GET, POST, PUT, and DELETE to manage resources. You might see an endpoint like \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">https://api.example.com/users/</code>\"\n    }\n  }), \" to retrieve or post user data.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"GraphQL\"), \": A query language for APIs that allows you to specify exactly which data fields you want. Rather than multiple endpoints, you might have a single endpoint \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">https://api.example.com/graphql</code>\"\n    }\n  }), \", where you send queries describing the data structure you want in return.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"For many data science scenarios, REST is still the baseline approach. GraphQL has gained popularity because it solves the \\\"over-fetching\\\" and \\\"under-fetching\\\" problem by letting you request precisely the data you need.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"authentication-and-rate-limits\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#authentication-and-rate-limits\",\n    \"aria-label\": \"authentication and rate limits permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"authentication and rate limits\"), \"\\n\", React.createElement(_components.p, null, \"Secured APIs often require authentication credentials (API keys, OAuth tokens, etc.). Many also enforce rate limits — restricting how many requests you can make in a certain time window. Exceeding these limits can lead to temporary bans or additional charges. Always read the documentation for each API you use to ensure compliance.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"common-apis-in-data-science\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#common-apis-in-data-science\",\n    \"aria-label\": \"common apis in data science permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"common apis in data science\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Twitter API\"), \": Provides tweet data, user profiles, and streaming endpoints for real-time tweet ingestion. OAuth-based.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Google APIs\"), \": This umbrella covers a wide range of services, from Google Maps to Google Search, each with its own set of usage quotas and credentials.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"GitHub API\"), \": Offers data about repositories, commits, contributors, and code issues — an excellent source for software-related analytics.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Let me show you an example of collecting data from a typical REST API using Python:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport requests\nimport json\n\ndef fetch_data_from_api(endpoint, api_key=None):\n    headers = {\n        \"Content-Type\": \"application/json\"\n    }\n    if api_key:\n        headers[\"Authorization\"] = f\"Bearer {api_key}\"\n    \n    response = requests.get(endpoint, headers=headers, timeout=10)\n    if response.status_code == 200:\n        data = json.loads(response.text)\n        return data\n    else:\n        print(f\"Failed to fetch data, status code: {response.status_code}\")\n        return None\n\n# Example usage\napi_endpoint = \"https://api.example.com/data\"\napi_key = \"YOUR_SECRET_API_KEY\"\nresponse_data = fetch_data_from_api(api_endpoint, api_key)\nif response_data:\n    print(\"Data retrieved:\", response_data)\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"In this snippet, I'm simply sending a GET request to an endpoint, attaching an optional \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Authorization</code>\"\n    }\n  }), \" header if the API key is provided, and loading the JSON response into a Python object. The idea is straightforward but can be easily extended to handle POST requests (for advanced queries or GraphQL), to parse more nested JSON structures, or to incorporate advanced error handling and logging.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"social-media-data-collection\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#social-media-data-collection\",\n    \"aria-label\": \"social media data collection permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"social media data collection\"), \"\\n\", React.createElement(_components.p, null, \"Social media platforms — Twitter, Facebook, LinkedIn, Reddit, TikTok, Instagram, and more — provide a goldmine of user-generated data. This data can be about sentiment, user behavior, social network structure, or real-time events. While official APIs exist for many such platforms, their usage is bound by strict rules and rate limits. For instance, if you want large volumes of historical Twitter data, you might need elevated access or have to purchase from a third-party aggregator.\"), \"\\n\", React.createElement(_components.p, null, \"An example with the Twitter API using OAuth 2.0 might look like this:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport requests\nimport json\n\ndef fetch_tweets(query, bearer_token, max_results=10):\n    endpoint = \"https://api.twitter.com/2/tweets/search/recent\"\n    headers = {\n        \"Authorization\": f\"Bearer {bearer_token}\"\n    }\n    params = {\n        \"query\": query,\n        \"max_results\": max_results,\n        \"tweet.fields\": \"author_id,created_at,lang\"\n    }\n    \n    response = requests.get(endpoint, headers=headers, params=params)\n    if response.status_code == 200:\n        return json.loads(response.text)\n    else:\n        print(f\"Error: {response.status_code} - {response.text}\")\n        return None\n\nbearer_token = \"YOUR_TWITTER_BEARER_TOKEN\"\ntweets_data = fetch_tweets(\"machine learning\", bearer_token)\nif tweets_data:\n    print(\"Fetched tweets:\", tweets_data)\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"Here, I'm calling Twitter's \\\"recent search\\\" endpoint, providing a \\\"query\\\" parameter, and also specifying which tweet fields I need. Note that I'm not pulling in the entire user object — just their \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">author_id</code>\"\n    }\n  }), \", which in many cases is enough for further lookups or network analysis. If you want full user metadata, you'll need to request it explicitly or rely on expansions via the same API.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"chapter-4-extra-data-external-and-third-party-datasets\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#chapter-4-extra-data-external-and-third-party-datasets\",\n    \"aria-label\": \"chapter 4 extra data external and third party datasets permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Chapter 4: extra data: external and third-party datasets\"), \"\\n\", React.createElement(_components.p, null, \"While web scraping and APIs let you build your own datasets, you can often save considerable time by tapping into existing data repositories. There's a multitude of publicly available, high-quality datasets that you can readily consume.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"public-data-repositories\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#public-data-repositories\",\n    \"aria-label\": \"public data repositories permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"public data repositories\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"UCI machine learning repository\"), \": A classic, hosting hundreds of well-documented datasets that are widely used as benchmarks in research.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Kaggle Datasets\"), \": Kaggle has become a central hub for data science competitions and also hosts a variety of community-contributed datasets.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Data.gov\"), \": A repository of data from the United States government covering topics like climate, agriculture, and demographic statistics. Many other countries host similar portals.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"OpenDataSoft\"), \" and \", React.createElement(_components.strong, null, \"DataHub\"), \": Aggregators for open data from diverse domains.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Public datasets frequently come with documentation or \\\"data cards\\\" that list how they were collected and any known biases or limitations. This metadata can be critical for advanced ML usage, especially if you plan to compare or replicate published results.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"government-and-open-source-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#government-and-open-source-data\",\n    \"aria-label\": \"government and open source data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"government and open-source data\"), \"\\n\", React.createElement(_components.p, null, \"Worldwide, there is a growing push for open data from government agencies, nonprofits, and research organizations. Some countries, like the UK, Canada, or Australia, invest significantly in publicly accessible resources — crime statistics, economic indicators, health data, or geospatial data. In addition to government sources, many scientific projects (e.g., NASA missions) release large troves of data for research.\"), \"\\n\", React.createElement(_components.p, null, \"These data sources typically follow well-defined standards. For instance, geospatial data might adhere to certain GIS formats (shapefiles, GeoJSON, etc.), while health data might be anonymized to comply with HIPAA in the US or other privacy regulations. Understanding these standards can simplify your data ingestion and cleaning processes.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"commercial-and-subscription-based-databases\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#commercial-and-subscription-based-databases\",\n    \"aria-label\": \"commercial and subscription based databases permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"commercial and subscription-based databases\"), \"\\n\", React.createElement(_components.p, null, \"Beyond free data sources, paid or subscription-based data providers abound, particularly for specialized domains such as financial data (Bloomberg, Thomson Reuters), marketing and consumer insights (Nielsen, Kantar), or advanced industrial telemetry (IoT providers). While these services can be expensive, they often offer advanced support, carefully curated data, and specialized tools or APIs for data retrieval. For well-funded enterprises aiming at high-accuracy forecasts or analyses in financial markets, these commercial databases can be indispensable.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"other-sources\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#other-sources\",\n    \"aria-label\": \"other sources permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"other sources\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Academic research collaborations\"), \": Universities or labs often share data with each other under collaborative agreements, sometimes using open repositories like Figshare or Zenodo.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Professional networks\"), \": Many data scientists and researchers informally share curated datasets on GitHub, personal websites, or in academic conferences. Checking the supplemental materials in published papers (for example, in JMLR or NeurIPS proceedings) can often reveal hidden gems.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Data scraping firms\"), \": Entire businesses specialize in scraping or aggregating data from across the web, then selling or licensing that data to others. This can range from marketing leads to product pricing intelligence.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"chapter-5-experimental-data-collection\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#chapter-5-experimental-data-collection\",\n    \"aria-label\": \"chapter 5 experimental data collection permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Chapter 5: experimental data collection\"), \"\\n\", React.createElement(_components.p, null, \"While surveys and existing datasets can satisfy a wide range of needs, certain research questions require you to design and collect your own data from scratch, often in a controlled setting. This is the realm of \", React.createElement(Highlight, null, \"experimental data collection\"), \", where you, as a researcher or data scientist, define the conditions under which data is generated or recorded.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"designing-experiments\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#designing-experiments\",\n    \"aria-label\": \"designing experiments permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"designing experiments\"), \"\\n\", React.createElement(_components.p, null, \"Experimental design is a vast field that intersects with statistics, scientific methodology, and even ethics. At its core, a well-designed experiment manipulates one or more variables (the \\\"independent variables\\\") and measures the effect on another variable (the \\\"dependent variable\\\"). Crucially, experiments aim to control for \\\"confounding variables\\\" so that you can attribute observed effects specifically to your manipulations.\"), \"\\n\", React.createElement(_components.p, null, \"Some widely cited frameworks for designing robust experiments include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Randomized Controlled Trials (RCTs)\"), \": Participants or subjects are randomly assigned to \\\"treatment\\\" or \\\"control\\\" groups to reduce bias.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Factorial Designs\"), \": Investigating multiple independent variables at once, often capturing interaction effects.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Cross-over Designs\"), \": Subjects receive multiple treatments in a random order, providing within-subject comparisons.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Although many readers might associate experimental designs with lab-based psychology or pharmaceutical studies, the principles are equally valid for machine learning contexts — such as controlled online experiments (A/B tests) or evaluating algorithmic changes in a consistent environment.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"field-experiments-vs-lab-experiments\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#field-experiments-vs-lab-experiments\",\n    \"aria-label\": \"field experiments vs lab experiments permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"field experiments vs. lab experiments\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Field experiments\"), \": Take place in a real-world setting. For example, if you're testing user interface changes on an e-commerce website, you deploy the variant to a subset of real users. While more authentic, this approach is also more susceptible to noise and confounds.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Lab experiments\"), \": Occur in a controlled environment where you can systematically manipulate conditions and observe changes. In a machine learning scenario, you might gather participants to test an app in a usability lab. Alternatively, you might run a controlled environment in which your automated scripts simulate a variety of user interactions.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Both field and lab experiments come with trade-offs in cost, control, and external validity. The choice depends on your research question and the resources at your disposal.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"controlled-variables-and-reproducibility\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#controlled-variables-and-reproducibility\",\n    \"aria-label\": \"controlled variables and reproducibility permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"controlled variables and reproducibility\"), \"\\n\", React.createElement(_components.p, null, \"In a proper experimental design, you must identify the key variables that need to remain constant. For instance, if you're measuring the performance of a new recommendation algorithm, you might keep the user set, the time frame, and the product catalog stable while only toggling the algorithm. This helps ensure that your measured outcomes are truly tied to changes in the algorithm, rather than external factors like seasonal shifts in consumer behavior or newly added product lines.\"), \"\\n\", React.createElement(_components.p, null, \"Reproducibility demands that others can replicate your experiment and achieve roughly the same results. This implies you should carefully document your methodology, instrumentation, data collection techniques, and data pre-processing routines. In advanced ML experiments, it also means clarifying your data splits (train/validation/test), random seeds, hardware configurations, and versioned code repositories.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"example-code-snippet-collecting-sensor-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#example-code-snippet-collecting-sensor-data\",\n    \"aria-label\": \"example code snippet collecting sensor data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"example code snippet: collecting sensor data\"), \"\\n\", React.createElement(_components.p, null, \"Imagine you're running a small lab experiment measuring temperature changes in different corners of a room to assess the impact of a new ventilation system. If you have a set of IoT-enabled thermometers, you might do something like:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport time\nimport random\n\ndef collect_temperature_data(num_sensors=4, duration=60, sample_rate=5):\n    \"\"\"\n    Simulate reading from sensors for 'duration' seconds at 'sample_rate' second intervals.\n    Return a dictionary with timestamps and sensor readings.\n    \"\"\"\n    data_log = []\n    start_time = time.time()\n    \n    while (time.time() - start_time) < duration:\n        timestamp = time.time()\n        sensor_readings = {}\n        for sensor_id in range(num_sensors):\n            # Fake reading for illustration. In reality, you'd read from your hardware or sensor API.\n            sensor_readings[f\"sensor_{sensor_id}\"] = 20 + random.uniform(-0.5, 0.5)\n        \n        data_log.append({\n            \"timestamp\": timestamp,\n            \"readings\": sensor_readings\n        })\n        \n        time.sleep(sample_rate)\n    return data_log\n\nif __name__ == \"__main__\":\n    logs = collect_temperature_data()\n    for entry in logs:\n        print(entry)\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"In real-world applications, you would replace the random values with actual readings from your sensors. The general structure demonstrates how you might implement a loop to gather data at specified intervals, storing it in a convenient format that can later be processed or sent to a database.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"we-will-cover-data-generation-and-experimental-design-in-another-post\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#we-will-cover-data-generation-and-experimental-design-in-another-post\",\n    \"aria-label\": \"we will cover data generation and experimental design in another post permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"\\\"we will cover data generation and experimental design in another post\\\"\"), \"\\n\", React.createElement(_components.p, null, \"Experimental design is a vast domain, extending well beyond these fundamental ideas. Topics such as power analysis, effect size measurement, specialized lab equipment, advanced sensor arrays, VR-based or AR-based experiments, and more sophisticated multi-factor designs go far deeper. The goal here is simply to provide a primer on how carefully orchestrated experiments can yield highly targeted data, vital for situations in which existing data sources won't suffice or might fail to capture crucial variables.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"chapter-6-data-quality-and-storage\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#chapter-6-data-quality-and-storage\",\n    \"aria-label\": \"chapter 6 data quality and storage permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Chapter 6: data quality and storage\"), \"\\n\", React.createElement(_components.p, null, \"Once you have collected data — be it from an old-school survey, a web scraping pipeline, an API, or an experiment — the next major considerations revolve around quality and storage. Low-quality or mismanaged data can quickly turn into a liability, stalling or invalidating your machine learning workflows.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"data-cleaning-and-validation-integrated-in-scraping-pipelines\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#data-cleaning-and-validation-integrated-in-scraping-pipelines\",\n    \"aria-label\": \"data cleaning and validation integrated in scraping pipelines permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"data cleaning and validation integrated in scraping pipelines\"), \"\\n\", React.createElement(_components.p, null, \"It's often more efficient to incorporate basic data cleaning steps into your scraping or acquisition pipeline, rather than waiting until after data is collected. This might involve:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Filtering out duplicates\"), \": If your scraping script hits the same URL multiple times or an API returns overlapping results, deduplicate records as you process them.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Basic validation\"), \": Check for missing or malformed fields. For example, if you're collecting a list of product prices, ensure the values can be parsed as numerical.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Normalization\"), \": Convert data to consistent formats (e.g., standard date-time representations, consistent capitalization for categories).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Researchers like He and gang (ICML 2022) have proposed real-time data validation frameworks that use machine learning to automatically identify anomalies in data as it streams in, highlighting how advanced the field has become. By flagging outliers or suspicious entries early, you avoid polluting your dataset.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"handling-missing-or-inconsistent-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#handling-missing-or-inconsistent-data\",\n    \"aria-label\": \"handling missing or inconsistent data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"handling missing or inconsistent data\"), \"\\n\", React.createElement(_components.p, null, \"Missing data can result from a variety of factors: participants might skip questions, web pages might not contain expected tags, or sensor devices might experience downtime. You must decide how to handle these omissions. Common approaches:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Imputation\"), \": Estimate missing values based on the rest of the dataset. For instance, fill with the mean, median, or use a more sophisticated regression-based method for missing fields.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Omission\"), \": If data is too incomplete, or if the fraction of missing data is small and random, you might simply remove those rows (listwise deletion).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Flagging\"), \": Some prefer to encode missingness as a separate category or variable, especially for fields like user location or marital status that might carry meaning in their absence.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Inconsistent data (e.g., contradictory entries, format mismatches) requires either standardization or closer inspection. If the data is large enough, you might attempt automated checks or even anomaly detection algorithms to identify anomalies at scale.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"metadata-and-data-documentation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#metadata-and-data-documentation\",\n    \"aria-label\": \"metadata and data documentation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"metadata and data documentation\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Highlight, null, \"Metadata\"), \" — often referred to as \\\"data about the data\\\" — can be a critical aid for any future user of your dataset, including your future self. Capturing information about how data was collected, what each variable represents, the date ranges, and the relevant pipeline steps can substantially improve reproducibility and interpretability.\"), \"\\n\", React.createElement(_components.p, null, \"Research papers (for instance, Panigrahi and gang, NeurIPS 2021) have advocated for \\\"data cards,\\\" a structured approach to presenting metadata that includes:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Dataset description\"), \"\\n\", React.createElement(_components.li, null, \"Intended uses\"), \"\\n\", React.createElement(_components.li, null, \"Collection methodology\"), \"\\n\", React.createElement(_components.li, null, \"Data fields or schema\"), \"\\n\", React.createElement(_components.li, null, \"Known biases, ethical considerations\"), \"\\n\", React.createElement(_components.li, null, \"Licensing information\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This level of transparency is particularly important for large-scale or collaborative projects. Proper metadata also helps in data versioning, ensuring that any changes to the data schema or cleaning procedure are documented.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"code-snippet-integrating-data-processing-and-error-handling-in-our-scraper-built-in-chapter-3\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code-snippet-integrating-data-processing-and-error-handling-in-our-scraper-built-in-chapter-3\",\n    \"aria-label\": \"code snippet integrating data processing and error handling in our scraper built in chapter 3 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"code snippet: integrating data processing and error handling in our scraper built in chapter 3\"), \"\\n\", React.createElement(_components.p, null, \"Let's revisit the scraping code from Chapter 3 and incorporate some data processing steps:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport requests\nfrom bs4 import BeautifulSoup\nimport time\nimport re\n\ndef advanced_scraper(url_list):\n    results = []\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\"\n    }\n    \n    for url in url_list:\n        try:\n            response = requests.get(url, headers=headers, timeout=10)\n            if response.status_code == 200:\n                soup = BeautifulSoup(response.text, \"html.parser\")\n                \n                # Example: scraping product info\n                product_tags = soup.select(\".product-item\")\n                for pt in product_tags:\n                    product_name = pt.select_one(\".product-title\")\n                    price_text = pt.select_one(\".product-price\")\n                    \n                    if product_name and price_text:\n                        name_str = product_name.get_text(strip=True)\n                        # Extract numeric price from something like '$19.99'\n                        price_str = price_text.get_text(strip=True)\n                        match = re.search(r\"\\\\d+\\\\.\\\\d+\", price_str)\n                        \n                        if match:\n                            try:\n                                price_val = float(match.group())\n                            except ValueError:\n                                price_val = None\n                        else:\n                            price_val = None\n                        \n                        if name_str and price_val is not None:\n                            results.append({\n                                \"url\": url,\n                                \"product_name\": name_str,\n                                \"price\": price_val\n                            })\n            else:\n                print(f\"Failed to retrieve {url}, status: {response.status_code}\")\n        except requests.exceptions.RequestException as e:\n            print(f\"Error scraping {url}: {e}\")\n        \n        time.sleep(1)\n    \n    # Deduplicate\n    unique_data = { (r[\"url\"], r[\"product_name\"], r[\"price\"]): r for r in results }\n    return list(unique_data.values())\n\nurl_list_example = [\n    \"https://example.com/products\",\n    \"https://another-example.org/shop\"\n]\nscraped_data = advanced_scraper(url_list_example)\nprint(scraped_data)\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"Note how I'm selecting elements using CSS selectors (\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.product-item</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.product-title</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.product-price</code>\"\n    }\n  }), \") and searching for numeric patterns in the price string. I'm also ensuring potential anomalies in \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">price_str</code>\"\n    }\n  }), \" won't crash the code by wrapping them in try-except blocks. Finally, I deduplicate results by turning them into a dictionary keyed by (URL, product name, price). This approach is obviously simplistic, but it demonstrates how you might tackle real-world complexities step by step, integrating data cleaning and consistency checks right within the scraping logic.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"storage-solutions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#storage-solutions\",\n    \"aria-label\": \"storage solutions permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"storage solutions\"), \"\\n\", React.createElement(_components.p, null, \"Data storage solutions vary widely, from a single CSV file on your computer to distributed, cloud-based data lakes. The choice depends largely on the volume of data, velocity (how fast it accumulates), variety (structured vs. unstructured), and the subsequent analysis or processing you intend to apply.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"local-storage\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#local-storage\",\n    \"aria-label\": \"local storage permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"local storage\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Flat files\"), \" (CSV, JSON, Parquet, Feather, etc.): Quick to set up, easy to transport, but can become unwieldy as data grows. CSV and JSON are extremely common, but for large data, more efficient columnar formats like Parquet can offer significant compression and query speed benefits.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"SQLite\"), \": A lightweight relational database that stores data in a single file. Useful for moderate-size datasets where you need basic SQL queries without the overhead of running a separate database server.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"cloud-based-storage-eg-aws-azure\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cloud-based-storage-eg-aws-azure\",\n    \"aria-label\": \"cloud based storage eg aws azure permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"cloud-based storage (e.g., aws, azure)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Amazon S3\"), \": Object storage service from AWS. Widely used to store large volumes of unstructured data (images, logs, CSVs). Coupled with services like AWS Athena, you can query S3 data using SQL-like syntax, or feed S3 data into AWS EMR or AWS Glue for further processing.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Azure Blob Storage\"), \": Similar to S3, offered by Microsoft Azure.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Google Cloud Storage\"), \": Google's version, integrated with BigQuery for large-scale analytical queries.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"For structured data requiring real-time or near-real-time processing, you might consider cloud-based relational databases (Amazon RDS, Azure SQL Database, Google Cloud SQL) or NoSQL databases like DynamoDB, MongoDB Atlas, or Google's Firestore.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code-example-using-aws-to-store-and-use-data\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code-example-using-aws-to-store-and-use-data\",\n    \"aria-label\": \"code example using aws to store and use data permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"code example: using aws to store and use data\"), \"\\n\", React.createElement(_components.p, null, \"Below is a schematic example showing how you might upload a local file to AWS S3 using the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boto3</code>\"\n    }\n  }), \" library, then use AWS Athena to query it:\"), \"\\n\", React.createElement(Code, {\n    text: `\nimport boto3\nimport time\n\ndef upload_to_s3(file_path, bucket_name, s3_key):\n    s3 = boto3.client(\"s3\")\n    s3.upload_file(file_path, bucket_name, s3_key)\n\ndef query_with_athena(query, database, output_location):\n    athena = boto3.client(\"athena\")\n    response = athena.start_query_execution(\n        QueryString=query,\n        QueryExecutionContext={\n            'Database': database\n        },\n        ResultConfiguration={\n            'OutputLocation': output_location\n        }\n    )\n    query_execution_id = response[\"QueryExecutionId\"]\n    \n    # Wait for the query to finish\n    while True:\n        status = athena.get_query_execution(QueryExecutionId=query_execution_id)\n        state = status[\"QueryExecution\"][\"Status\"][\"State\"]\n        if state in [\"SUCCEEDED\", \"FAILED\", \"CANCELLED\"]:\n            break\n        time.sleep(2)\n    \n    if state == \"SUCCEEDED\":\n        results_paginator = athena.get_paginator(\"get_query_results\")\n        results_iter = results_paginator.paginate(QueryExecutionId=query_execution_id)\n        for results_page in results_iter:\n            for row in results_page[\"ResultSet\"][\"Rows\"]:\n                print(row)\n    else:\n        print(f\"Query failed or was cancelled with state: {state}\")\n\nif __name__ == \"__main__\":\n    bucket_name = \"my-data-bucket\"\n    s3_key = \"data/my_dataset.csv\"\n    local_file_path = \"my_dataset.csv\"\n    \n    # Upload file\n    upload_to_s3(local_file_path, bucket_name, s3_key)\n    \n    # Query via Athena\n    database = \"my_athena_db\"\n    output_location = \"s3://my-data-bucket/query-results/\"\n    sample_query = f\"SELECT * FROM my_athena_table LIMIT 10;\"\n    query_with_athena(sample_query, database, output_location)\n`\n  }), \"\\n\", React.createElement(_components.p, null, \"In this (simplified) example, I upload a local file \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">my_dataset.csv</code>\"\n    }\n  }), \" to an S3 bucket, then run an Athena query that references the table containing that data. Athena requires the table to be properly defined beforehand with a CREATE TABLE statement and the correct schema pointing to the S3 location. It's a powerful setup that allows you to query massive datasets in a serverless manner without spinning up your own database clusters.\"), \"\\n\", React.createElement(_components.p, null, \"Storing data in a robust, version-controlled manner is increasingly recognized as essential for modern ML projects. This ensures data lineage — knowing where each piece of data came from and which transformations it underwent — and fosters deeper trust in the final models.\"), \"\\n\", React.createElement(Image, {\n    alt: \"data_collection_pipeline_diagram\",\n    path: \"\",\n    caption: \"A simplified overview of a data collection pipeline, moving from raw sources (web scraping, APIs, surveys, sensors) through cleaning and validation, culminating in structured storage and metadata documentation.\",\n    zoom: \"false\"\n  }), \"\\n\", React.createElement(_components.p, null, \"If you look at the overarching workflow in the image (placeholder above), you can visualize how different data collection strategies funnel into a unified pipeline, with cleaning and validation steps integrated before the final data is stored. The pipeline can incorporate advanced version control systems for data, tie into continuous integration setups that automatically test data sanity, or link to MLOps frameworks that retrain models whenever fresh data arrives.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"Data collection is arguably the most critical step in any data science or machine learning project. Without a thoughtful approach to how you gather, structure, document, and store data, even the best algorithms and computational resources will fail to yield meaningful, reliable insights. From old-school manual methods like surveys and interviews to high-scale web scraping and sensor-driven experimental designs, a wide range of options awaits you. Each method comes with its own set of trade-offs, best practices, and potential pitfalls — requiring vigilance for bias, missing data, or irrelevant signals.\"), \"\\n\", React.createElement(_components.p, null, \"In the era of big data, open data, and commercial data, there's no shortage of possible sources to explore. However, the volume and variety of data also demand robust strategies for cleaning, validation, metadata documentation, and efficient storage. Whether you rely on local files, a relational database, or a cloud-based data lake, the fundamental principles remain the same: define your objectives clearly, anticipate the challenges, keep meticulous records, and integrate reliability checks at every stage.\"), \"\\n\", React.createElement(_components.p, null, \"Although much of the excitement in machine learning can revolve around neural architectures, advanced optimization methods, or model interpretability frameworks, none of these matter without a solid foundation of high-quality data. By mastering the diverse toolkit of data collection methods described here, you'll be in a far stronger position to tackle the complexities of real-world machine learning tasks — where data rarely arrives neatly curated, labeled, and bias-free.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/avrtt/Repos/avrtt.github.io/src/pages/posts/research/data_collection_techniques.mdx\";\nimport React, {useState, useEffect} from 'react';\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\nimport RemoveMarkdown from 'remove-markdown';\nimport {ImageContext} from '../context/ImageContext';\nimport {MDXProvider} from '@mdx-js/react';\nimport Image from '../components/PostImage';\nimport {motion} from 'framer-motion';\nimport SEO from \"../components/seo\";\nimport PostBanner from '../components/PostBanner';\nimport PostBottom from '../components/PostBottom';\nimport {wordsPerMinuteAdventures, wordsPerMinuteResearch, wordsPerMinuteThoughts} from '../data/commonVariables';\nimport {graphql} from 'gatsby';\nimport PartOfCourseNotice from \"../components/PartOfCourseNotice\";\nimport * as stylesButtonsCommon from \"../styles/buttons_common.module.scss\";\nimport * as stylesCustomPostLayouts from \"../styles/custom_post_layouts.module.scss\";\nimport * as stylesTableOfContents from \"../styles/table_of_contents.module.scss\";\nimport * as stylesTagBadges from \"../styles/tag_badges.module.scss\";\nfunction formatReadTime(minutes) {\n  if (minutes <= 10) return '~10 min';\n  if (minutes <= 20) return '~20 min';\n  if (minutes <= 30) return '~30 min';\n  if (minutes <= 40) return '~40 min';\n  if (minutes <= 50) return '~50 min';\n  if (minutes <= 60) return '~1 h';\n  const hours = Math.floor(minutes / 60);\n  const remainder = minutes % 60;\n  if (remainder <= 30) {\n    return `~${hours}${remainder > 0 ? '.5' : ''} h`;\n  }\n  return `~${hours + 1} h`;\n}\nconst TableOfContents = ({toc}) => {\n  if (!toc || !toc.items) return null;\n  const handleClick = (e, url) => {\n    e.preventDefault();\n    const targetId = url.replace('#', '');\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n  return React.createElement(\"nav\", {\n    className: stylesTableOfContents.toc\n  }, React.createElement(\"ul\", null, toc.items.map((item, index) => React.createElement(\"li\", {\n    key: index\n  }, React.createElement(\"a\", {\n    href: item.url,\n    onClick: e => handleClick(e, item.url)\n  }, item.title), item.items && React.createElement(TableOfContents, {\n    toc: {\n      items: item.items\n    }\n  })))));\n};\nexport function PostTemplate({data: {mdx, allMdx, allPostImages}, children}) {\n  const {frontmatter, body, tableOfContents} = mdx;\n  const index = frontmatter.index;\n  const slug = frontmatter.slug;\n  const section = slug.split('/')[1];\n  const posts = allMdx.nodes.filter(post => post.frontmatter.slug.includes(`/${section}/`));\n  const sortedPosts = posts.sort((a, b) => a.frontmatter.index - b.frontmatter.index);\n  const currentIndex = sortedPosts.findIndex(post => post.frontmatter.index === index);\n  const nextPost = sortedPosts[currentIndex + 1];\n  const lastPost = sortedPosts[currentIndex - 1];\n  const trimmedSlug = frontmatter.slug.replace(/\\/$/, '');\n  const keyCurrent = (/[^/]*$/).exec(trimmedSlug)[0];\n  const basePath = `posts/${section}/content/${keyCurrent}/`;\n  const [isWideLayout, setIsWideLayout] = useState(frontmatter.flagWideLayoutByDefault);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const toggleLayout = () => {\n    setIsWideLayout(!isWideLayout);\n  };\n  useEffect(() => {\n    setIsAnimating(true);\n    const timer = setTimeout(() => setIsAnimating(false), 340);\n    return () => clearTimeout(timer);\n  }, [isWideLayout]);\n  var wordsPerMinute;\n  if (section === \"adventures\") {\n    wordsPerMinute = wordsPerMinuteAdventures;\n  } else if (section === \"research\") {\n    wordsPerMinute = wordsPerMinuteResearch;\n  } else if (section === \"thoughts\") {\n    wordsPerMinute = wordsPerMinuteThoughts;\n  }\n  const plainTextBody = RemoveMarkdown(body).replace(/import .*? from .*?;/g, '').replace(/<.*?>/g, '').replace(/\\{\\/\\*[\\s\\S]*?\\*\\/\\}/g, '').trim();\n  const wordCount = plainTextBody.split(/\\s+/).length;\n  const baseReadTimeMinutes = Math.ceil(wordCount / wordsPerMinute);\n  const extraTime = frontmatter.extraReadTimeMin || 0;\n  const totalReadTime = baseReadTimeMinutes + extraTime;\n  const readTime = formatReadTime(totalReadTime);\n  const notices = [{\n    flag: frontmatter.flagDraft,\n    component: () => import(\"../components/NotFinishedNotice\")\n  }, {\n    flag: frontmatter.flagMindfuckery,\n    component: () => import(\"../components/MindfuckeryNotice\")\n  }, {\n    flag: frontmatter.flagRewrite,\n    component: () => import(\"../components/RewriteNotice\")\n  }, {\n    flag: frontmatter.flagOffensive,\n    component: () => import(\"../components/OffensiveNotice\")\n  }, {\n    flag: frontmatter.flagProfane,\n    component: () => import(\"../components/ProfanityNotice\")\n  }, {\n    flag: frontmatter.flagMultilingual,\n    component: () => import(\"../components/MultilingualNotice\")\n  }, {\n    flag: frontmatter.flagUnreliably,\n    component: () => import(\"../components/UnreliablyNotice\")\n  }, {\n    flag: frontmatter.flagPolitical,\n    component: () => import(\"../components/PoliticsNotice\")\n  }, {\n    flag: frontmatter.flagCognitohazard,\n    component: () => import(\"../components/CognitohazardNotice\")\n  }, {\n    flag: frontmatter.flagHidden,\n    component: () => import(\"../components/HiddenNotice\")\n  }];\n  const [loadedNotices, setLoadedNotices] = useState([]);\n  useEffect(() => {\n    notices.forEach(({flag, component}) => {\n      if (flag) {\n        component().then(module => {\n          setLoadedNotices(prev => [...prev, module.default]);\n        });\n      }\n    });\n  }, []);\n  return React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.15\n    }\n  }, React.createElement(PostBanner, {\n    postNumber: frontmatter.index,\n    date: frontmatter.date,\n    updated: frontmatter.updated,\n    readTime: readTime,\n    difficulty: frontmatter.difficultyLevel,\n    title: frontmatter.title,\n    desc: frontmatter.desc,\n    banner: frontmatter.banner,\n    section: section,\n    postKey: keyCurrent,\n    isMindfuckery: frontmatter.flagMindfuckery,\n    mainTag: frontmatter.mainTag\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\",\n      maxWidth: \"75%\",\n      marginLeft: \"auto\",\n      paddingRight: \"1vw\",\n      marginTop: \"-6vh\",\n      marginBottom: \"4vh\"\n    }\n  }, frontmatter.otherTags.map((tag, index) => React.createElement(\"span\", {\n    key: index,\n    className: `noselect ${stylesTagBadges.tagPosts}`,\n    style: {\n      margin: \"0 5px 5px 0\"\n    }\n  }, tag))), React.createElement(\"div\", {\n    className: \"postBody\"\n  }, React.createElement(TableOfContents, {\n    toc: tableOfContents\n  })), React.createElement(\"br\"), React.createElement(\"div\", {\n    style: {\n      margin: \"0 10% -2vh 30%\",\n      textAlign: \"right\"\n    }\n  }, React.createElement(motion.button, {\n    className: `noselect ${stylesCustomPostLayouts.postButton}`,\n    id: stylesCustomPostLayouts.postLayoutSwitchButton,\n    onClick: toggleLayout,\n    whileTap: {\n      scale: 0.93\n    }\n  }, React.createElement(motion.div, {\n    className: stylesButtonsCommon.buttonTextWrapper,\n    key: isWideLayout,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }, isWideLayout ? \"Switch to default layout\" : \"Switch to wide layout\"))), React.createElement(\"br\"), React.createElement(\"div\", {\n    className: \"postBody\",\n    style: {\n      margin: isWideLayout ? \"0 -14%\" : \"\",\n      maxWidth: isWideLayout ? \"200%\" : \"\",\n      transition: \"margin 1s ease, max-width 1s ease, padding 1s ease\"\n    }\n  }, React.createElement(\"div\", {\n    className: `${stylesCustomPostLayouts.textContent} ${isAnimating ? stylesCustomPostLayouts.fadeOut : stylesCustomPostLayouts.fadeIn}`\n  }, loadedNotices.map((NoticeComponent, index) => React.createElement(NoticeComponent, {\n    key: index\n  })), frontmatter.indexCourse ? React.createElement(PartOfCourseNotice, {\n    index: frontmatter.indexCourse,\n    category: frontmatter.courseCategoryName\n  }) : \"\", React.createElement(ImageContext.Provider, {\n    value: {\n      images: allPostImages.nodes,\n      basePath: basePath.replace(/\\/$/, '') + '/'\n    }\n  }, React.createElement(MDXProvider, {\n    components: {\n      Image\n    }\n  }, children)))), React.createElement(PostBottom, {\n    nextPost: nextPost,\n    lastPost: lastPost,\n    keyCurrent: keyCurrent,\n    section: section\n  }));\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head({data}) {\n  const {frontmatter} = data.mdx;\n  const title = frontmatter.titleSEO || frontmatter.title;\n  const titleOG = frontmatter.titleOG || title;\n  const titleTwitter = frontmatter.titleTwitter || title;\n  const description = frontmatter.descSEO || frontmatter.desc;\n  const descriptionOG = frontmatter.descOG || description;\n  const descriptionTwitter = frontmatter.descTwitter || description;\n  const schemaType = frontmatter.schemaType || \"BlogPosting\";\n  const keywords = frontmatter.keywordsSEO;\n  const datePublished = frontmatter.date;\n  const dateModified = frontmatter.updated || datePublished;\n  const imageOG = frontmatter.imageOG || frontmatter.banner?.childImageSharp?.gatsbyImageData?.images?.fallback?.src;\n  const imageAltOG = frontmatter.imageAltOG || descriptionOG;\n  const imageTwitter = frontmatter.imageTwitter || imageOG;\n  const imageAltTwitter = frontmatter.imageAltTwitter || descriptionTwitter;\n  const canonicalUrl = frontmatter.canonicalURL;\n  const flagHidden = frontmatter.flagHidden || false;\n  const mainTag = frontmatter.mainTag || \"Posts\";\n  const section = frontmatter.slug.split('/')[1] || \"posts\";\n  const type = \"article\";\n  const {siteUrl} = useSiteMetadata();\n  const breadcrumbJSON = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": [{\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": siteUrl\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 2,\n      \"name\": mainTag,\n      \"item\": `${siteUrl}/${frontmatter.slug.split('/')[1]}`\n    }, {\n      \"@type\": \"ListItem\",\n      \"position\": 3,\n      \"name\": title,\n      \"item\": `${siteUrl}${frontmatter.slug}`\n    }]\n  };\n  return React.createElement(SEO, {\n    title: title + \" - avrtt.blog\",\n    titleOG: titleOG,\n    titleTwitter: titleTwitter,\n    description: description,\n    descriptionOG: descriptionOG,\n    descriptionTwitter: descriptionTwitter,\n    schemaType: schemaType,\n    keywords: keywords,\n    datePublished: datePublished,\n    dateModified: dateModified,\n    imageOG: imageOG,\n    imageAltOG: imageAltOG,\n    imageTwitter: imageTwitter,\n    imageAltTwitter: imageAltTwitter,\n    canonicalUrl: canonicalUrl,\n    flagHidden: flagHidden,\n    mainTag: mainTag,\n    section: section,\n    type: type\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumbJSON)));\n}\nexport const query = graphql`\n  query($id: String!, $postsFilterRegex: String!, $imagePathRegex: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        index\n        indexCourse\n        title\n        titleSEO\n        titleOG\n        titleTwitter\n        courseCategoryName\n        desc\n        descSEO\n        descOG\n        descTwitter\n        date\n        updated\n        extraReadTimeMin\n        difficultyLevel\n        flagDraft\n        flagMindfuckery\n        flagRewrite\n        flagOffensive\n        flagProfane\n        flagMultilingual\n        flagUnreliably\n        flagPolitical\n        flagCognitohazard\n        flagHidden\n        flagWideLayoutByDefault\n        schemaType\n        mainTag\n        otherTags\n        keywordsSEO\n        banner {\n          childImageSharp {\n            gatsbyImageData(\n\t\t\t\t\t\t\tformats: [JPG, WEBP], \n\t\t\t\t\t\t\tplaceholder: BLURRED, \n\t\t\t\t\t\t\tquality: 100\n\t\t\t\t\t\t)\n          }\n        }\n        imageOG\n        imageAltOG\n        imageTwitter\n        imageAltTwitter\n        canonicalURL\n        slug\n      }\n      body\n      tableOfContents(maxDepth: 3)\n    }\n    allMdx(filter: {frontmatter: {slug: {regex: $postsFilterRegex}}}) {\n      nodes {\n        frontmatter {\n          index\n          slug\n          banner {\n            childImageSharp {\n              gatsbyImageData(\n                formats: [JPG, WEBP],\n                placeholder: BLURRED,\n                quality: 100\n              )\n            }\n          }\n        }\n      }\n    }\n    allPostImages: allFile(\n      filter: { \n        sourceInstanceName: { eq: \"images\" },\n        relativePath: { regex: $imagePathRegex }\n      }\n    ) {\n      nodes {\n        relativePath\n        childImageSharp {\n          gatsbyImageData(\n            layout: CONSTRAINED\n            placeholder: DOMINANT_COLOR\n            quality: 100\n          )\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Latex from 'react-latex-next';\nimport 'katex/dist/katex.min.css'; \n  \nconst L = ({ text }) => {\n  return (\n    <Latex>{text}</Latex>\n  );\n};\nexport default L;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","span","h3","ul","li","strong","ol","h4","hr","_provideComponents","components","Image","id","component","Error","_missingMdxReference","React","style","position","href","className","dangerouslySetInnerHTML","__html","Highlight","Latex","text","Code","alt","path","caption","zoom","wrapper","MDXLayout","TableOfContents","_ref","toc","items","stylesTableOfContents","map","item","index","key","url","onClick","e","handleClick","preventDefault","targetId","replace","targetElement","document","getElementById","scrollIntoView","behavior","block","title","PostTemplate","_ref2","data","mdx","allMdx","allPostImages","children","frontmatter","body","tableOfContents","section","slug","split","sortedPosts","nodes","filter","post","includes","sort","b","currentIndex","findIndex","nextPost","lastPost","trimmedSlug","keyCurrent","exec","basePath","isWideLayout","setIsWideLayout","useState","flagWideLayoutByDefault","isAnimating","setIsAnimating","wordsPerMinute","useEffect","timer","setTimeout","clearTimeout","wordsPerMinuteAdventures","wordsPerMinuteResearch","wordsPerMinuteThoughts","wordCount","RemoveMarkdown","trim","length","readTime","minutes","hours","Math","floor","remainder","formatReadTime","ceil","extraReadTimeMin","notices","flag","flagDraft","flagMindfuckery","flagRewrite","flagOffensive","flagProfane","flagMultilingual","flagUnreliably","flagPolitical","flagCognitohazard","flagHidden","loadedNotices","setLoadedNotices","forEach","_ref3","then","module","prev","concat","_toConsumableArray","default","motion","div","initial","opacity","animate","exit","transition","duration","PostBanner","postNumber","date","updated","difficulty","difficultyLevel","desc","banner","postKey","isMindfuckery","mainTag","display","justifyContent","flexWrap","maxWidth","marginLeft","paddingRight","marginTop","marginBottom","otherTags","tag","stylesTagBadges","margin","textAlign","button","stylesCustomPostLayouts","toggleLayout","whileTap","scale","stylesButtonsCommon","ease","NoticeComponent","indexCourse","PartOfCourseNotice","category","courseCategoryName","ImageContext","Provider","value","images","MDXProvider","PostBottom","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref4","_frontmatter$banner","_frontmatter$banner$c","_frontmatter$banner$c2","_frontmatter$banner$c3","_frontmatter$banner$c4","titleSEO","titleOG","titleTwitter","description","descSEO","descriptionOG","descOG","descriptionTwitter","descTwitter","schemaType","keywords","keywordsSEO","datePublished","dateModified","imageOG","childImageSharp","gatsbyImageData","fallback","src","imageAltOG","imageTwitter","imageAltTwitter","canonicalUrl","canonicalURL","siteUrl","useSiteMetadata","breadcrumbJSON","SEO","type","JSON","stringify"],"sourceRoot":""}