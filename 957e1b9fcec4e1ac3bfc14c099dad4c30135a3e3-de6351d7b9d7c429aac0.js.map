{"version":3,"file":"957e1b9fcec4e1ac3bfc14c099dad4c30135a3e3-de6351d7b9d7c429aac0.js","mappings":"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","sources":["webpack://avrtt.blog/./node_modules/react-medium-image-zoom/dist/index.js"],"sourcesContent":["'use client';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction ICompress() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-unzoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\" })));\n}\nfunction IEnlarge() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-zoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\" })));\n}\n\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = (el) => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = (el) => testElType('IMG', el);\nconst testImgLoaded = (el) => el.complete && el.naturalHeight !== 0;\nconst testSvg = (el) => testElType('SVG', el);\nconst getScaleToWindow = ({ height, offset, width }) => {\n    return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = ({ containerHeight, containerWidth, offset, targetHeight, targetWidth, }) => {\n    const scale = getScaleToWindow({\n        height: targetHeight,\n        offset,\n        width: targetWidth,\n    });\n    const ratio = targetWidth > targetHeight\n        ? targetWidth / containerWidth\n        : targetHeight / containerHeight;\n    return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = ({ containerHeight, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (!containerHeight || !containerWidth) {\n        return 1;\n    }\n    return !hasScalableSrc && targetHeight && targetWidth\n        ? getScaleToWindowMax({\n            containerHeight,\n            containerWidth,\n            offset,\n            targetHeight,\n            targetWidth,\n        })\n        : getScaleToWindow({\n            height: containerHeight,\n            offset,\n            width: containerWidth,\n        });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.currentSrc;\n        }\n        else if (testDiv(imgEl)) {\n            const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n            if (bgImg) {\n                return URL_REGEX.exec(bgImg)?.[1];\n            }\n        }\n    }\n};\nconst getImgAlt = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.alt ?? undefined;\n        }\n        else {\n            return imgEl.getAttribute('aria-label') ?? undefined;\n        }\n    }\n};\nconst getImgRegularStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    const scale = getScale({\n        containerHeight,\n        containerWidth,\n        hasScalableSrc,\n        offset,\n        targetHeight,\n        targetWidth,\n    });\n    return {\n        top: containerTop,\n        left: containerLeft,\n        width: containerWidth * scale,\n        height: containerHeight * scale,\n        transform: `translate(0,0) scale(${1 / scale})`,\n    };\n};\nconst parsePosition = ({ position, relativeNum }) => {\n    const positionNum = parseFloat(position);\n    return position.endsWith('%')\n        ? relativeNum * positionNum / 100\n        : positionNum;\n};\nconst getImgObjectFitStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, objectFit, objectPosition, offset, targetHeight, targetWidth, }) => {\n    if (objectFit === 'scale-down') {\n        if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n            objectFit = 'none';\n        }\n        else {\n            objectFit = 'contain';\n        }\n    }\n    if (objectFit === 'cover' || objectFit === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = objectFit === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'none') {\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'fill') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = Math.max(widthRatio, heightRatio);\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            width: containerWidth * scale,\n            height: containerHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        return {};\n    }\n};\nconst getDivImgStyle = ({ backgroundPosition, backgroundSize, containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = backgroundSize === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (backgroundSize === 'auto') {\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n        const sizeWidth = parsePosition({ position: sizeW, relativeNum: containerWidth });\n        const sizeHeight = parsePosition({ position: sizeH, relativeNum: containerHeight });\n        const widthRatio = sizeWidth / targetWidth;\n        const heightRatio = sizeHeight / targetHeight;\n        const ratio = Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = ({ hasZoomImg, imgSrc, isSvg, isZoomed, loadedImgEl, offset, shouldRefresh, targetEl, }) => {\n    const hasScalableSrc = isSvg ||\n        imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' ||\n        hasZoomImg ||\n        !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n    const imgRect = targetEl.getBoundingClientRect();\n    const targetElComputedStyle = window.getComputedStyle(targetEl);\n    const isDivImg = loadedImgEl != null && testDiv(targetEl);\n    const isImgObjectFit = loadedImgEl != null && !isDivImg;\n    const styleImgRegular = getImgRegularStyle({\n        containerHeight: imgRect.height,\n        containerLeft: imgRect.left,\n        containerTop: imgRect.top,\n        containerWidth: imgRect.width,\n        hasScalableSrc,\n        offset,\n        targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n        targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\n    });\n    const styleImgObjectFit = isImgObjectFit\n        ? getImgObjectFitStyle({\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            objectFit: targetElComputedStyle.objectFit,\n            objectPosition: targetElComputedStyle.objectPosition,\n            offset,\n            targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n            targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\n        })\n        : undefined;\n    const styleDivImg = isDivImg\n        ? getDivImgStyle({\n            backgroundPosition: targetElComputedStyle.backgroundPosition,\n            backgroundSize: targetElComputedStyle.backgroundSize,\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            offset,\n            targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n            targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\n        })\n        : undefined;\n    const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n    if (isZoomed) {\n        const viewportX = window.innerWidth / 2;\n        const viewportY = window.innerHeight / 2;\n        const childCenterX = parseFloat(String(style.left || 0)) + (parseFloat(String(style.width || 0)) / 2);\n        const childCenterY = parseFloat(String(style.top || 0)) + (parseFloat(String(style.height || 0)) / 2);\n        const translateX = viewportX - childCenterX;\n        const translateY = viewportY - childCenterY;\n        if (shouldRefresh) {\n            style.transitionDuration = '0.01ms';\n        }\n        style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n    }\n    return style;\n};\nconst getStyleGhost = (imgEl) => {\n    if (!imgEl) {\n        return {};\n    }\n    if (testSvg(imgEl)) {\n        const parentEl = imgEl.parentElement;\n        const rect = imgEl.getBoundingClientRect();\n        if (parentEl) {\n            const parentRect = parentEl.getBoundingClientRect();\n            return {\n                height: rect.height,\n                left: parentRect.left - rect.left,\n                top: parentRect.top - rect.top,\n                width: rect.width,\n            };\n        }\n        else {\n            return {\n                height: rect.height,\n                left: rect.left,\n                width: rect.width,\n                top: rect.top,\n            };\n        }\n    }\n    else {\n        return {\n            height: imgEl.offsetHeight,\n            left: imgEl.offsetLeft,\n            width: imgEl.offsetWidth,\n            top: imgEl.offsetTop,\n        };\n    }\n};\nconst adjustSvgIDs = (svgEl) => {\n    const newIdSuffix = '-zoom';\n    const attrs = [\n        'clip-path',\n        'fill',\n        'mask',\n        'marker-start',\n        'marker-mid',\n        'marker-end',\n    ];\n    const idMap = new Map();\n    if (svgEl.hasAttribute('id')) {\n        const oldId = svgEl.id;\n        const newId = oldId + newIdSuffix;\n        idMap.set(oldId, newId);\n        svgEl.id = newId;\n    }\n    svgEl.querySelectorAll('[id]').forEach(el => {\n        const oldId = el.id;\n        const newId = oldId + newIdSuffix;\n        idMap.set(oldId, newId);\n        el.id = newId;\n    });\n    idMap.forEach((newId, oldId) => {\n        const urlOldID = `url(#${oldId})`;\n        const urlNewID = `url(#${newId})`;\n        const attrsQuery = attrs.map(attr => `[${attr}=\"${urlOldID}\"]`).join(', ');\n        svgEl.querySelectorAll(attrsQuery).forEach(usedEl => {\n            attrs.forEach(attr => {\n                if (usedEl.getAttribute(attr) === urlOldID) {\n                    usedEl.setAttribute(attr, urlNewID);\n                }\n            });\n        });\n    });\n    svgEl.querySelectorAll('style').forEach(styleEl => {\n        idMap.forEach((newId, oldId) => {\n            if (styleEl.textContent) {\n                styleEl.textContent = styleEl.textContent.replaceAll(`#${oldId}`, `#${newId}`);\n            }\n        });\n    });\n};\n\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]']\n    .map(x => `${x}:not([aria-hidden=\"true\"])`)\n    .join(',');\nconst defaultBodyAttrs = {\n    overflow: '',\n    width: '',\n};\nfunction Controlled(props) {\n    return React.createElement(ControlledBase, { ...props });\n}\nclass ControlledBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            id: '',\n            isZoomImgLoaded: false,\n            loadedImgEl: undefined,\n            modalState: \"UNLOADED\",\n            shouldRefresh: false,\n            styleGhost: {},\n        };\n        this.refContent = React.createRef();\n        this.refDialog = React.createRef();\n        this.refModalContent = React.createRef();\n        this.refModalImg = React.createRef();\n        this.refWrap = React.createRef();\n        this.imgEl = null;\n        this.isScaling = false;\n        this.prevBodyAttrs = defaultBodyAttrs;\n        this.styleModalImg = {};\n        this.handleModalStateChange = (prevModalState) => {\n            const { modalState } = this.state;\n            if (prevModalState !== \"LOADING\" && modalState === \"LOADING\") {\n                this.loadZoomImg();\n                window.addEventListener('resize', this.handleResize, { passive: true });\n                window.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n                window.addEventListener('touchmove', this.handleTouchMove, { passive: true });\n                window.addEventListener('touchend', this.handleTouchEnd, { passive: true });\n                window.addEventListener('touchcancel', this.handleTouchCancel, { passive: true });\n                document.addEventListener('keydown', this.handleKeyDown, true);\n            }\n            else if (prevModalState !== \"LOADED\" && modalState === \"LOADED\") {\n                window.addEventListener('wheel', this.handleWheel, { passive: true });\n            }\n            else if (prevModalState !== \"UNLOADING\" && modalState === \"UNLOADING\") {\n                this.ensureImgTransitionEnd();\n                window.removeEventListener('wheel', this.handleWheel);\n                window.removeEventListener('touchstart', this.handleTouchStart);\n                window.removeEventListener('touchmove', this.handleTouchMove);\n                window.removeEventListener('touchend', this.handleTouchEnd);\n                window.removeEventListener('touchcancel', this.handleTouchCancel);\n                document.removeEventListener('keydown', this.handleKeyDown, true);\n            }\n            else if (prevModalState !== \"UNLOADED\" && modalState === \"UNLOADED\") {\n                this.bodyScrollEnable();\n                window.removeEventListener('resize', this.handleResize);\n                this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\n                this.refDialog.current?.close?.();\n            }\n        };\n        this.getDialogContainer = () => {\n            let el = document.querySelector('[data-rmiz-portal]');\n            if (el == null) {\n                el = document.createElement('div');\n                el.setAttribute('data-rmiz-portal', '');\n                document.body.appendChild(el);\n            }\n            return el;\n        };\n        this.setId = () => {\n            const gen4 = () => Math.random().toString(16).slice(-4);\n            this.setState({ id: gen4() + gen4() + gen4() });\n        };\n        this.setAndTrackImg = () => {\n            const contentEl = this.refContent.current;\n            if (!contentEl)\n                return;\n            this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n            if (this.imgEl) {\n                this.contentNotFoundChangeObserver?.disconnect?.();\n                this.imgEl.addEventListener('load', this.handleImgLoad);\n                this.imgEl.addEventListener('click', this.handleZoom);\n                if (!this.state.loadedImgEl) {\n                    this.handleImgLoad();\n                }\n                this.imgElResizeObserver = new ResizeObserver(entries => {\n                    const entry = entries[0];\n                    if (entry?.target) {\n                        this.imgEl = entry.target;\n                        this.setState({ styleGhost: getStyleGhost(this.imgEl) });\n                    }\n                });\n                this.imgElResizeObserver.observe(this.imgEl);\n                if (!this.contentChangeObserver) {\n                    this.contentChangeObserver = new MutationObserver(() => {\n                        this.setState({ styleGhost: getStyleGhost(this.imgEl) });\n                    });\n                    this.contentChangeObserver.observe(contentEl, { attributes: true, childList: true, subtree: true });\n                }\n            }\n            else if (!this.contentNotFoundChangeObserver) {\n                this.contentNotFoundChangeObserver = new MutationObserver(this.setAndTrackImg);\n                this.contentNotFoundChangeObserver.observe(contentEl, { childList: true, subtree: true });\n            }\n        };\n        this.handleIfZoomChanged = (prevIsZoomed) => {\n            const { isZoomed } = this.props;\n            if (!prevIsZoomed && isZoomed) {\n                this.zoom();\n            }\n            else if (prevIsZoomed && !isZoomed) {\n                this.unzoom();\n            }\n        };\n        this.handleImgLoad = () => {\n            const imgSrc = getImgSrc(this.imgEl);\n            if (!imgSrc)\n                return;\n            const img = new Image();\n            if (testImg(this.imgEl)) {\n                img.sizes = this.imgEl.sizes;\n                img.srcset = this.imgEl.srcset;\n                img.crossOrigin = this.imgEl.crossOrigin;\n            }\n            img.src = imgSrc;\n            const setLoaded = () => {\n                this.setState({\n                    loadedImgEl: img,\n                    styleGhost: getStyleGhost(this.imgEl),\n                });\n            };\n            img\n                .decode()\n                .then(setLoaded)\n                .catch(() => {\n                if (testImgLoaded(img)) {\n                    setLoaded();\n                    return;\n                }\n                img.onload = setLoaded;\n            });\n        };\n        this.handleZoom = () => {\n            if (this.hasImage()) {\n                this.props.onZoomChange?.(true);\n            }\n        };\n        this.handleUnzoom = () => {\n            this.props.onZoomChange?.(false);\n        };\n        this.handleBtnUnzoomClick = (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.handleUnzoom();\n        };\n        this.handleDialogCancel = (e) => {\n            e.preventDefault();\n        };\n        this.handleDialogClick = (e) => {\n            if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n                e.stopPropagation();\n                this.handleUnzoom();\n            }\n        };\n        this.handleDialogClose = (e) => {\n            e.stopPropagation();\n            this.handleUnzoom();\n        };\n        this.handleKeyDown = (e) => {\n            if (e.key === 'Escape' || e.keyCode === 27) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.handleUnzoom();\n            }\n        };\n        this.handleWheel = (e) => {\n            if (e.ctrlKey)\n                return;\n            e.stopPropagation();\n            queueMicrotask(() => {\n                this.handleUnzoom();\n            });\n        };\n        this.handleTouchStart = (e) => {\n            if (e.touches.length > 1) {\n                this.isScaling = true;\n                return;\n            }\n            if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n                this.touchYStart = e.changedTouches[0].screenY;\n            }\n        };\n        this.handleTouchMove = (e) => {\n            const browserScale = window.visualViewport?.scale ?? 1;\n            if (this.props.canSwipeToUnzoom &&\n                !this.isScaling &&\n                browserScale <= 1 && this.touchYStart != null &&\n                e.changedTouches[0]) {\n                this.touchYEnd = e.changedTouches[0].screenY;\n                const max = Math.max(this.touchYStart, this.touchYEnd);\n                const min = Math.min(this.touchYStart, this.touchYEnd);\n                const delta = Math.abs(max - min);\n                if (delta > this.props.swipeToUnzoomThreshold) {\n                    this.touchYStart = undefined;\n                    this.touchYEnd = undefined;\n                    this.handleUnzoom();\n                }\n            }\n        };\n        this.handleTouchEnd = () => {\n            this.isScaling = false;\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleTouchCancel = () => {\n            this.isScaling = false;\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleResize = () => {\n            this.setState({ shouldRefresh: true });\n        };\n        this.hasImage = () => {\n            return this.imgEl &&\n                (this.state.loadedImgEl || testSvg(this.imgEl)) &&\n                window.getComputedStyle(this.imgEl).display !== 'none';\n        };\n        this.zoom = () => {\n            this.bodyScrollDisable();\n            this.refDialog.current?.showModal?.();\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleImgTransitionEnd);\n            this.setState({ modalState: \"LOADING\" });\n        };\n        this.unzoom = () => {\n            this.setState({ modalState: \"UNLOADING\" });\n        };\n        this.handleImgTransitionEnd = () => {\n            clearTimeout(this.timeoutTransitionEnd);\n            if (this.state.modalState === \"LOADING\") {\n                this.setState({ modalState: \"LOADED\" });\n            }\n            else if (this.state.modalState === \"UNLOADING\") {\n                this.setState({ shouldRefresh: false, modalState: \"UNLOADED\" });\n            }\n        };\n        this.ensureImgTransitionEnd = () => {\n            if (this.refModalImg.current) {\n                const td = window.getComputedStyle(this.refModalImg.current).transitionDuration;\n                const tdFloat = parseFloat(td);\n                if (tdFloat) {\n                    const tdMs = tdFloat * (td.endsWith('ms') ? 1 : 1000) + 50;\n                    this.timeoutTransitionEnd = setTimeout(this.handleImgTransitionEnd, tdMs);\n                }\n            }\n        };\n        this.bodyScrollDisable = () => {\n            this.prevBodyAttrs = {\n                overflow: document.body.style.overflow,\n                width: document.body.style.width,\n            };\n            const clientWidth = document.body.clientWidth;\n            document.body.style.overflow = 'hidden';\n            document.body.style.width = `${clientWidth}px`;\n        };\n        this.bodyScrollEnable = () => {\n            document.body.style.width = this.prevBodyAttrs.width;\n            document.body.style.overflow = this.prevBodyAttrs.overflow;\n            this.prevBodyAttrs = defaultBodyAttrs;\n        };\n        this.loadZoomImg = () => {\n            const { props: { zoomImg } } = this;\n            const zoomImgSrc = zoomImg?.src;\n            if (zoomImgSrc) {\n                const img = new Image();\n                img.sizes = zoomImg?.sizes ?? '';\n                img.srcset = zoomImg?.srcSet ?? '';\n                img.crossOrigin = zoomImg?.crossOrigin ?? undefined;\n                img.src = zoomImgSrc;\n                const setLoaded = () => {\n                    this.setState({ isZoomImgLoaded: true });\n                };\n                img\n                    .decode()\n                    .then(setLoaded)\n                    .catch(() => {\n                    if (testImgLoaded(img)) {\n                        setLoaded();\n                        return;\n                    }\n                    img.onload = setLoaded;\n                });\n            }\n        };\n        this.UNSAFE_handleSvg = () => {\n            const { imgEl, refModalImg, styleModalImg } = this;\n            if (testSvg(imgEl)) {\n                const svgEl = imgEl.cloneNode(true);\n                adjustSvgIDs(svgEl);\n                svgEl.style.width = `${styleModalImg.width || 0}px`;\n                svgEl.style.height = `${styleModalImg.height || 0}px`;\n                svgEl.addEventListener('click', this.handleUnzoom);\n                refModalImg.current?.firstChild?.remove?.();\n                refModalImg.current?.appendChild?.(svgEl);\n            }\n        };\n    }\n    render() {\n        const { handleBtnUnzoomClick, handleDialogCancel, handleDialogClick, handleDialogClose, handleUnzoom, handleZoom, imgEl, props: { a11yNameButtonUnzoom, a11yNameButtonZoom, children, classDialog, IconUnzoom, IconZoom, isZoomed, wrapElement: WrapElement, ZoomContent, zoomImg, zoomMargin, }, refContent, refDialog, refModalContent, refModalImg, refWrap, state: { id, isZoomImgLoaded, loadedImgEl, modalState, shouldRefresh, styleGhost, }, } = this;\n        const idModal = `rmiz-modal-${id}`;\n        const idModalImg = `rmiz-modal-img-${id}`;\n        const isDiv = testDiv(imgEl);\n        const isImg = testImg(imgEl);\n        const isSvg = testSvg(imgEl);\n        const imgAlt = getImgAlt(imgEl);\n        const imgSrc = getImgSrc(imgEl);\n        const imgSizes = isImg ? imgEl.sizes : undefined;\n        const imgSrcSet = isImg ? imgEl.srcset : undefined;\n        const imgCrossOrigin = isImg ? imgEl.crossOrigin : undefined;\n        const hasZoomImg = !!zoomImg?.src;\n        const hasImage = this.hasImage();\n        const labelBtnZoom = imgAlt\n            ? `${a11yNameButtonZoom}: ${imgAlt}`\n            : a11yNameButtonZoom;\n        const isModalActive = modalState === \"LOADING\" ||\n            modalState === \"LOADED\";\n        const dataContentState = hasImage ? 'found' : 'not-found';\n        const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\"\n            ? 'hidden'\n            : 'visible';\n        const styleContent = {\n            visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden',\n        };\n        this.styleModalImg = hasImage\n            ? getStyleModalImg({\n                hasZoomImg,\n                imgSrc,\n                isSvg,\n                isZoomed: isZoomed && isModalActive,\n                loadedImgEl,\n                offset: zoomMargin,\n                shouldRefresh,\n                targetEl: imgEl,\n            })\n            : {};\n        let modalContent = null;\n        if (hasImage) {\n            const modalImg = isImg || isDiv\n                ? React.createElement(\"img\", { alt: imgAlt, crossOrigin: imgCrossOrigin, sizes: imgSizes, src: imgSrc, srcSet: imgSrcSet, ...isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}, \"data-rmiz-modal-img\": \"\", height: this.styleModalImg.height || undefined, id: idModalImg, ref: refModalImg, style: this.styleModalImg, width: this.styleModalImg.width || undefined })\n                : isSvg\n                    ? React.createElement(\"div\", { \"data-rmiz-modal-img\": true, ref: refModalImg, style: this.styleModalImg })\n                    : null;\n            const modalBtnUnzoom = React.createElement(\"button\", { \"aria-label\": a11yNameButtonUnzoom, \"data-rmiz-btn-unzoom\": \"\", onClick: handleBtnUnzoomClick, type: \"button\" },\n                React.createElement(IconUnzoom, null));\n            modalContent = ZoomContent\n                ? React.createElement(ZoomContent, { buttonUnzoom: modalBtnUnzoom, modalState: modalState, img: modalImg, onUnzoom: handleUnzoom })\n                : React.createElement(React.Fragment, null,\n                    modalImg,\n                    modalBtnUnzoom);\n        }\n        return (React.createElement(WrapElement, { \"aria-owns\": idModal, \"data-rmiz\": \"\", ref: refWrap },\n            React.createElement(WrapElement, { \"data-rmiz-content\": dataContentState, ref: refContent, style: styleContent }, children),\n            hasImage && React.createElement(WrapElement, { \"data-rmiz-ghost\": \"\", style: styleGhost },\n                React.createElement(\"button\", { \"aria-label\": labelBtnZoom, \"data-rmiz-btn-zoom\": \"\", onClick: handleZoom, type: \"button\" },\n                    React.createElement(IconZoom, null))),\n            hasImage && ReactDOM.createPortal(React.createElement(\"dialog\", { \"aria-labelledby\": idModalImg, \"aria-modal\": \"true\", className: classDialog, \"data-rmiz-modal\": \"\", id: idModal, onClick: handleDialogClick, onClose: handleDialogClose, onCancel: handleDialogCancel, ref: refDialog, role: \"dialog\" },\n                React.createElement(\"div\", { \"data-rmiz-modal-overlay\": dataOverlayState }),\n                React.createElement(\"div\", { \"data-rmiz-modal-content\": \"\", ref: refModalContent }, modalContent)), this.getDialogContainer())));\n    }\n    componentDidMount() {\n        this.setId();\n        this.setAndTrackImg();\n        this.handleImgLoad();\n        this.UNSAFE_handleSvg();\n    }\n    componentWillUnmount() {\n        if (this.state.modalState !== \"UNLOADED\") {\n            this.bodyScrollEnable();\n        }\n        this.contentChangeObserver?.disconnect?.();\n        this.contentNotFoundChangeObserver?.disconnect?.();\n        this.imgElResizeObserver?.disconnect?.();\n        this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n        this.imgEl?.removeEventListener?.('click', this.handleZoom);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\n        window.removeEventListener('wheel', this.handleWheel);\n        window.removeEventListener('touchstart', this.handleTouchStart);\n        window.removeEventListener('touchmove', this.handleTouchMove);\n        window.removeEventListener('touchend', this.handleTouchEnd);\n        window.removeEventListener('touchcancel', this.handleTouchCancel);\n        window.removeEventListener('resize', this.handleResize);\n        document.removeEventListener('keydown', this.handleKeyDown, true);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        this.handleModalStateChange(prevState.modalState);\n        this.UNSAFE_handleSvg();\n        this.handleIfZoomChanged(prevProps.isZoomed);\n    }\n}\nControlledBase.defaultProps = {\n    a11yNameButtonUnzoom: 'Minimize image',\n    a11yNameButtonZoom: 'Expand image',\n    canSwipeToUnzoom: true,\n    IconUnzoom: ICompress,\n    IconZoom: IEnlarge,\n    swipeToUnzoomThreshold: 10,\n    wrapElement: 'div',\n    zoomMargin: 0,\n};\n\nfunction Uncontrolled(props) {\n    const [isZoomed, setIsZoomed] = React.useState(false);\n    return React.createElement(Controlled, { ...props, isZoomed: isZoomed, onZoomChange: setIsZoomed });\n}\n\nexport { Controlled, Uncontrolled as default };\n"],"names":["testElType","type","el","tagName","toUpperCase","testDiv","testImg","testImgLoaded","complete","naturalHeight","testSvg","getScaleToWindow","height","offset","width","Math","min","window","innerWidth","innerHeight","getScale","containerHeight","containerWidth","hasScalableSrc","targetHeight","targetWidth","scale","ratio","getScaleToWindowMax","URL_REGEX","getImgSrc","imgEl","currentSrc","bgImg","getComputedStyle","backgroundImage","exec","parsePosition","position","relativeNum","positionNum","parseFloat","endsWith","SRC_SVG_REGEX","getStyleModalImg","hasZoomImg","imgSrc","isSvg","isZoomed","loadedImgEl","shouldRefresh","targetEl","slice","test","imgRect","getBoundingClientRect","targetElComputedStyle","isDivImg","isImgObjectFit","styleImgRegular","containerLeft","containerTop","top","left","transform","getImgRegularStyle","naturalWidth","styleImgObjectFit","objectFit","objectPosition","widthRatio","heightRatio","max","posLeft","posTop","split","posX","posY","getImgObjectFitStyle","undefined","styleDivImg","backgroundPosition","backgroundSize","sizeW","sizeH","getDivImgStyle","style","Object","assign","viewportX","viewportY","translateX","String","translateY","transitionDuration","getStyleGhost","parentEl","parentElement","rect","parentRect","offsetHeight","offsetLeft","offsetWidth","offsetTop","IMAGE_QUERY","map","x","join","defaultBodyAttrs","overflow","Controlled","props","ControlledBase","constructor","super","arguments","this","state","id","isZoomImgLoaded","modalState","styleGhost","refContent","refDialog","refModalContent","refModalImg","refWrap","isScaling","prevBodyAttrs","styleModalImg","handleModalStateChange","prevModalState","loadZoomImg","addEventListener","handleResize","passive","handleTouchStart","handleTouchMove","handleTouchEnd","handleTouchCancel","document","handleKeyDown","handleWheel","ensureImgTransitionEnd","removeEventListener","bodyScrollEnable","current","handleImgTransitionEnd","close","getDialogContainer","querySelector","createElement","setAttribute","body","appendChild","setId","gen4","random","toString","setState","setAndTrackImg","contentEl","contentNotFoundChangeObserver","disconnect","handleImgLoad","handleZoom","imgElResizeObserver","ResizeObserver","entries","entry","target","observe","contentChangeObserver","MutationObserver","attributes","childList","subtree","handleIfZoomChanged","prevIsZoomed","zoom","unzoom","img","Image","sizes","srcset","crossOrigin","src","setLoaded","decode","then","catch","onload","hasImage","onZoomChange","handleUnzoom","handleBtnUnzoomClick","e","preventDefault","stopPropagation","handleDialogCancel","handleDialogClick","handleDialogClose","key","keyCode","ctrlKey","queueMicrotask","touches","length","changedTouches","touchYStart","screenY","browserScale","visualViewport","canSwipeToUnzoom","touchYEnd","abs","swipeToUnzoomThreshold","display","bodyScrollDisable","showModal","clearTimeout","timeoutTransitionEnd","td","tdFloat","tdMs","setTimeout","clientWidth","zoomImg","zoomImgSrc","srcSet","UNSAFE_handleSvg","svgEl","cloneNode","newIdSuffix","attrs","idMap","Map","hasAttribute","oldId","newId","set","querySelectorAll","forEach","urlOldID","urlNewID","attrsQuery","attr","usedEl","getAttribute","styleEl","textContent","replaceAll","adjustSvgIDs","firstChild","remove","render","a11yNameButtonUnzoom","a11yNameButtonZoom","children","classDialog","IconUnzoom","IconZoom","wrapElement","WrapElement","ZoomContent","zoomMargin","idModal","idModalImg","isDiv","isImg","imgAlt","alt","getImgAlt","imgSizes","imgSrcSet","imgCrossOrigin","labelBtnZoom","isModalActive","dataContentState","dataOverlayState","styleContent","visibility","modalContent","modalImg","ref","modalBtnUnzoom","onClick","buttonUnzoom","onUnzoom","className","onClose","onCancel","role","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","prevState","Uncontrolled","setIsZoomed","defaultProps","fill","focusable","viewBox","xmlns","d"],"sourceRoot":""}