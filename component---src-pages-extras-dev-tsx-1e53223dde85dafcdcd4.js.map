{"version":3,"file":"component---src-pages-extras-dev-tsx-1e53223dde85dafcdcd4.js","mappings":"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","sources":["webpack://avrtt.blog/./src/images/about/photoAbout.jpg","webpack://avrtt.blog/./src/components/StickerPack/index.tsx","webpack://avrtt.blog/./src/styles/plaques.module.scss","webpack://avrtt.blog/./src/components/HiddenNotice/index.tsx","webpack://avrtt.blog/./src/pages/extras/dev.tsx","webpack://avrtt.blog/./src/images/icon.png","webpack://avrtt.blog/./src/components/seo.tsx","webpack://avrtt.blog/./src/images/spider_web.png","webpack://avrtt.blog/./src/hooks/useSiteMetadata.ts"],"sourcesContent":["export default __webpack_public_path__ + \"static/photoAbout-59cd1848d1acc7ce5078c52886c751d1.jpg\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React, { useState, useEffect } from \"react\";\n\ntype StickerKey = keyof typeof stickerImports;\n\nconst stickerImports = {\n  hater: () => import(\"../../stickers/hater.png\"),\n  babel_tower: () => import(\"../../stickers/babel_tower.png\"),\n  bibizan: () => import(\"../../stickers/bibizan.gif\"),\n  cursed_emoji2: () => import(\"../../stickers/cursed_emoji2.png\"),\n  cursed_emoji1: () => import(\"../../stickers/cursed_emoji1.png\"),\n  mda: () => import(\"../../stickers/mda.png\"),\n  cat_shake: () => import(\"../../stickers/cat_shake.gif\"),\n  nerazdyplenish3: () => import(\"../../stickers/nerazdyplenish3.gif\"),\n  burnt: () => import(\"../../stickers/burnt.gif\"),\n  chad: () => import(\"../../stickers/chad.gif\"),\n  hedgehog: () => import(\"../../stickers/hedgehog.gif\"),\n  yoba_dovolen: () => import(\"../../stickers/yoba_dovolen.png\"),\n  pug_dance: () => import(\"../../stickers/pug_dance.gif\"),\n  pepe_chair: () => import(\"../../stickers/pepe_chair.gif\"),\n  pepe_serious: () => import(\"../../stickers/pepe_serious.gif\"),\n  pepe_run: () => import(\"../../stickers/pepe_run.gif\"),\n  pepe_punch: () => import(\"../../stickers/pepe_punch.gif\"),\n  pepe_agree: () => import(\"../../stickers/pepe_agree.gif\"),\n  pepe_pledik: () => import(\"../../stickers/pepe_pledik.png\"),\n  cat_stand: () => import(\"../../stickers/cat_stand.png\"),\n  cat_sleep: () => import(\"../../stickers/cat_sleep.png\"),\n  nerazdyplenish2: () => import(\"../../stickers/nerazdyplenish2.png\"),\n  nerazdyplenish1: () => import(\"../../stickers/nerazdyplenish1.png\"),\n  morshu_gnome: () => import(\"../../stickers/morshu_gnome.png\"),\n  cat_bw: () => import(\"../../stickers/cat_bw.png\"),\n  pepe_mage: () => import(\"../../stickers/pepe_mage.png\"),\n  pepe_linux: () => import(\"../../stickers/pepe_linux.png\"),\n  yoba_pledik: () => import(\"../../stickers/yoba_pledik.png\"),\n  pepe_chill: () => import(\"../../stickers/pepe_chill.png\"),\n  pepe_meditation: () => import(\"../../stickers/pepe_meditation.png\"),\n  trollface: () => import(\"../../stickers/trollface.png\"),\n  cat_smile: () => import(\"../../stickers/cat_smile.png\"),\n  beluga: () => import(\"../../stickers/beluga.png\"),\n  pepe_money: () => import(\"../../stickers/pepe_money.gif\"),\n  pepe_cry: () => import(\"../../stickers/pepe_cry.gif\"),\n  pepe_dance: () => import(\"../../stickers/pepe_dance.gif\"),\n  dog_nerd: () => import(\"../../stickers/dog_nerd.png\"),\n  cat_ya_piska: () => import(\"../../stickers/cat_ya_piska.png\"),\n  gandonio: () => import(\"../../stickers/gandonio.png\"),\n  pepe_wink: () => import(\"../../stickers/pepe_wink.gif\"),\n};\n\nconst StickerPack: React.FC<StickerPackProps> = ({ sticker, marginLeft = \"4px\", marginRight = \"0px\" }) => {\n  const [stickerSrc, setStickerSrc] = useState<string | null>(null);\n\n  useEffect(() => {\n    // check if the sticker key exists in our map\n    const stickerKey = sticker as StickerKey;\n    if (stickerImports[stickerKey]) {\n      stickerImports[stickerKey]().then((module: { default: string }) => setStickerSrc(module.default));\n    }\n  }, [sticker]);\n\n  if (!stickerSrc) return null; // avoid rendering until loaded\n\n  const stickerStyle = {\n    width: \"1.8em\",\n    height: \"1.8em\",\n    verticalAlign: \"middle\",\n    marginTop: \"-10px\",\n    marginRight: marginRight,\n    marginLeft: marginLeft,\n  }\n\n  return <img alt=\"sticker\" style={stickerStyle} src={stickerSrc} />\n}\n\nexport default StickerPack\n\n","// extracted by mini-css-extract-plugin\nexport var greyNotice = \"plaques-module--greyNotice--b6d5a\";\nexport var greyNoticeCompact = \"plaques-module--greyNoticeCompact--45c5f\";\nexport var yellowNotice = \"plaques-module--yellowNotice--5d0ef\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\"\nimport M from \"../Markdown\"\nimport StickerPack from \"../../components/StickerPack\"\nimport * as stylesPlaques from \"../../styles/plaques.module.scss\"\n\nconst HiddenNotice = () => {\n  return (\n\t<>\n    \t<div className={stylesPlaques.greyNoticeCompact}>\n\t\t\t<h2><StickerPack sticker=\"beluga\" marginLeft=\"0px\" marginRight=\"0.2em\"/> Non-public page</h2>\n        \t<M text=\"For some reason, this page was hidden from the public or even never published. You can't find it in the list of pages/posts, and it's not indexed by search engines. It's probably referenced elsewhere. Anyway, this is the dark side of my blog, the technical backrooms, and all kinds of weird crap could be found here.\"/>\n    \t</div>\n\t</>\n  );\n};\nexport default HiddenNotice;\n\n\n","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\"\nimport SEO from '../../components/seo'\nimport { Link } from \"gatsby\"\nimport web from \"../../images/spider_web.png\"\nimport HiddenNotice from \"../../components/HiddenNotice\"\nimport S from \"../../components/Shine\"\n\nconst Dev = () => {\n  return (\n    <>\n      <div\n        className=\"noselect\"\n        style={{\n          backgroundColor: \"black\",\n          position: \"fixed\",\n          overflow: \"scroll\",\n          top: 0,\n          left: 0,\n          width: \"100vw\",\n          height: \"100vh\",\n        }}\n      >\n        <img \n            src={web} \n            style={{ \n                width: \"14rem\", \n                position: \"absolute\",  \n                top: \"-0.4rem\", \n                right: \"-0.2rem\", \n                opacity: 0.5,\n                transition: \"opacity 0.5s ease-out\"\n            }} \n        />\n        <div style={{ position: \"absolute\", left: \"0%\", right: \"15%\", marginInline: \"auto\", width: \"75%\", marginTop: \"1%\" }}>\n          <S sparkleFrequency = {300} sparkleSize = {[10, 16]}>\n            <p style={{ fontWeight: \"900\", backgroundColor: \"#f2f2f2\", width: \"fit-content\", padding: \"0.5rem 1rem\", borderRadius: \"2vh\" }}>ð¥ You've found one of the Easter eggs!</p>\n          </S>\n          <HiddenNotice/>\n        </div>\n        <div style={{ marginTop: \"50vh\", marginLeft: \"5%\" }}>\n          <Link to=\"/dev\">.</Link><br/>\n          <Link to=\"/\">..</Link><br/>\n          <Link to=\"/dev/null\">/null</Link><br/>\n          <Link to=\"/dev/magnitoshakhtinsk\">/magnitoshakhtinsk</Link><br/>\n          <Link to=\"/dev/backrooms\">/qwerty</Link><br/>\n          <Link to=\"/dev/crawler_test\">/crawler_test</Link><br/>\n          <Link to=\"/all\">~/all</Link><br/>\n          <Link to=\"/asd\">~/asd</Link><br/>\n          <Link to=\"/redroom\">~/redroom</Link><br/>\n          <Link to=\"/123\">~/123</Link><br/>\n          <Link to=\"/1\">~/1</Link><br/>\n          <Link to=\"/f\">~/f</Link><br/>\n          <Link to=\"/entity\">~/entity</Link><br/>\n          <Link to=\"/adventures/magnitoshakhtinsk\">~/adventures/magnitoshakhtinsk</Link><br/>\n          <Link to=\"/backrooms\">~/backrooms</Link> ? <br/>\n          <Link to=\"/avrtt\">~/avrtt</Link> ? <br/>\n          <Link to=\"/null\">~/null</Link><br/>\n          <br/><br/><br/>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dev;\n\nexport const Head = () => (\n  <SEO \n    title=\"/dev\"\n    flagHidden={true}\n  />\n)\n","export default __webpack_public_path__ + \"static/icon-6e7479889441613ea062cf3d71374ab6.png\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport React from \"react\"\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\"\nimport icon from \"../images/icon.png\"\nimport photoAbout from \"../images/about/photoAbout.jpg\";\n\nfunction convertToISO(dateString: string): string {\n  const [day, month, year] = dateString.split('.').map(Number);\n  const date = new Date(year, month - 1, day);\n  return date.toISOString();\n}\n\ninterface SchemaProps {\n  schemaType: \"Article\" | \"BlogPosting\" | \"WebPage\" | \"ContactPage\" | \"Course\";\n  title: string;\n  description: string;\n  author: string;\n  photo: string;\n  datePublished?: string;\n  dateModified?: string;\n  url: string;\n  image?: string;\n  siteName: string;\n  siteUrl: string;\n  siteLogo: string;\n  keywords: string[] | string;\n  section: string;\n}\n\nconst generateSchema = ({\n  schemaType,\n  title,\n  description,\n  author,\n  photo,\n  datePublished,\n  dateModified,\n  url,\n  image,\n  siteName,\n  siteUrl,\n  siteLogo,\n  keywords,\n  section,\n}: SchemaProps): Record<string, any> => {\n\n  const baseSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": schemaType,\n    url,\n    description,\n  }\n\n  if (schemaType === \"Article\" || schemaType === \"BlogPosting\") {\n    return {\n      ...baseSchema,\n      headline: title,\n      image: image ? [image] : undefined,\n      datePublished: datePublished || undefined,\n      dateModified: dateModified || datePublished || undefined,\n      articleSection: section,\n      author: {\n        \"@type\": \"Person\",\n        name: author,\n        image: photo,\n        description: \"Traveler, content creator, data scientist, AI researcher, developer, musician.\",\n        url: `${siteUrl}/about`,\n        sameAs: [\n          \"https://youtube.com/@vladaverett\",\n          \"https://instagram.com/avrttv\",\n          \"https://twitter.com/vladaverett\",\n          \"https://tiktok.com/@vladaverett\",\n          \"https://github.com/avrtt\",\n          \"https://facebook.com/vladaverett\",\n          \"https://youtube.com/@avheuristics\",\n          \"https://t.me/venturingforth\",\n          \"https://t.me/avheuristics\",\n          \"https://kaggle.com/lenferdetroud\",\n          \"https://couchsurfing.com/people/averett\",\n          \"https://youtube.com/@noiserett\",\n          \"https://facebook.com/averett.freelance\",\n          \"https://facebook.com/avrttblog\",\n        ],\n      },\n      publisher: {\n        \"@type\": \"Organization\",\n        name: siteName,\n        logo: {\n          \"@type\": \"ImageObject\",\n          url: siteLogo,\n        },\n      },\n      mainEntityOfPage: url,\n      keywords: Array.isArray(keywords) ? keywords.join(\", \") : keywords\n    }\n  }\n\n  return {\n    ...baseSchema,\n    name: title,\n  }\n}\n\ninterface SEOProps {\n  title?: string;\n  titleOG?: string;\n  titleTwitter?: string;\n  description?: string;\n  descriptionOG?: string;\n  descriptionTwitter?: string;\n  schemaType?: \"Article\" | \"BlogPosting\" | \"WebPage\" | \"CollectionPage\" | \"Person\" | \"ContactPage\" | \"Course\";\n  keywords?: string[] | string;\n  datePublished?: string;\n  dateModified?: string;\n  image?: string;\n  siteUrl?: string;\n  siteName?: string;\n  author?: string;\n  twitterUsername?: string;\n  facebookUsername?: string;\n  imageOG?: string;\n  imageAltOG?: string;\n  imageTwitter?: string;\n  imageAltTwitter?: string;\n  imageWidth?: string;\n  imageHeight?: string;\n  canonicalUrl?: string;\n  flagHidden?: boolean;\n  section?: string;\n  mainTag?: string;\n  type?: string; // for og\n  children?: React.ReactNode;\n}\n\nconst SEO: React.FC<SEOProps> = ({\n  title,\n  titleOG,\n  titleTwitter,\n  description,\n  descriptionOG,\n  descriptionTwitter,\n  schemaType = \"WebPage\",\n  keywords,\n  datePublished,\n  dateModified,\n  image,\n  siteUrl,\n  siteName,\n  author,\n  twitterUsername,\n  facebookUsername,\n  imageOG,\n  imageAltOG,\n  imageTwitter,\n  imageAltTwitter,\n  imageWidth,\n  imageHeight,\n  canonicalUrl,\n  flagHidden = false,\n  section,\n  mainTag,\n  type = \"website\", // for og\n  children,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image: defaultImage,\n    siteUrl: defaultSiteUrl,\n    siteName: defaultSiteName,\n    author: defaultAuthor,\n    twitterUsername: defaultTwitterUsername,\n    facebookUsername: defaultFacebookUsername,\n  } = useSiteMetadata()\n\n  // fallbacks\n  const seoTitle = title || defaultTitle\n  const ogTitle = titleOG || seoTitle\n  const twTitle = titleTwitter || seoTitle\n  const seoDescription = description || defaultDescription\n  const ogDescription = descriptionOG || seoDescription\n  const twDescription = descriptionTwitter || seoDescription\n  const seoImage = image\n    ? (image.startsWith(\"http\") ? image : `${defaultSiteUrl}${image}`)\n    : `${defaultSiteUrl}${defaultImage}`\n  const ogImage = imageOG || seoImage\n  const ogImageAlt = imageAltOG || ogDescription\n  const twImage = imageTwitter || seoImage\n  const twImageAlt = imageAltTwitter || twDescription\n  const seoSiteUrl = siteUrl || defaultSiteUrl\n  const seoSiteName = siteName || defaultSiteName\n  const seoCanonical = canonicalUrl || seoSiteUrl\n  const seoAuthor = author || defaultAuthor\n  const seoDatePublished = datePublished ? convertToISO(datePublished) : new Date().toISOString()\n  const seoDateModified = dateModified ? convertToISO(dateModified) : seoDatePublished\n  const seoTwitterUsername = twitterUsername || defaultTwitterUsername\n  const seoFacebookUsername = facebookUsername || defaultFacebookUsername\n  const seoKeywords = keywords || [\"\"]\n  const seoTag = mainTag || \"\"\n  const seoSection = section || \"\"\n  \n  let seoSectionClarified = \"\";\n  if (section === \"adventures\") { \n    seoSectionClarified = \"Travel\";\n  } else if (section === \"research\") { \n    seoSectionClarified = \"Technology\";\n  } else if (section === \"thoughts\") { \n    seoSectionClarified = \"Thoughts\";\n  }\n\n  const schemaJSON = generateSchema({\n    schemaType,\n    title: seoTitle,\n    description: seoDescription,\n    author: seoAuthor,\n    photo: photoAbout,\n    datePublished: seoDatePublished,\n    dateModified: seoDateModified,\n    url: seoCanonical,\n    image: seoImage,\n    siteName: seoSiteName,\n    siteUrl: seoSiteUrl,\n    siteLogo: icon,\n    keywords: seoKeywords,\n    section: seoSection,\n  })\n\n  return (\n    <>\n      <title>{seoTitle}</title>\n      <meta name=\"description\" content={seoDescription} />\n\n      {seoCanonical && <link rel=\"canonical\" href={seoCanonical} />}\n\n      {seoKeywords && (\n        <meta\n          name=\"keywords\"\n          content={Array.isArray(seoKeywords) ? seoKeywords.join(\", \") : seoKeywords}\n        />\n      )}\n\n      <meta property=\"og:title\" content={ogTitle} />\n      <meta property=\"og:description\" content={ogDescription} />\n      <meta property=\"og:updated_time\" content={seoDateModified} />\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:url\" content={seoCanonical} />\n      <meta property=\"og:site_name\" content={seoSiteName} />\n      {ogImage && <meta property=\"og:image\" content={ogImage} />}\n      {imageWidth && <meta property=\"og:image:width\" content={imageWidth} />}\n      {imageHeight && <meta property=\"og:image:height\" content={imageHeight} />}\n      <meta property=\"og:image:alt\" content={ogImageAlt} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      {seoTwitterUsername && (<meta name=\"twitter:creator\" content={seoTwitterUsername} />)}\n      {seoTwitterUsername && (<meta name=\"twitter:site\" content={seoTwitterUsername} />)}\n      <meta name=\"twitter:title\" content={twTitle} />\n      <meta name=\"twitter:description\" content={twDescription} />\n      {twImage && <meta name=\"twitter:image\" content={twImage} />}\n      <meta name=\"twitter:image:alt\" content={twImageAlt} />\n\n      {type === \"article\" && (<meta property=\"article:published_time\" content={seoDatePublished} />)}\n      {type === \"article\" && (<meta property=\"article:modified_time\" content={seoDateModified} />)}\n      {type === \"article\" && seoSectionClarified && (<meta property=\"article:section\" content={seoSectionClarified} />)}\n      {type === \"article\" && seoAuthor && (<meta property=\"article:author\" content={seoAuthor} />)}\n      {type === \"article\" && seoFacebookUsername && (<meta property=\"article:publisher\" content={`https://www.facebook.com/${seoFacebookUsername}`} />)}\n      {type === \"article\" && seoTag && (<meta property=\"article:tag\" content={seoTag} />)}\n      {type === \"article\" && Array.isArray(seoKeywords) && \n        seoKeywords.map((keyword, i) => (\n          <meta key={i} property=\"article:tag\" content={keyword} />\n        ))\n      }\n\n      <meta name=\"robots\" content={flagHidden ? \"noindex, nofollow\" : \"index, follow\"} />\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaJSON)}\n      </script>\n\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n","export default __webpack_public_path__ + \"static/spider_web-389a114866995ce2cee3c7b66818f670.png\";","/* \n\nCopyright Â© 2022  Vladislav Averett (avrtt)\nDistributed under the GNU AGPLv3 license. For details and source code, please refer to <https://github.com/avrtt/avrtt.github.io>.\n\n*/\n\nimport { graphql, useStaticQuery } from \"gatsby\"\n\ninterface SiteMetadata {\n  title: string;\n  description: string;\n  image: string;\n  siteUrl: string;\n  siteName: string;\n  author: string;\n  twitterUsername: string;\n  facebookUsername: string;\n}\n\nexport const useSiteMetadata = (): SiteMetadata => {\n  const { site } = useStaticQuery<{ site: { siteMetadata: SiteMetadata } }>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            image\n            siteUrl\n            siteName\n            author\n            twitterUsername\n            facebookUsername\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}"],"names":["stickerImports","hater","babel_tower","bibizan","cursed_emoji2","cursed_emoji1","mda","cat_shake","nerazdyplenish3","burnt","chad","hedgehog","yoba_dovolen","pug_dance","pepe_chair","pepe_serious","pepe_run","pepe_punch","pepe_agree","pepe_pledik","cat_stand","cat_sleep","nerazdyplenish2","nerazdyplenish1","morshu_gnome","cat_bw","pepe_mage","pepe_linux","yoba_pledik","pepe_chill","pepe_meditation","trollface","cat_smile","beluga","pepe_money","pepe_cry","pepe_dance","dog_nerd","cat_ya_piska","gandonio","pepe_wink","_ref","sticker","marginLeft","marginRight","stickerSrc","setStickerSrc","useState","useEffect","stickerKey","then","module","default","stickerStyle","width","height","verticalAlign","marginTop","React","alt","style","src","greyNoticeCompact","yellowNotice","HiddenNotice","className","stylesPlaques","StickerPack","M","text","Dev","backgroundColor","position","overflow","top","left","web","right","opacity","transition","marginInline","S","sparkleFrequency","sparkleSize","fontWeight","padding","borderRadius","Link","to","Head","SEO","title","flagHidden","convertToISO","dateString","day","month","year","split","map","Number","Date","toISOString","_ref2","titleOG","titleTwitter","description","descriptionOG","descriptionTwitter","schemaType","keywords","datePublished","dateModified","image","siteUrl","siteName","author","twitterUsername","facebookUsername","imageOG","imageAltOG","imageTwitter","imageAltTwitter","imageWidth","imageHeight","canonicalUrl","section","mainTag","type","children","defaultTitle","defaultDescription","defaultImage","defaultSiteUrl","defaultSiteName","defaultAuthor","defaultTwitterUsername","defaultFacebookUsername","useSiteMetadata","seoTitle","ogTitle","twTitle","seoDescription","ogDescription","twDescription","seoImage","startsWith","ogImage","ogImageAlt","twImage","twImageAlt","seoSiteUrl","seoSiteName","seoCanonical","seoAuthor","seoDatePublished","seoDateModified","seoTwitterUsername","seoFacebookUsername","seoKeywords","seoTag","seoSection","seoSectionClarified","schemaJSON","photo","url","siteLogo","baseSchema","headline","undefined","articleSection","name","sameAs","publisher","logo","mainEntityOfPage","Array","isArray","join","generateSchema","photoAbout","icon","content","rel","href","property","keyword","i","key","JSON","stringify","site","useStaticQuery","siteMetadata"],"sourceRoot":""}